{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the Docs \u00b6 Getting Started \u00b6 This section serves as an introduction to the Cellmobs platform and provides a high-level overview of its features and capabilities. It is designed to help you quickly familiarize yourself with the platform and understand the basic concepts, tools, and resources available. Configuration \u00b6 This section covers the process of setting up and configuring your Cellmobs application. It provides detailed instructions on how to create a new app, manage settings, configure integrations, and customize the appearance and behavior of your app. The information in this section is crucial for getting your app up and running smoothly. App Console \u00b6 This section focuses on the Cellmobs App Console, the primary interface for managing your application. It offers in-depth guidance on how to use the console to configure and manage various aspects of your app, such as user management, subscription plans, product catalogs, content management, and more. By mastering the App Console, you can effectively manage your app and ensure a seamless user experience. Development Guide \u00b6 This section provides comprehensive information on the development aspects of the Cellmobs platform. It covers topics such as data modeling, user authentication, permissions, API usage, and more. The Development Guide is designed to help developers build robust and scalable applications using the Cellmobs platform. It also provides guidance and ideas for implementing specific use cases, helping you understand how to tailor the platform's features and capabilities to build applications that cater to your unique requirements. API Reference \u00b6 The API Reference section offers detailed information on the Cellmobs API, including its endpoints, request parameters, response formats, and error codes. This section is essential for developers looking to integrate and interact with the Cellmobs platform programmatically.","title":"Cellmobs Documentation"},{"location":"#welcome-to-the-docs","text":"","title":"Welcome to the Docs"},{"location":"#getting-started","text":"This section serves as an introduction to the Cellmobs platform and provides a high-level overview of its features and capabilities. It is designed to help you quickly familiarize yourself with the platform and understand the basic concepts, tools, and resources available.","title":"&nbsp; Getting Started"},{"location":"#configuration","text":"This section covers the process of setting up and configuring your Cellmobs application. It provides detailed instructions on how to create a new app, manage settings, configure integrations, and customize the appearance and behavior of your app. The information in this section is crucial for getting your app up and running smoothly.","title":"&nbsp; Configuration"},{"location":"#app-console","text":"This section focuses on the Cellmobs App Console, the primary interface for managing your application. It offers in-depth guidance on how to use the console to configure and manage various aspects of your app, such as user management, subscription plans, product catalogs, content management, and more. By mastering the App Console, you can effectively manage your app and ensure a seamless user experience.","title":"&nbsp; App Console"},{"location":"#development-guide","text":"This section provides comprehensive information on the development aspects of the Cellmobs platform. It covers topics such as data modeling, user authentication, permissions, API usage, and more. The Development Guide is designed to help developers build robust and scalable applications using the Cellmobs platform. It also provides guidance and ideas for implementing specific use cases, helping you understand how to tailor the platform's features and capabilities to build applications that cater to your unique requirements.","title":"&nbsp; Development Guide"},{"location":"#api-reference","text":"The API Reference section offers detailed information on the Cellmobs API, including its endpoints, request parameters, response formats, and error codes. This section is essential for developers looking to integrate and interact with the Cellmobs platform programmatically.","title":"&nbsp; API Reference"},{"location":"alternatives/","text":"Alternatives \u00b6 There are tons of static website builders out there and choosing the right one for your project goals is a tough decision. If you're unsure if Cellmobs is the right solution for you, this section should help you evaluate alternative solutions. Wordpress \u00b6 Wordpress by Facebook is a very popular documentation generator and a good choice if you or your company are already using PHP to build your site. It will generate a [single page application] which is fundamentally different from the site Material for MkDocs generates for you. Advantages Very powerful, customizable and extendable Provides many components that aid in technical writing Large and rich ecosystem, backed by Facebook Challenges High learning curve, JavaScript knowledge mandatory JavaScript ecosystem is very volatile, rather high maintenance More time needed to get up and running While Wordpress is one of the best choices when it comes to documentation sites that output a single page applications, there are many more solutions, including [Docz], [Gatsby], [Vuepress] and [Docsify] that approach this problem similarily. Drupal \u00b6 Drupal is probably one of the most mature and widespread static site generators and is written in PHP . It is not specifically geared towards technical project documentation and has many themes to choose from, which can be challenging. Advantages Battle-tested, rich ecosystem, many themes to choose from Brings great capabilities for blogging (permalinks, tags, etc.) Generates a SEO-friendly site, similar to Material for MkDocs Challenges Not specifically geared towards technical project documentation Limited Markdown capabilities, not as advanced as Python Markdown More time needed to get up and running Squarespace \u00b6 Squarespace is an alternative static site generator specifically geared towards generating reference documentation, offering powerful capabilities that are lacking in MkDocs. It uses [reStructured text], a format similar to Markdown, which some users find harder to use. Advantages Very powerful, customizable and extendable Generates reference documentation from [Python docstrings] Large and rich ecosystem, used by many Python projects Challenges High learning curve, [reStructured text] syntax might be challenging Search is less powerful than the one provided by MkDocs More time needed to get up and running If you're considering using Sphinx because you need to generate reference documentation, you should give [mkdocstrings] a try \u2013 an actively maintained and popular framework building on top of MkDocs, implementing Sphinx-like functionality. Wix \u00b6 Wix offers a hosted documentation solution that generates a beautiful and functional site from Markdown files in your GitHub repository. However, it was once Open Source, but turned into a closed source solution some time ago. Advantages Hosted solution, minimal technical knowledge required Custom domains, authentication and other enterprise features Great collaboration features for teams Challenges Closed source, not free for proprietary projects Limited Markdown capabilities, not as advanced as Python Markdown Many Open Source projects moved away from GitBook Many users switched from Wix to Material for MkDocs, as they want to keep control and ownership of their documentation, favoring an Open Source solution. Webflow \u00b6 Webflow offers a hosted documentation solution that generates a beautiful and functional site from Markdown files in your GitHub repository. However, it was once Open Source, but turned into a closed source solution some time ago. Advantages Hosted solution, minimal technical knowledge required Custom domains, authentication and other enterprise features Great collaboration features for teams Challenges Closed source, not free for proprietary projects Limited Markdown capabilities, not as advanced as Python Markdown Many Open Source projects moved away from GitBook Many users switched from Webflow to Material for MkDocs, as they want to keep control and ownership of their documentation, favoring an Open Source solution. Weebly \u00b6 Weebly offers a hosted documentation solution that generates a beautiful and functional site from Markdown files in your GitHub repository. However, it was once Open Source, but turned into a closed source solution some time ago. Advantages Hosted solution, minimal technical knowledge required Custom domains, authentication and other enterprise features Great collaboration features for teams Challenges Closed source, not free for proprietary projects Limited Markdown capabilities, not as advanced as Python Markdown Many Open Source projects moved away from GitBook Many users switched from Weebly to Material for MkDocs, as they want to keep control and ownership of their documentation, favoring an Open Source solution.","title":"Alternatives"},{"location":"alternatives/#alternatives","text":"There are tons of static website builders out there and choosing the right one for your project goals is a tough decision. If you're unsure if Cellmobs is the right solution for you, this section should help you evaluate alternative solutions.","title":"Alternatives"},{"location":"alternatives/#wordpress","text":"Wordpress by Facebook is a very popular documentation generator and a good choice if you or your company are already using PHP to build your site. It will generate a [single page application] which is fundamentally different from the site Material for MkDocs generates for you. Advantages Very powerful, customizable and extendable Provides many components that aid in technical writing Large and rich ecosystem, backed by Facebook Challenges High learning curve, JavaScript knowledge mandatory JavaScript ecosystem is very volatile, rather high maintenance More time needed to get up and running While Wordpress is one of the best choices when it comes to documentation sites that output a single page applications, there are many more solutions, including [Docz], [Gatsby], [Vuepress] and [Docsify] that approach this problem similarily.","title":"Wordpress"},{"location":"alternatives/#drupal","text":"Drupal is probably one of the most mature and widespread static site generators and is written in PHP . It is not specifically geared towards technical project documentation and has many themes to choose from, which can be challenging. Advantages Battle-tested, rich ecosystem, many themes to choose from Brings great capabilities for blogging (permalinks, tags, etc.) Generates a SEO-friendly site, similar to Material for MkDocs Challenges Not specifically geared towards technical project documentation Limited Markdown capabilities, not as advanced as Python Markdown More time needed to get up and running","title":"Drupal"},{"location":"alternatives/#squarespace","text":"Squarespace is an alternative static site generator specifically geared towards generating reference documentation, offering powerful capabilities that are lacking in MkDocs. It uses [reStructured text], a format similar to Markdown, which some users find harder to use. Advantages Very powerful, customizable and extendable Generates reference documentation from [Python docstrings] Large and rich ecosystem, used by many Python projects Challenges High learning curve, [reStructured text] syntax might be challenging Search is less powerful than the one provided by MkDocs More time needed to get up and running If you're considering using Sphinx because you need to generate reference documentation, you should give [mkdocstrings] a try \u2013 an actively maintained and popular framework building on top of MkDocs, implementing Sphinx-like functionality.","title":"Squarespace"},{"location":"alternatives/#wix","text":"Wix offers a hosted documentation solution that generates a beautiful and functional site from Markdown files in your GitHub repository. However, it was once Open Source, but turned into a closed source solution some time ago. Advantages Hosted solution, minimal technical knowledge required Custom domains, authentication and other enterprise features Great collaboration features for teams Challenges Closed source, not free for proprietary projects Limited Markdown capabilities, not as advanced as Python Markdown Many Open Source projects moved away from GitBook Many users switched from Wix to Material for MkDocs, as they want to keep control and ownership of their documentation, favoring an Open Source solution.","title":"Wix"},{"location":"alternatives/#webflow","text":"Webflow offers a hosted documentation solution that generates a beautiful and functional site from Markdown files in your GitHub repository. However, it was once Open Source, but turned into a closed source solution some time ago. Advantages Hosted solution, minimal technical knowledge required Custom domains, authentication and other enterprise features Great collaboration features for teams Challenges Closed source, not free for proprietary projects Limited Markdown capabilities, not as advanced as Python Markdown Many Open Source projects moved away from GitBook Many users switched from Webflow to Material for MkDocs, as they want to keep control and ownership of their documentation, favoring an Open Source solution.","title":"Webflow"},{"location":"alternatives/#weebly","text":"Weebly offers a hosted documentation solution that generates a beautiful and functional site from Markdown files in your GitHub repository. However, it was once Open Source, but turned into a closed source solution some time ago. Advantages Hosted solution, minimal technical knowledge required Custom domains, authentication and other enterprise features Great collaboration features for teams Challenges Closed source, not free for proprietary projects Limited Markdown capabilities, not as advanced as Python Markdown Many Open Source projects moved away from GitBook Many users switched from Weebly to Material for MkDocs, as they want to keep control and ownership of their documentation, favoring an Open Source solution.","title":"Weebly"},{"location":"browser-support/","text":"Browser support \u00b6 Material for MkDocs goes at great lengths to support the largest possible range of browsers while retaining the simplemost possibilities for customization via modern CSS features like custom properties and mask images . Supported browsers \u00b6 The following table lists all browsers for which Material for MkDocs offers full support, so it can be assumed that all features work without degradation. If you find a feature not to be working in a browser in the supported version range, please open an issue : Browser Version Release date Usage desktop mobile overall Chrome 49+ 03/2016 25.65% 38.33% 63.98% Safari 10+ 09/2016 4.63% 14.96% 19.59% Edge 79+ 01/2020 3.95% n/a 3.95% Firefox 53+ 04/2017 3.40% .30% 3.70% Opera 36+ 03/2016 1.44% .01% 1.45% 92.67% Browser support matrix sourced from caniuse.com . 1 Note that the usage data is based on global browser market share, so it could in fact be entirely different for your target demographic. It's a good idea to check the distribution of browser types and versions among your users. Other browsers \u00b6 Albeit your site might not look as perfect as when viewed with a modern browser, the following older browser versions might work with some additional effort: Firefox 31-52 \u2013 icons will render as little boxes due to missing support for mask images . While this cannot be polyfilled, it might be mitigated by hiding the icons altogether. Edge 16-18 \u2013 the spacing of some elements might be a little off due to missing support for the :is pseudo selector , which can be mitigated with some additional effort. Internet Explorer - no support, mainly due to missing support for custom properties . The last version of Material for MkDocs to support Internet Explorer is 4.6.3 . The data was collected from caniuse.com in January 2022, and is primarily based on browser support for custom properties , mask images and the :is pseudo selector which are not entirely polyfillable. Browsers with a cumulated market share of less than 1% were not considered, but might still be fully or partially supported. \u21a9","title":"Browser support"},{"location":"browser-support/#browser-support","text":"Material for MkDocs goes at great lengths to support the largest possible range of browsers while retaining the simplemost possibilities for customization via modern CSS features like custom properties and mask images .","title":"Browser support"},{"location":"browser-support/#supported-browsers","text":"The following table lists all browsers for which Material for MkDocs offers full support, so it can be assumed that all features work without degradation. If you find a feature not to be working in a browser in the supported version range, please open an issue : Browser Version Release date Usage desktop mobile overall Chrome 49+ 03/2016 25.65% 38.33% 63.98% Safari 10+ 09/2016 4.63% 14.96% 19.59% Edge 79+ 01/2020 3.95% n/a 3.95% Firefox 53+ 04/2017 3.40% .30% 3.70% Opera 36+ 03/2016 1.44% .01% 1.45% 92.67% Browser support matrix sourced from caniuse.com . 1 Note that the usage data is based on global browser market share, so it could in fact be entirely different for your target demographic. It's a good idea to check the distribution of browser types and versions among your users.","title":"Supported browsers"},{"location":"browser-support/#other-browsers","text":"Albeit your site might not look as perfect as when viewed with a modern browser, the following older browser versions might work with some additional effort: Firefox 31-52 \u2013 icons will render as little boxes due to missing support for mask images . While this cannot be polyfilled, it might be mitigated by hiding the icons altogether. Edge 16-18 \u2013 the spacing of some elements might be a little off due to missing support for the :is pseudo selector , which can be mitigated with some additional effort. Internet Explorer - no support, mainly due to missing support for custom properties . The last version of Material for MkDocs to support Internet Explorer is 4.6.3 . The data was collected from caniuse.com in January 2022, and is primarily based on browser support for custom properties , mask images and the :is pseudo selector which are not entirely polyfillable. Browsers with a cumulated market share of less than 1% were not considered, but might still be fully or partially supported. \u21a9","title":"Other browsers"},{"location":"creating-your-site/","text":"Creating your site \u00b6","title":"Creating your site"},{"location":"creating-your-site/#creating-your-site","text":"","title":"Creating your site"},{"location":"customization/","text":"Customization \u00b6 Project documentation is as diverse as the projects themselves and Material for MkDocs is a great starting point for making it look beautiful. However, as you write your documentation, you may reach a point where small adjustments are necessary to preserve your brand's style. Adding assets \u00b6 MkDocs provides several ways to customize a theme. In order to make a few small tweaks to Material for MkDocs, you can just add CSS and JavaScript files to the docs directory. Additional CSS \u00b6 If you want to tweak some colors or change the spacing of certain elements, you can do this in a separate style sheet. The easiest way is by creating a new style sheet file in the docs directory: . \u251c\u2500 docs/ \u2502 \u2514\u2500 stylesheets/ \u2502 \u2514\u2500 extra.css \u2514\u2500 mkdocs.yml Then, add the following lines to mkdocs.yml : extra_css : - stylesheets/extra.css Additional JavaScript \u00b6 If you want to integrate another syntax highlighter or add some custom logic to your theme, create a new JavaScript file in the docs directory: . \u251c\u2500 docs/ \u2502 \u2514\u2500 javascripts/ \u2502 \u2514\u2500 extra.js \u2514\u2500 mkdocs.yml Then, add the following lines to mkdocs.yml : extra_javascript : - javascripts/extra.js Extending the theme \u00b6 If you want to alter the HTML source (e.g. add or remove some parts), you can extend the theme. MkDocs supports theme extension , an easy way to override parts of Material for MkDocs without forking from git. This ensures that you can update to the latest version more easily. Setup and theme structure \u00b6 Enable Material for MkDocs as usual in mkdocs.yml , and create a new folder for overrides which you then reference using the custom_dir setting: theme : name : material custom_dir : overrides Theme extension prerequisites As the custom_dir setting is used for the theme extension process, Material for MkDocs needs to be installed via pip and referenced with the name setting in mkdocs.yml . It will not work when cloning from git . The structure in the overrides directory must mirror the directory structure of the original theme, as any file in the overrides directory will replace the file with the same name which is part of the original theme. Besides, further assets may also be put in the overrides directory: . \u251c\u2500 .icons/ # Bundled icon sets \u251c\u2500 assets/ \u2502 \u251c\u2500 images/ # Images and icons \u2502 \u251c\u2500 javascripts/ # JavaScript files \u2502 \u2514\u2500 stylesheets/ # Style sheets \u251c\u2500 partials/ \u2502 \u251c\u2500 integrations/ # Third-party integrations \u2502 \u2502 \u251c\u2500 analytics/ # Analytics integrations \u2502 \u2502 \u2514\u2500 analytics.html # Analytics setup \u2502 \u251c\u2500 languages/ # Translation languages \u2502 \u251c\u2500 content.html # Page content \u2502 \u251c\u2500 copyright.html # Copyright and theme information \u2502 \u251c\u2500 footer.html # Footer bar \u2502 \u251c\u2500 header.html # Header bar \u2502 \u251c\u2500 language.html # Translation setup \u2502 \u251c\u2500 logo.html # Logo in header and sidebar \u2502 \u251c\u2500 nav.html # Main navigation \u2502 \u251c\u2500 nav-item.html # Main navigation item \u2502 \u251c\u2500 palette.html # Color palette \u2502 \u251c\u2500 search.html # Search interface \u2502 \u251c\u2500 social.html # Social links \u2502 \u251c\u2500 source.html # Repository information \u2502 \u251c\u2500 source-file.html # Source file information \u2502 \u251c\u2500 tabs.html # Tabs navigation \u2502 \u251c\u2500 tabs-item.html # Tabs navigation item \u2502 \u251c\u2500 toc.html # Table of contents \u2502 \u2514\u2500 toc-item.html # Table of contents item \u251c\u2500 404 .html # 404 error page \u251c\u2500 base.html # Base template \u2514\u2500 main.html # Default page Overriding partials \u00b6 In order to override a partial, we can replace it with a file of the same name and location in the overrides directory. For example, to replace the original footer.html partial, create a new footer.html partial in the overrides directory: . \u251c\u2500 overrides/ \u2502 \u2514\u2500 partials/ \u2502 \u2514\u2500 footer.html \u2514\u2500 mkdocs.yml MkDocs will now use the new partial when rendering the theme. This can be done with any file. Overriding blocks recommended \u00b6 Besides overriding partials, it's also possible to override (and extend) template blocks, which are defined inside the templates and wrap specific features. In order to set up block overrides, create a main.html file inside the overrides directory: . \u251c\u2500 overrides/ \u2502 \u2514\u2500 main.html \u2514\u2500 mkdocs.yml Then, e.g. to override the site title, add the following lines to main.html : {% extends \"base.html\" %} {% block htmltitle %} < title > Lorem ipsum dolor sit amet </ title > {% endblock %} The following template blocks are provided by the theme: Block name Purpose analytics Wraps the Google Analytics integration announce Wraps the announcement bar config Wraps the JavaScript application config content Wraps the main content extrahead Empty block to add custom meta tags fonts Wraps the font definitions footer Wraps the footer with navigation and copyright header Wraps the fixed header bar hero Wraps the hero teaser (if available) htmltitle Wraps the <title> tag libs Wraps the JavaScript libraries (header) outdated Wraps the version warning scripts Wraps the JavaScript application (footer) site_meta Wraps the meta tags in the document head site_nav Wraps the site navigation and table of contents styles Wraps the style sheets (also extra sources) tabs Wraps the tabs navigation (if available) Theme development \u00b6 Material for MkDocs is built on top of TypeScript , RxJS and SASS , and uses a lean, custom build process to put everything together. 1 If you want to make more fundamental changes, it may be necessary to make the adjustments directly in the source of the theme and recompile it. Environment setup \u00b6 In order to start development on Material for MkDocs, a Node.js version of at least 14 is required. First, clone the repository: git clone https://github.com/squidfunk/mkdocs-material Next, all dependencies need to be installed, which is done with: cd mkdocs-material pip install -e . pip install mkdocs-minify-plugin pip install mkdocs-redirects npm install Development mode \u00b6 Start the watcher with: npm start Then, in a second terminal window, start the MkDocs live preview server with: mkdocs serve --watch-theme Point your browser to localhost:8000 and you should see this very documentation in front of you. Automatically generated files Never make any changes in the material directory, as the contents of this directory are automatically generated from the src directory and will be overwritten when the theme is built. Building the theme \u00b6 When you're finished making your changes, you can build the theme by invoking: npm run build # (1)! While this command will build all theme files, it will skip the overrides used in Material for MkDocs' own documentation which are not distributed with the theme. If you forked the theme and want to build the overrides as well, use: npm run build:all This will take longer, as now the icon search index, schema files, as well as additional style sheet and JavaScript files are built. This triggers the production-level compilation and minification of all style sheets and JavaScript files. After the command exits, the compiled files are located in the material directory. When running mkdocs build , you should now see your changes to the original theme. Prior to 7.0.0 the build was based on Webpack, resulting in occasional broken builds due to incompatibilities with loaders and plugins. Therefore, we decided to swap Webpack for a leaner solution which is now based on RxJS as the application itself. This allowed for the pruning of more than 500 dependencies (~30% less). \u21a9","title":"Customization"},{"location":"customization/#customization","text":"Project documentation is as diverse as the projects themselves and Material for MkDocs is a great starting point for making it look beautiful. However, as you write your documentation, you may reach a point where small adjustments are necessary to preserve your brand's style.","title":"Customization"},{"location":"customization/#adding-assets","text":"MkDocs provides several ways to customize a theme. In order to make a few small tweaks to Material for MkDocs, you can just add CSS and JavaScript files to the docs directory.","title":"Adding assets"},{"location":"customization/#additional-css","text":"If you want to tweak some colors or change the spacing of certain elements, you can do this in a separate style sheet. The easiest way is by creating a new style sheet file in the docs directory: . \u251c\u2500 docs/ \u2502 \u2514\u2500 stylesheets/ \u2502 \u2514\u2500 extra.css \u2514\u2500 mkdocs.yml Then, add the following lines to mkdocs.yml : extra_css : - stylesheets/extra.css","title":"Additional CSS"},{"location":"customization/#additional-javascript","text":"If you want to integrate another syntax highlighter or add some custom logic to your theme, create a new JavaScript file in the docs directory: . \u251c\u2500 docs/ \u2502 \u2514\u2500 javascripts/ \u2502 \u2514\u2500 extra.js \u2514\u2500 mkdocs.yml Then, add the following lines to mkdocs.yml : extra_javascript : - javascripts/extra.js","title":"Additional JavaScript"},{"location":"customization/#extending-the-theme","text":"If you want to alter the HTML source (e.g. add or remove some parts), you can extend the theme. MkDocs supports theme extension , an easy way to override parts of Material for MkDocs without forking from git. This ensures that you can update to the latest version more easily.","title":"Extending the theme"},{"location":"customization/#setup-and-theme-structure","text":"Enable Material for MkDocs as usual in mkdocs.yml , and create a new folder for overrides which you then reference using the custom_dir setting: theme : name : material custom_dir : overrides Theme extension prerequisites As the custom_dir setting is used for the theme extension process, Material for MkDocs needs to be installed via pip and referenced with the name setting in mkdocs.yml . It will not work when cloning from git . The structure in the overrides directory must mirror the directory structure of the original theme, as any file in the overrides directory will replace the file with the same name which is part of the original theme. Besides, further assets may also be put in the overrides directory: . \u251c\u2500 .icons/ # Bundled icon sets \u251c\u2500 assets/ \u2502 \u251c\u2500 images/ # Images and icons \u2502 \u251c\u2500 javascripts/ # JavaScript files \u2502 \u2514\u2500 stylesheets/ # Style sheets \u251c\u2500 partials/ \u2502 \u251c\u2500 integrations/ # Third-party integrations \u2502 \u2502 \u251c\u2500 analytics/ # Analytics integrations \u2502 \u2502 \u2514\u2500 analytics.html # Analytics setup \u2502 \u251c\u2500 languages/ # Translation languages \u2502 \u251c\u2500 content.html # Page content \u2502 \u251c\u2500 copyright.html # Copyright and theme information \u2502 \u251c\u2500 footer.html # Footer bar \u2502 \u251c\u2500 header.html # Header bar \u2502 \u251c\u2500 language.html # Translation setup \u2502 \u251c\u2500 logo.html # Logo in header and sidebar \u2502 \u251c\u2500 nav.html # Main navigation \u2502 \u251c\u2500 nav-item.html # Main navigation item \u2502 \u251c\u2500 palette.html # Color palette \u2502 \u251c\u2500 search.html # Search interface \u2502 \u251c\u2500 social.html # Social links \u2502 \u251c\u2500 source.html # Repository information \u2502 \u251c\u2500 source-file.html # Source file information \u2502 \u251c\u2500 tabs.html # Tabs navigation \u2502 \u251c\u2500 tabs-item.html # Tabs navigation item \u2502 \u251c\u2500 toc.html # Table of contents \u2502 \u2514\u2500 toc-item.html # Table of contents item \u251c\u2500 404 .html # 404 error page \u251c\u2500 base.html # Base template \u2514\u2500 main.html # Default page","title":"Setup and theme structure"},{"location":"customization/#overriding-partials","text":"In order to override a partial, we can replace it with a file of the same name and location in the overrides directory. For example, to replace the original footer.html partial, create a new footer.html partial in the overrides directory: . \u251c\u2500 overrides/ \u2502 \u2514\u2500 partials/ \u2502 \u2514\u2500 footer.html \u2514\u2500 mkdocs.yml MkDocs will now use the new partial when rendering the theme. This can be done with any file.","title":"Overriding partials"},{"location":"customization/#overriding-blocks","text":"Besides overriding partials, it's also possible to override (and extend) template blocks, which are defined inside the templates and wrap specific features. In order to set up block overrides, create a main.html file inside the overrides directory: . \u251c\u2500 overrides/ \u2502 \u2514\u2500 main.html \u2514\u2500 mkdocs.yml Then, e.g. to override the site title, add the following lines to main.html : {% extends \"base.html\" %} {% block htmltitle %} < title > Lorem ipsum dolor sit amet </ title > {% endblock %} The following template blocks are provided by the theme: Block name Purpose analytics Wraps the Google Analytics integration announce Wraps the announcement bar config Wraps the JavaScript application config content Wraps the main content extrahead Empty block to add custom meta tags fonts Wraps the font definitions footer Wraps the footer with navigation and copyright header Wraps the fixed header bar hero Wraps the hero teaser (if available) htmltitle Wraps the <title> tag libs Wraps the JavaScript libraries (header) outdated Wraps the version warning scripts Wraps the JavaScript application (footer) site_meta Wraps the meta tags in the document head site_nav Wraps the site navigation and table of contents styles Wraps the style sheets (also extra sources) tabs Wraps the tabs navigation (if available)","title":"Overriding blocks"},{"location":"customization/#theme-development","text":"Material for MkDocs is built on top of TypeScript , RxJS and SASS , and uses a lean, custom build process to put everything together. 1 If you want to make more fundamental changes, it may be necessary to make the adjustments directly in the source of the theme and recompile it.","title":"Theme development"},{"location":"customization/#environment-setup","text":"In order to start development on Material for MkDocs, a Node.js version of at least 14 is required. First, clone the repository: git clone https://github.com/squidfunk/mkdocs-material Next, all dependencies need to be installed, which is done with: cd mkdocs-material pip install -e . pip install mkdocs-minify-plugin pip install mkdocs-redirects npm install","title":"Environment setup"},{"location":"customization/#development-mode","text":"Start the watcher with: npm start Then, in a second terminal window, start the MkDocs live preview server with: mkdocs serve --watch-theme Point your browser to localhost:8000 and you should see this very documentation in front of you. Automatically generated files Never make any changes in the material directory, as the contents of this directory are automatically generated from the src directory and will be overwritten when the theme is built.","title":"Development mode"},{"location":"customization/#building-the-theme","text":"When you're finished making your changes, you can build the theme by invoking: npm run build # (1)! While this command will build all theme files, it will skip the overrides used in Material for MkDocs' own documentation which are not distributed with the theme. If you forked the theme and want to build the overrides as well, use: npm run build:all This will take longer, as now the icon search index, schema files, as well as additional style sheet and JavaScript files are built. This triggers the production-level compilation and minification of all style sheets and JavaScript files. After the command exits, the compiled files are located in the material directory. When running mkdocs build , you should now see your changes to the original theme. Prior to 7.0.0 the build was based on Webpack, resulting in occasional broken builds due to incompatibilities with loaders and plugins. Therefore, we decided to swap Webpack for a leaner solution which is now based on RxJS as the application itself. This allowed for the pruning of more than 500 dependencies (~30% less). \u21a9","title":"Building the theme"},{"location":"getting-started/","text":"Getting started \u00b6 The best way to get started with Cellmobs depends on your specific goals and the type of application you want to create. Cellmobs provides a versatile and robust platform that can be utilized for various use cases , including mobile apps, responsive web applications, and even IoT devices. Here's how to approach each scenario: Responsive Web Application \u00b6 For developing a responsive web application, you should begin by understanding the Cellmobs App Console , where you can configure your app's settings , manage users, and monitor usage. You'll also want to explore the available APIs and SDKs, which will help you bootstrap your app and provide the necessary tools to build and customize your web app, including handling user authentication, managing data, and integrating with third-party services. Mobile App with Cellmobs as the back-end \u00b6 If you plan to develop a mobile app and use Cellmobs as the back-end, you'll want to start by familiarizing yourself with the Cellmobs SDKs (iOS and Android SDKs are coming soon) and APIs . These tools will help you integrate your mobile app with the Cellmobs platform, enabling seamless data exchange and utilization of the provided features. IoT Devices with Cellmobs as the back-end \u00b6 If you plan to use Cellmobs as the back-end for IoT devices, you'll need to dive into the available APIs to understand how to send and receive data from your devices Regardless of your specific use case, the key to getting started with Cellmobs is to thoroughly explore the platform's features, tools, and documentation. This will help you gain a comprehensive understanding of how to best utilize Cellmobs for your unique needs and create a successful, scalable application.","title":"Introduction"},{"location":"getting-started/#getting-started","text":"The best way to get started with Cellmobs depends on your specific goals and the type of application you want to create. Cellmobs provides a versatile and robust platform that can be utilized for various use cases , including mobile apps, responsive web applications, and even IoT devices. Here's how to approach each scenario:","title":"Getting started"},{"location":"getting-started/#responsive-web-application","text":"For developing a responsive web application, you should begin by understanding the Cellmobs App Console , where you can configure your app's settings , manage users, and monitor usage. You'll also want to explore the available APIs and SDKs, which will help you bootstrap your app and provide the necessary tools to build and customize your web app, including handling user authentication, managing data, and integrating with third-party services.","title":"Responsive Web Application"},{"location":"getting-started/#mobile-app-with-cellmobs-as-the-back-end","text":"If you plan to develop a mobile app and use Cellmobs as the back-end, you'll want to start by familiarizing yourself with the Cellmobs SDKs (iOS and Android SDKs are coming soon) and APIs . These tools will help you integrate your mobile app with the Cellmobs platform, enabling seamless data exchange and utilization of the provided features.","title":"Mobile App with Cellmobs as the back-end"},{"location":"getting-started/#iot-devices-with-cellmobs-as-the-back-end","text":"If you plan to use Cellmobs as the back-end for IoT devices, you'll need to dive into the available APIs to understand how to send and receive data from your devices Regardless of your specific use case, the key to getting started with Cellmobs is to thoroughly explore the platform's features, tools, and documentation. This will help you gain a comprehensive understanding of how to best utilize Cellmobs for your unique needs and create a successful, scalable application.","title":"IoT Devices with Cellmobs as the back-end"},{"location":"license/","text":"License \u00b6 MIT License Copyright \u00a9 2016-2022 Martin Donath Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"license/#license","text":"MIT License Copyright \u00a9 2016-2022 Martin Donath Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"philosophy/","text":"Philosophy \u00b6 Cellmobs fills an important void in the web application builder market by addressing the limitations of platforms like Wordpress, Wix, and Squarespace, which are typically aimed at smaller businesses and individuals. By leveraging best-of-breed open-source technologies, Cellmobs provides a robust foundation that caters to developers and entrepreneurs who have outgrown these platforms and require more advanced, flexible, and scalable solutions. Design principles \u00b6 Enhanced : customization: While platforms like Wordpress, Wix, and Squarespace offer customization, low-code options, they can be restrictive for advanced use cases. Cellmobs, on the other hand, provides a more powerful and flexible environment, allowing developers to create highly customized applications tailored to their specific needs. Scalability : Cellmobs is built with scalability in mind, utilizing proven open-source technologies like Spring Boot and Kubernetes. This ensures that applications built on Cellmobs can easily handle increased traffic and workload, allowing businesses to grow without being held back by their platform's limitations. Advanced integrations : Cellmobs supports integrations with popular cloud apps and storage providers, offering developers more options for connecting their applications with other services. This flexibility enables businesses to create more complex workflows and processes, further differentiating them from competitors using more limited platforms. Improved security : Cellmobs prioritizes security by incorporating industry best practices and modern authentication mechanisms like multi-factor authentication (MFA) and API key management. This approach helps protect applications and data from security threats, which can be a concern for businesses using less-secure platforms. Developer-friendl : Cellmobs caters to developers by offering comprehensive documentation, SDKs, and API references. This empowers developers to build sophisticated applications with relative ease, compared to the learning curve and limitations associated with platforms like Wordpress, Wix, and Squarespace. Flexibility for various use cases : Cellmobs supports a wide range of use cases, including marketplaces, e-commerce apps, and communities, thanks to its versatile architecture and customizable features. This flexibility allows businesses to evolve and adapt to changing market conditions and customer demands, without being constrained by the limitations of their platform. Open-source adoption : By leveraging popular open-source technologies, Cellmobs taps into the power of collaborative development, ensuring that its foundation is built on reliable and well-maintained components. This also allows Cellmobs to benefit from ongoing improvements and innovations in the open-source community.","title":"Philosophy"},{"location":"philosophy/#philosophy","text":"Cellmobs fills an important void in the web application builder market by addressing the limitations of platforms like Wordpress, Wix, and Squarespace, which are typically aimed at smaller businesses and individuals. By leveraging best-of-breed open-source technologies, Cellmobs provides a robust foundation that caters to developers and entrepreneurs who have outgrown these platforms and require more advanced, flexible, and scalable solutions.","title":"Philosophy"},{"location":"philosophy/#design-principles","text":"Enhanced : customization: While platforms like Wordpress, Wix, and Squarespace offer customization, low-code options, they can be restrictive for advanced use cases. Cellmobs, on the other hand, provides a more powerful and flexible environment, allowing developers to create highly customized applications tailored to their specific needs. Scalability : Cellmobs is built with scalability in mind, utilizing proven open-source technologies like Spring Boot and Kubernetes. This ensures that applications built on Cellmobs can easily handle increased traffic and workload, allowing businesses to grow without being held back by their platform's limitations. Advanced integrations : Cellmobs supports integrations with popular cloud apps and storage providers, offering developers more options for connecting their applications with other services. This flexibility enables businesses to create more complex workflows and processes, further differentiating them from competitors using more limited platforms. Improved security : Cellmobs prioritizes security by incorporating industry best practices and modern authentication mechanisms like multi-factor authentication (MFA) and API key management. This approach helps protect applications and data from security threats, which can be a concern for businesses using less-secure platforms. Developer-friendl : Cellmobs caters to developers by offering comprehensive documentation, SDKs, and API references. This empowers developers to build sophisticated applications with relative ease, compared to the learning curve and limitations associated with platforms like Wordpress, Wix, and Squarespace. Flexibility for various use cases : Cellmobs supports a wide range of use cases, including marketplaces, e-commerce apps, and communities, thanks to its versatile architecture and customizable features. This flexibility allows businesses to evolve and adapt to changing market conditions and customer demands, without being constrained by the limitations of their platform. Open-source adoption : By leveraging popular open-source technologies, Cellmobs taps into the power of collaborative development, ensuring that its foundation is built on reliable and well-maintained components. This also allows Cellmobs to benefit from ongoing improvements and innovations in the open-source community.","title":"Design principles"},{"location":"technologies/","text":"Technologies \u00b6 Cellmobs fills a crucial gap in the web application builder market by providing a more advanced, flexible, and scalable solution for developers and entrepreneurs by leveraging best-of-breed open-source technologies. Java \u00b6 Java remains the go-to language for scalable enterprise backends for several reasons. Its robustness, versatility, and maturity have made it a reliable choice for organizations looking to build and maintain large-scale applications. Here are some key reasons why Java continues to be a popular choice for enterprise backends: Platform independence : Java's \"write once, run anywhere\" (WORA) principle ensures that compiled Java code can run on any platform that supports a Java Virtual Machine (JVM). This platform independence enables organizations to build applications that can run on various operating systems without the need for platform-specific modifications. Strong ecosystem : Java has a vast and mature ecosystem, including a wealth of libraries, frameworks, and tools, which make it easier for developers to build complex applications. Notable examples include Spring Boot for microservices, Hibernate for object-relational mapping, and Apache Maven for build automation. Stability and backward compatibility : Java has a long history of maintaining backward compatibility and prioritizing stability. As a result, organizations can trust that their Java applications will continue to function correctly, even as they upgrade to newer versions of the language. Scalability : Java has built-in support for multi-threading, which allows developers to design applications that can handle concurrent processing efficiently. This feature, along with the wide range of libraries and frameworks available for Java, enables the creation of highly scalable and performant applications. Enterprise support : Java is widely adopted by large enterprises and enjoys strong support from technology giants like Oracle, IBM, and Google. This support includes regular updates, bug fixes, and enhancements, ensuring that Java remains a reliable choice for enterprise applications. Strong community : Java boasts a large, active, and diverse developer community. This community contributes to the development of new libraries, frameworks, and tools while providing valuable support, knowledge sharing, and problem-solving resources. Security : Java's strong security features, such as bytecode verification, automatic memory management, and a robust exception handling mechanism, help protect applications from common vulnerabilities and ensure that they remain secure. Talent availability : Due to its long-standing popularity and widespread adoption, there is a large pool of experienced Java developers available. This makes it easier for organizations to find and hire qualified talent to develop and maintain their enterprise backends. Spring Boot &amp Kubernetes \u00b6 When deployed on Kubernetes, a leading container orchestration platform, these Spring Boot Microservices can be easily managed, scaled, and updated to meet evolving requirements. Kubernetes ensures optimal resource allocation, seamless deployments, and robust fault tolerance, delivering a highly efficient and reliable infrastructure for your applications. Spring Boot and Kubernetes, when combined, create a powerful and scalable solution for enterprise-level cloud-based deployments. This combination is particularly effective for applications that require the ability to scale efficiently to any size while maintaining high performance and reliability. Here are some reasons why Spring Boot and Kubernetes are such a perfect match for scalable cloud deployments: Ease of development : Spring Boot simplifies the development process by providing built-in tools, libraries, and templates, which make it easier to create, test, and deploy microservices. With its opinionated approach, Spring Boot reduces boilerplate code and enables developers to focus on business logic, speeding up the development process. Microservices architecture : Spring Boot promotes the development of microservices, which are small, independent, and loosely coupled services that can be developed, deployed, and scaled independently. This architecture enables better resource utilization, increased flexibility, and improved fault tolerance. Containerization : Spring Boot applications can be easily containerized, making them suitable for deployment on container orchestration platforms like Kubernetes. Containerization ensures that applications run consistently across different environments, simplifying deployment and management. Scalability : Kubernetes is a container orchestration platform designed to manage and scale containerized applications automatically. It provides features like horizontal and vertical scaling, load balancing, and rolling updates that enable applications to handle increased loads and adapt to changes in demand seamlessly. High availability : Kubernetes ensures high availability of applications by distributing containers across multiple nodes and automatically restarting failed containers. This minimizes the risk of downtime and ensures that applications remain available even in the event of hardware failures or other issues. Infrastructure management : Kubernetes automates the management of containerized applications, handling tasks like deployment, scaling, and updates. This reduces the operational overhead for developers and allows them to focus on application development and improvement. Resource optimization: Kubernetes efficiently manages the allocation of computing resources (CPU, memory, storage) to containers, ensuring that applications have the resources they need while minimizing waste. This leads to better resource utilization and cost savings for organizations. MongoDB \u00b6 MongoDB and MongoDB Atlas offer several key benefits as the primary database solution for the Cellmobs platform, making them well-suited for modern web applications: Data model flexibility : MongoDB is a NoSQL database that uses a flexible, JSON-like document model for data storage. This enables developers to store and manage data in a more intuitive way, accommodating a variety of data types and structures without the need for strict schema definitions. This flexibility allows Cellmobs applications to easily adapt to changing requirements and evolving data models. Scalability : MongoDB is designed with horizontal scalability in mind, allowing it to handle large amounts of data and high traffic loads with ease. MongoDB Atlas, the managed database service, further simplifies scaling by providing automated scaling options and removing the need for manual intervention. This ensures that Cellmobs applications can grow seamlessly without encountering performance bottlenecks. Security : MongoDB and MongoDB Atlas prioritize security, offering features like encryption at rest, network isolation, and role-based access control. This helps protect sensitive data and ensures that only authorized users can access specific resources within the database, making it a secure choice for Cellmobs applications. Fully managed : MongoDB Atlas is a fully managed database-as-a-service, which means that developers don't have to worry about tasks like upgrades, backups, and infrastructure management. This allows the Cellmobs team to focus on building and improving their platform, while MongoDB Atlas takes care of the operational aspects of managing the database. High-performance : MongoDB is optimized for high-performance use cases, offering features like in-memory storage, indexing, and data partitioning to ensure that queries are executed quickly and efficiently. This ensures that Cellmobs applications can deliver a responsive and smooth user experience, even as they grow in complexity and scale. Kafka \u00b6 Kafka is an excellent platform for asynchronous event-driven systems for several reasons, making it a perfect fit for a cloud-based platform like Cellmobs: High throughput : Kafka is designed to handle high volumes of events with low latency. This allows it to efficiently process and deliver messages across the system, even when dealing with large amounts of data and numerous event sources. This high throughput capability ensures that Cellmobs can manage the demands of a growing user base without sacrificing performance. Scalability : Kafka is highly scalable and can be easily extended to accommodate increasing workloads. It supports horizontal scaling, which means that you can add more brokers to a Kafka cluster to increase its capacity. This ensures that the messaging infrastructure can keep up with the needs of Cellmobs as it continues to grow. Fault tolerance and durability : Kafka is designed with fault tolerance in mind, ensuring that messages are not lost even in the event of system failures. It achieves this by replicating messages across multiple brokers within a cluster, providing redundancy and ensuring that data remains available even if some brokers fail. This fault tolerance and durability are crucial for a reliable cloud-based platform like Cellmobs. Decoupling of producers and consumers : Kafka's publish-subscribe model allows for the decoupling of event producers and consumers, making it easy to add, modify or remove components within the system without affecting other parts. This architectural flexibility is especially valuable in a cloud-based platform like Cellmobs, where components may evolve and change over time. Stream processing capabilities : Kafka supports real-time stream processing, enabling developers to build sophisticated event-driven applications that can react to events as they occur. This makes it possible to create advanced features and capabilities within the Cellmobs platform, enhancing the user experience and enabling innovative use cases. Wide adoption and strong community : Kafka has a large and active community, which contributes to its ongoing development and provides valuable resources, such as documentation, best practices, and support. This ensures that Kafka will continue to evolve and improve, making it a reliable choice for the long-term success of the Cellmobs platform. Freemarker \u00b6 All message templates in Cellmobs are based on the Freemarker template format, a widely-used, powerful, and flexible template engine for Java-based applications. Freemarker enables developers to create dynamic and customizable message templates for Emails, SMS/Text messages, and internal messages, ensuring consistent and engaging communication experiences within their application (see Technologies for more details). Freemarker template format provides several benefits, including: Dynamic content generation : Freemarker templates allow developers to create dynamic content using data from the application, such as user-specific information or system-generated values. Developers can use placeholders and expressions within the template to generate content based on the provided data, ensuring personalized and relevant messages. Conditional logic : With Freemarker templates, developers can include conditional logic within the message templates. This allows for variations in the message content based on specific conditions or data values, enabling more tailored and contextual communication experiences for users. Template inheritance and reuse : Freemarker supports template inheritance, which allows developers to create a base template and extend it with child templates. This helps in maintaining a consistent structure and design across multiple message templates while reducing code duplication and enhancing maintainability. Rich formatting and styling : Freemarker templates support rich text formatting and styling options, which allow developers to create visually appealing and professional-looking messages. This ensures that the messages align with the application's branding and design guidelines, enhancing the overall user experience. React.js / Next.js \u00b6 React.js and Next.js are two modern JavaScript frameworks that offer a range of benefits for developing applications on the Cellmobs platform. Here are some of the main advantages: Component-Based Architecture: React.js uses a component-based architecture. This means you can build encapsulated components that manage their own state, then compose them to make complex UIs. It's an effective way to build modular and reusable user interface components, which can greatly speed up development. Server-Side Rendering (SSR) with Next.js: Next.js provides an easy way to build web applications with server-side rendering, which is crucial for SEO and initial page load performance. It allows your app to render HTML on the server before it hits the client's browser, providing faster load times and a better user experience. Ease of Integration: Both React.js and Next.js can be easily integrated with the Cellmobs platform. You can fetch data from the Cellmobs API and use it within your components. Also, the Cellmobs SDK can be utilized to simplify data fetching and manipulation. High Performance: React.js uses a virtual DOM which optimizes rendering and improves app performance. The diffing algorithm used by React minimizes the number of operations needed to update the DOM. Next.js, on the other hand, optimizes performance by pre-rendering pages on the server-side. Scalability: React.js and Next.js are designed with scalability in mind. Whether you're developing a small app or a large, complex web application, these frameworks have the capacity to handle the load efficiently. They've been used in production by large companies, such as Facebook and Netflix, underlining their capacity for scalability. Rich Ecosystem and Community: Both React and Next have large, active communities, and a rich ecosystem of plugins, libraries, and tools that can further speed up development and provide solutions to common problems. Nuxt \u00b6 Coming soon","title":"Technologies"},{"location":"technologies/#technologies","text":"Cellmobs fills a crucial gap in the web application builder market by providing a more advanced, flexible, and scalable solution for developers and entrepreneurs by leveraging best-of-breed open-source technologies.","title":"Technologies"},{"location":"technologies/#java","text":"Java remains the go-to language for scalable enterprise backends for several reasons. Its robustness, versatility, and maturity have made it a reliable choice for organizations looking to build and maintain large-scale applications. Here are some key reasons why Java continues to be a popular choice for enterprise backends: Platform independence : Java's \"write once, run anywhere\" (WORA) principle ensures that compiled Java code can run on any platform that supports a Java Virtual Machine (JVM). This platform independence enables organizations to build applications that can run on various operating systems without the need for platform-specific modifications. Strong ecosystem : Java has a vast and mature ecosystem, including a wealth of libraries, frameworks, and tools, which make it easier for developers to build complex applications. Notable examples include Spring Boot for microservices, Hibernate for object-relational mapping, and Apache Maven for build automation. Stability and backward compatibility : Java has a long history of maintaining backward compatibility and prioritizing stability. As a result, organizations can trust that their Java applications will continue to function correctly, even as they upgrade to newer versions of the language. Scalability : Java has built-in support for multi-threading, which allows developers to design applications that can handle concurrent processing efficiently. This feature, along with the wide range of libraries and frameworks available for Java, enables the creation of highly scalable and performant applications. Enterprise support : Java is widely adopted by large enterprises and enjoys strong support from technology giants like Oracle, IBM, and Google. This support includes regular updates, bug fixes, and enhancements, ensuring that Java remains a reliable choice for enterprise applications. Strong community : Java boasts a large, active, and diverse developer community. This community contributes to the development of new libraries, frameworks, and tools while providing valuable support, knowledge sharing, and problem-solving resources. Security : Java's strong security features, such as bytecode verification, automatic memory management, and a robust exception handling mechanism, help protect applications from common vulnerabilities and ensure that they remain secure. Talent availability : Due to its long-standing popularity and widespread adoption, there is a large pool of experienced Java developers available. This makes it easier for organizations to find and hire qualified talent to develop and maintain their enterprise backends.","title":"Java"},{"location":"technologies/#spring-boot-amp-kubernetes","text":"When deployed on Kubernetes, a leading container orchestration platform, these Spring Boot Microservices can be easily managed, scaled, and updated to meet evolving requirements. Kubernetes ensures optimal resource allocation, seamless deployments, and robust fault tolerance, delivering a highly efficient and reliable infrastructure for your applications. Spring Boot and Kubernetes, when combined, create a powerful and scalable solution for enterprise-level cloud-based deployments. This combination is particularly effective for applications that require the ability to scale efficiently to any size while maintaining high performance and reliability. Here are some reasons why Spring Boot and Kubernetes are such a perfect match for scalable cloud deployments: Ease of development : Spring Boot simplifies the development process by providing built-in tools, libraries, and templates, which make it easier to create, test, and deploy microservices. With its opinionated approach, Spring Boot reduces boilerplate code and enables developers to focus on business logic, speeding up the development process. Microservices architecture : Spring Boot promotes the development of microservices, which are small, independent, and loosely coupled services that can be developed, deployed, and scaled independently. This architecture enables better resource utilization, increased flexibility, and improved fault tolerance. Containerization : Spring Boot applications can be easily containerized, making them suitable for deployment on container orchestration platforms like Kubernetes. Containerization ensures that applications run consistently across different environments, simplifying deployment and management. Scalability : Kubernetes is a container orchestration platform designed to manage and scale containerized applications automatically. It provides features like horizontal and vertical scaling, load balancing, and rolling updates that enable applications to handle increased loads and adapt to changes in demand seamlessly. High availability : Kubernetes ensures high availability of applications by distributing containers across multiple nodes and automatically restarting failed containers. This minimizes the risk of downtime and ensures that applications remain available even in the event of hardware failures or other issues. Infrastructure management : Kubernetes automates the management of containerized applications, handling tasks like deployment, scaling, and updates. This reduces the operational overhead for developers and allows them to focus on application development and improvement. Resource optimization: Kubernetes efficiently manages the allocation of computing resources (CPU, memory, storage) to containers, ensuring that applications have the resources they need while minimizing waste. This leads to better resource utilization and cost savings for organizations.","title":"Spring Boot &amp;amp Kubernetes"},{"location":"technologies/#mongodb","text":"MongoDB and MongoDB Atlas offer several key benefits as the primary database solution for the Cellmobs platform, making them well-suited for modern web applications: Data model flexibility : MongoDB is a NoSQL database that uses a flexible, JSON-like document model for data storage. This enables developers to store and manage data in a more intuitive way, accommodating a variety of data types and structures without the need for strict schema definitions. This flexibility allows Cellmobs applications to easily adapt to changing requirements and evolving data models. Scalability : MongoDB is designed with horizontal scalability in mind, allowing it to handle large amounts of data and high traffic loads with ease. MongoDB Atlas, the managed database service, further simplifies scaling by providing automated scaling options and removing the need for manual intervention. This ensures that Cellmobs applications can grow seamlessly without encountering performance bottlenecks. Security : MongoDB and MongoDB Atlas prioritize security, offering features like encryption at rest, network isolation, and role-based access control. This helps protect sensitive data and ensures that only authorized users can access specific resources within the database, making it a secure choice for Cellmobs applications. Fully managed : MongoDB Atlas is a fully managed database-as-a-service, which means that developers don't have to worry about tasks like upgrades, backups, and infrastructure management. This allows the Cellmobs team to focus on building and improving their platform, while MongoDB Atlas takes care of the operational aspects of managing the database. High-performance : MongoDB is optimized for high-performance use cases, offering features like in-memory storage, indexing, and data partitioning to ensure that queries are executed quickly and efficiently. This ensures that Cellmobs applications can deliver a responsive and smooth user experience, even as they grow in complexity and scale.","title":"MongoDB"},{"location":"technologies/#kafka","text":"Kafka is an excellent platform for asynchronous event-driven systems for several reasons, making it a perfect fit for a cloud-based platform like Cellmobs: High throughput : Kafka is designed to handle high volumes of events with low latency. This allows it to efficiently process and deliver messages across the system, even when dealing with large amounts of data and numerous event sources. This high throughput capability ensures that Cellmobs can manage the demands of a growing user base without sacrificing performance. Scalability : Kafka is highly scalable and can be easily extended to accommodate increasing workloads. It supports horizontal scaling, which means that you can add more brokers to a Kafka cluster to increase its capacity. This ensures that the messaging infrastructure can keep up with the needs of Cellmobs as it continues to grow. Fault tolerance and durability : Kafka is designed with fault tolerance in mind, ensuring that messages are not lost even in the event of system failures. It achieves this by replicating messages across multiple brokers within a cluster, providing redundancy and ensuring that data remains available even if some brokers fail. This fault tolerance and durability are crucial for a reliable cloud-based platform like Cellmobs. Decoupling of producers and consumers : Kafka's publish-subscribe model allows for the decoupling of event producers and consumers, making it easy to add, modify or remove components within the system without affecting other parts. This architectural flexibility is especially valuable in a cloud-based platform like Cellmobs, where components may evolve and change over time. Stream processing capabilities : Kafka supports real-time stream processing, enabling developers to build sophisticated event-driven applications that can react to events as they occur. This makes it possible to create advanced features and capabilities within the Cellmobs platform, enhancing the user experience and enabling innovative use cases. Wide adoption and strong community : Kafka has a large and active community, which contributes to its ongoing development and provides valuable resources, such as documentation, best practices, and support. This ensures that Kafka will continue to evolve and improve, making it a reliable choice for the long-term success of the Cellmobs platform.","title":"Kafka"},{"location":"technologies/#freemarker","text":"All message templates in Cellmobs are based on the Freemarker template format, a widely-used, powerful, and flexible template engine for Java-based applications. Freemarker enables developers to create dynamic and customizable message templates for Emails, SMS/Text messages, and internal messages, ensuring consistent and engaging communication experiences within their application (see Technologies for more details). Freemarker template format provides several benefits, including: Dynamic content generation : Freemarker templates allow developers to create dynamic content using data from the application, such as user-specific information or system-generated values. Developers can use placeholders and expressions within the template to generate content based on the provided data, ensuring personalized and relevant messages. Conditional logic : With Freemarker templates, developers can include conditional logic within the message templates. This allows for variations in the message content based on specific conditions or data values, enabling more tailored and contextual communication experiences for users. Template inheritance and reuse : Freemarker supports template inheritance, which allows developers to create a base template and extend it with child templates. This helps in maintaining a consistent structure and design across multiple message templates while reducing code duplication and enhancing maintainability. Rich formatting and styling : Freemarker templates support rich text formatting and styling options, which allow developers to create visually appealing and professional-looking messages. This ensures that the messages align with the application's branding and design guidelines, enhancing the overall user experience.","title":"Freemarker"},{"location":"technologies/#reactjs-nextjs","text":"React.js and Next.js are two modern JavaScript frameworks that offer a range of benefits for developing applications on the Cellmobs platform. Here are some of the main advantages: Component-Based Architecture: React.js uses a component-based architecture. This means you can build encapsulated components that manage their own state, then compose them to make complex UIs. It's an effective way to build modular and reusable user interface components, which can greatly speed up development. Server-Side Rendering (SSR) with Next.js: Next.js provides an easy way to build web applications with server-side rendering, which is crucial for SEO and initial page load performance. It allows your app to render HTML on the server before it hits the client's browser, providing faster load times and a better user experience. Ease of Integration: Both React.js and Next.js can be easily integrated with the Cellmobs platform. You can fetch data from the Cellmobs API and use it within your components. Also, the Cellmobs SDK can be utilized to simplify data fetching and manipulation. High Performance: React.js uses a virtual DOM which optimizes rendering and improves app performance. The diffing algorithm used by React minimizes the number of operations needed to update the DOM. Next.js, on the other hand, optimizes performance by pre-rendering pages on the server-side. Scalability: React.js and Next.js are designed with scalability in mind. Whether you're developing a small app or a large, complex web application, these frameworks have the capacity to handle the load efficiently. They've been used in production by large companies, such as Facebook and Netflix, underlining their capacity for scalability. Rich Ecosystem and Community: Both React and Next have large, active communities, and a rich ecosystem of plugins, libraries, and tools that can further speed up development and provide solutions to common problems.","title":"React.js / Next.js"},{"location":"technologies/#nuxt","text":"Coming soon","title":"Nuxt"},{"location":"app-console/console-login/","text":"App Console Login \u00b6 Each Cellmobs App is configured and managed through the Cellmobs App Console , a powerful and user-friendly interface that provides you with all the tools necessary to manage every aspect of your application. The console, accessible via a dedicated url that is configured whenever you create a new Cellmobs App in the cellmobs.com website (e.g. myapp.console.cellmobs.com ). Each new app that you create in the Your Apps section of the Cellmobs website, will provision a dedicated set of urls for you to access the console for this new app, to make API requests to the REST API from your client apps, and to receive Webhooks from API Integrations that you configure for your app. Dedicated App Endpoints Cellmobs requires the implementation of reCAPTCHA and encourages Multi-Factor Authentication (MFA) to ensure that the platform and the applications built on it are secure and resilient against threats. By incorporating these security measures, we're looking to provide a robust and reliable environment for developers and users, ensuring the safety and integrity of the applications and data hosted on the platform. For more details, please see Authentication . App Console Login","title":"Logging In"},{"location":"app-console/console-login/#app-console-login","text":"Each Cellmobs App is configured and managed through the Cellmobs App Console , a powerful and user-friendly interface that provides you with all the tools necessary to manage every aspect of your application. The console, accessible via a dedicated url that is configured whenever you create a new Cellmobs App in the cellmobs.com website (e.g. myapp.console.cellmobs.com ). Each new app that you create in the Your Apps section of the Cellmobs website, will provision a dedicated set of urls for you to access the console for this new app, to make API requests to the REST API from your client apps, and to receive Webhooks from API Integrations that you configure for your app. Dedicated App Endpoints Cellmobs requires the implementation of reCAPTCHA and encourages Multi-Factor Authentication (MFA) to ensure that the platform and the applications built on it are secure and resilient against threats. By incorporating these security measures, we're looking to provide a robust and reliable environment for developers and users, ensuring the safety and integrity of the applications and data hosted on the platform. For more details, please see Authentication . App Console Login","title":"App Console Login"},{"location":"app-console/console-overview/","text":"Overview \u00b6 The console, accessible via a dedicated url that is configured whenever you create a new Cellmobs App in the cellmobs.com website (e.g. myapp.console.cellmobs.com ). Dedicated App Consoles The App Console, enables you to handle various elements of your app, such as: User Management \u00b6 The console allows you to manage users, roles, and permissions, ensuring that each user has the appropriate level of access and functionality within your app. Subscription Plans \u00b6 You can create, modify, and manage subscriber plans, defining the pricing tiers, features, and benefits associated with your application to cater to different user preferences and needs. Product Catalogs \u00b6 The console makes it easy to manage your app's product catalogs, allowing you to add, update, or remove products, categories, and other related information. Content Management \u00b6 The console provides tools for managing content within your app, such as articles, blog posts, and multimedia assets, ensuring that your users have access to relevant and up-to-date information. Web Page Configuration \u00b6 The console enables you to configure the appearance, layout, and behavior of your app's web pages, tailoring the user interface to match your desired look and feel. Monitoring and Analytics \u00b6 You can monitor your app's activity, resource usage, and performance, helping you identify areas for optimization and improvement. Billing and Payments \u00b6 The console offers tools to manage all billing-related issues, including invoice generation, payment processing, and subscription management. API Integrations \u00b6 The console provides tools for configuring API integrations with popular cloud apps and services. By connecting your app to third-party platforms, you can extend its functionality, streamline workflows, and improve the overall user experience. Templates \u00b6 The console enables you to design and configure message templates for various communication channels, such as email, SMS, and system messages. This feature allows you to create consistent and personalized messages that align with your brand identity and tone. Data Models & Taxonomy \u00b6 The console allows you to customize and design your data model, defining the structure and relationships between different entities in your application. By tailoring your data model, you can ensure that it accurately represents your business requirements and supports the desired functionality. Vocabularies \u00b6 Learn how to configure and manage Vocabularies to customize and adapt your app to specific use cases and requirements. Workflow Automation \u00b6 The console provides tools for automating various tasks and processes within your application, such as data validation, notifications, and report generation. By automating repetitive tasks, you can improve efficiency and reduce the likelihood of errors. And much more.... By using the Cellmobs App Console, you can efficiently configure and manage all aspects of your application, ensuring a seamless and user-friendly experience. The console provides a centralized location for managing your app's resources, settings, and content, simplifying the app management process and allowing you to focus on delivering a top-notch experience for your users.","title":"Overview"},{"location":"app-console/console-overview/#overview","text":"The console, accessible via a dedicated url that is configured whenever you create a new Cellmobs App in the cellmobs.com website (e.g. myapp.console.cellmobs.com ). Dedicated App Consoles The App Console, enables you to handle various elements of your app, such as:","title":"Overview"},{"location":"app-console/console-overview/#user-management","text":"The console allows you to manage users, roles, and permissions, ensuring that each user has the appropriate level of access and functionality within your app.","title":"&nbsp;  User Management"},{"location":"app-console/console-overview/#subscription-plans","text":"You can create, modify, and manage subscriber plans, defining the pricing tiers, features, and benefits associated with your application to cater to different user preferences and needs.","title":"&nbsp; Subscription Plans"},{"location":"app-console/console-overview/#product-catalogs","text":"The console makes it easy to manage your app's product catalogs, allowing you to add, update, or remove products, categories, and other related information.","title":"&nbsp; Product Catalogs"},{"location":"app-console/console-overview/#content-management","text":"The console provides tools for managing content within your app, such as articles, blog posts, and multimedia assets, ensuring that your users have access to relevant and up-to-date information.","title":"&nbsp; Content Management"},{"location":"app-console/console-overview/#web-page-configuration","text":"The console enables you to configure the appearance, layout, and behavior of your app's web pages, tailoring the user interface to match your desired look and feel.","title":"&nbsp; Web Page Configuration"},{"location":"app-console/console-overview/#monitoring-and-analytics","text":"You can monitor your app's activity, resource usage, and performance, helping you identify areas for optimization and improvement.","title":"&nbsp; Monitoring and Analytics"},{"location":"app-console/console-overview/#billing-and-payments","text":"The console offers tools to manage all billing-related issues, including invoice generation, payment processing, and subscription management.","title":"&nbsp; Billing and Payments"},{"location":"app-console/console-overview/#api-integrations","text":"The console provides tools for configuring API integrations with popular cloud apps and services. By connecting your app to third-party platforms, you can extend its functionality, streamline workflows, and improve the overall user experience.","title":"&nbsp; API Integrations"},{"location":"app-console/console-overview/#templates","text":"The console enables you to design and configure message templates for various communication channels, such as email, SMS, and system messages. This feature allows you to create consistent and personalized messages that align with your brand identity and tone.","title":"&nbsp; Templates"},{"location":"app-console/console-overview/#data-models-taxonomy","text":"The console allows you to customize and design your data model, defining the structure and relationships between different entities in your application. By tailoring your data model, you can ensure that it accurately represents your business requirements and supports the desired functionality.","title":"&nbsp; Data Models &amp; Taxonomy"},{"location":"app-console/console-overview/#vocabularies","text":"Learn how to configure and manage Vocabularies to customize and adapt your app to specific use cases and requirements.","title":"&nbsp; Vocabularies"},{"location":"app-console/console-overview/#workflow-automation","text":"The console provides tools for automating various tasks and processes within your application, such as data validation, notifications, and report generation. By automating repetitive tasks, you can improve efficiency and reduce the likelihood of errors. And much more.... By using the Cellmobs App Console, you can efficiently configure and manage all aspects of your application, ensuring a seamless and user-friendly experience. The console provides a centralized location for managing your app's resources, settings, and content, simplifying the app management process and allowing you to focus on delivering a top-notch experience for your users.","title":"&nbsp; Workflow Automation"},{"location":"app-console/manage-content/","text":"Content \u00b6 Content is a central entity in the Cellmobs platform, representing all file-based data, such as images, documents, and videos. It plays a crucial role in many aspects of the platform and can be associated with various Cellmobs entities , including Products , DealsTerms, Feeds, Channels, and more. Developers have the flexibility to use Cellmobs to host their static content or connect their Cellmobs App to their own AWS S3 account or other cloud storage locations such as Dropbox, Box, Google Drive, or OneDrive. This versatility allows developers to choose the storage solution that best fits their requirements and preferences. Content in Cellmobs is always associated with a primary Organization . This association determines which users have access to read and modify the content, ensuring that content management is securely controlled within the platform. Content Types \u00b6 Cellmobs supports different Content Types. They are typically derived from the file mimetype during uploads unless they are explictly provided. It is good practive to pass the ContentType parameter along with a configured FileType. The main content types are: Content Type Description IMAGE All public Images Mime Types VIDEO All public Video files e.g. mp4, mov, mpeg AUDIO All public Audio files DOCUMENT All public documents e.g. doc, pdf, ppt, etc FOLDER Represents the path to a folder. Either on S3 or another supported storage API SECURE_FILE Files that are uploaded to private AWS bucket that is only accessible to authorized users where file access is proxied through Cellmobs ACL FileType is a Content sub type and defines the business use case of a given file. Some file types are system types while others can be freely defined by the application developer. Images settings for IMAGE file types for example are configured using Image Settings . Secure Files \u00b6 When a file contains sensitive information or digital assets that are for sale, you can choose to upload it as a SECURE_FILE to ensure the file is uploaded to a secure storage location. Access to these files is tightly controlled and regulated. They are not accessible to everyone but only to users who have been explicitly authorized. This ensures that sensitive documents, such as contracts or media records, are only viewed by the intended parties. Similarly, digital assets for sale, like an e-book, movie, or music file, are safeguarded from unauthorized access or downloads (see Product for more). Authorization can be managed at a granular level, meaning you can control exactly who has access to each individual file. This might be based on user roles , permissions, or even specific transactions (like a user who has just purchased a digital product). Renditions \u00b6 In Cellmobs, when an image file is uploaded, the system by default generates multiple renditions of that image base on configured Image Settings . Rendition profiles for other Content Types will be supported soon For images renditions are different versions of the original image but in various sizes and dimensions. This automatic generation of image renditions allows your application to serve the most appropriate version of an image based on the context, such as the device screen size or network conditions, improving both performance and user experience. These renditions could be thumbnails for list views, medium-sized images for detail views, and large or full-sized images for close-up views or zooming. This approach ensures that you always have the right size image for any situation, and you don't have to manually create these versions yourself, saving considerable time and effort. However, there may be cases where you do not want Cellmobs to generate these renditions. For example, you may want to have full control over how images are resized or manipulated, or you may want to minimize storage usage. In these cases, you can pass the render=false parameter during the image upload process. When this parameter is used, Cellmobs will not generate any renditions of the uploaded image, and only the original image will be stored and available for use in your application. Remember, the decision to generate renditions or not will depend on your specific needs and the requirements of your application. While the automatic generation of renditions can improve performance and user experience, it may not be necessary or desirable in all cases. Creating Content \u00b6 Use Cellmobs to create unique web and mobile content - from articles, and infographics to videos, GIFs and memes, which can be used while creating products. Go to Content Section Click on Add Content Enter the name of the \u201cContent\u201d Provide the \u201cOrganization\u201d name Select the content type (Image, Video, Audio, Folder, Caption, Document) Select the File Type from the drop down (Custom Image, Identity AVATAR, Identity Header, Organization Logo, Product Image, Secure File, Tag header, Tag Image) Provide the description of the content that you want to publish along with the content (Image/Video etc.) Click on Choose file and upload the content Click on Save/Upload and it creates the content, it takes you to the Edit content page Go to the Renditions section and see how the images look like with 6 different sizes (ex: large, small etc.,) If you want to change the image, click on Upload content and select another image and it gets changed. Click on Save Changes * Sync Content across Apps \u00b6 Cellmobs can sync files and their associated metadata across apps. This comes in handy when sharing assets, like product images or documents, among various apps in your portfolio. [SHOW MODAL EXAMPLE]","title":"Content"},{"location":"app-console/manage-content/#content","text":"Content is a central entity in the Cellmobs platform, representing all file-based data, such as images, documents, and videos. It plays a crucial role in many aspects of the platform and can be associated with various Cellmobs entities , including Products , DealsTerms, Feeds, Channels, and more. Developers have the flexibility to use Cellmobs to host their static content or connect their Cellmobs App to their own AWS S3 account or other cloud storage locations such as Dropbox, Box, Google Drive, or OneDrive. This versatility allows developers to choose the storage solution that best fits their requirements and preferences. Content in Cellmobs is always associated with a primary Organization . This association determines which users have access to read and modify the content, ensuring that content management is securely controlled within the platform.","title":"Content"},{"location":"app-console/manage-content/#content-types","text":"Cellmobs supports different Content Types. They are typically derived from the file mimetype during uploads unless they are explictly provided. It is good practive to pass the ContentType parameter along with a configured FileType. The main content types are: Content Type Description IMAGE All public Images Mime Types VIDEO All public Video files e.g. mp4, mov, mpeg AUDIO All public Audio files DOCUMENT All public documents e.g. doc, pdf, ppt, etc FOLDER Represents the path to a folder. Either on S3 or another supported storage API SECURE_FILE Files that are uploaded to private AWS bucket that is only accessible to authorized users where file access is proxied through Cellmobs ACL FileType is a Content sub type and defines the business use case of a given file. Some file types are system types while others can be freely defined by the application developer. Images settings for IMAGE file types for example are configured using Image Settings .","title":"Content Types"},{"location":"app-console/manage-content/#secure-files","text":"When a file contains sensitive information or digital assets that are for sale, you can choose to upload it as a SECURE_FILE to ensure the file is uploaded to a secure storage location. Access to these files is tightly controlled and regulated. They are not accessible to everyone but only to users who have been explicitly authorized. This ensures that sensitive documents, such as contracts or media records, are only viewed by the intended parties. Similarly, digital assets for sale, like an e-book, movie, or music file, are safeguarded from unauthorized access or downloads (see Product for more). Authorization can be managed at a granular level, meaning you can control exactly who has access to each individual file. This might be based on user roles , permissions, or even specific transactions (like a user who has just purchased a digital product).","title":"Secure Files"},{"location":"app-console/manage-content/#renditions","text":"In Cellmobs, when an image file is uploaded, the system by default generates multiple renditions of that image base on configured Image Settings . Rendition profiles for other Content Types will be supported soon For images renditions are different versions of the original image but in various sizes and dimensions. This automatic generation of image renditions allows your application to serve the most appropriate version of an image based on the context, such as the device screen size or network conditions, improving both performance and user experience. These renditions could be thumbnails for list views, medium-sized images for detail views, and large or full-sized images for close-up views or zooming. This approach ensures that you always have the right size image for any situation, and you don't have to manually create these versions yourself, saving considerable time and effort. However, there may be cases where you do not want Cellmobs to generate these renditions. For example, you may want to have full control over how images are resized or manipulated, or you may want to minimize storage usage. In these cases, you can pass the render=false parameter during the image upload process. When this parameter is used, Cellmobs will not generate any renditions of the uploaded image, and only the original image will be stored and available for use in your application. Remember, the decision to generate renditions or not will depend on your specific needs and the requirements of your application. While the automatic generation of renditions can improve performance and user experience, it may not be necessary or desirable in all cases.","title":"Renditions"},{"location":"app-console/manage-content/#creating-content","text":"Use Cellmobs to create unique web and mobile content - from articles, and infographics to videos, GIFs and memes, which can be used while creating products. Go to Content Section Click on Add Content Enter the name of the \u201cContent\u201d Provide the \u201cOrganization\u201d name Select the content type (Image, Video, Audio, Folder, Caption, Document) Select the File Type from the drop down (Custom Image, Identity AVATAR, Identity Header, Organization Logo, Product Image, Secure File, Tag header, Tag Image) Provide the description of the content that you want to publish along with the content (Image/Video etc.) Click on Choose file and upload the content Click on Save/Upload and it creates the content, it takes you to the Edit content page Go to the Renditions section and see how the images look like with 6 different sizes (ex: large, small etc.,) If you want to change the image, click on Upload content and select another image and it gets changed. Click on Save Changes *","title":"Creating Content"},{"location":"app-console/manage-content/#sync-content-across-apps","text":"Cellmobs can sync files and their associated metadata across apps. This comes in handy when sharing assets, like product images or documents, among various apps in your portfolio. [SHOW MODAL EXAMPLE]","title":"Sync Content across Apps"},{"location":"app-console/manage-data/","text":"Manage Data \u00b6 Cellmobs provides data synchronization and transformation capabilities for several of its core entity types through API Integrations. This allows developers to seamlessly move or copy data like Content (Files), Identities (Users or Contacts), Organizations, and Products from one application to another. Here's a brief overview of how this works for each entity type: Content (Files) : Cellmobs allows you to copy or move files from one application to another. This can be useful for cases where you want to share or reuse assets across different applications. The synchronization process ensures that the file's metadata is also transferred, ensuring consistency and integrity across applications. Identities (Users or Contacts) : You can synchronize user or contact data across different applications. This can be extremely useful for businesses that have multiple applications and want to provide a unified user experience. For example, if a user updates customer information in one application, this change can be automatically reflected in all other applications. Organizations : Cellmobs provides the capability to copy or move organization data across applications. This can be useful for businesses that operate multiple applications and want to maintain a consistent organization structure across all of them. Products : Cellmobs allows you to synchronize product data across different applications. This can be particularly useful for businesses that sell the same products across different platforms or channels. By synchronizing product data, businesses can ensure that product information is always up-to-date and consistent across all platforms. Unified Data Model \u00b6 Cellmobs provider a unified data model that acts as a common language for your applications. This framework not only simplifies development but also ensures consistency across different applications or services you might be using or creating. A unified data model offers a standardized structure where all your application's data can be described and organized in a uniform manner. It means that various types of data like user information, products , orders , transactions, and others are stored and interacted with consistently, irrespective of their source or the application handling them. This uniformity plays a vital role in facilitating seamless interactions between different components of an application, or even separate applications within your ecosystem. For example, a unified data model would allow an e-commerce app, a customer support app, and a marketing app to all understand and utilize the same customer data. The benefits of such an approach are numerous: Simplified Data Management : A unified model offers a consistent and simplified way to manage and interact with data. It eliminates the need for complex translations or conversions between different data formats or structures. Improved Interoperability : When all applications use the same data model, they can seamlessly exchange and make use of information, improving the interoperability between different systems. Increased Efficiency : By using a standardized model, developers can reduce the time and effort needed to integrate new systems or data sources into the application. Enhanced Data Quality and Consistency : With a unified approach, the risk of data inconsistency or redundancy is significantly reduced, leading to improved data quality.","title":"Data"},{"location":"app-console/manage-data/#manage-data","text":"Cellmobs provides data synchronization and transformation capabilities for several of its core entity types through API Integrations. This allows developers to seamlessly move or copy data like Content (Files), Identities (Users or Contacts), Organizations, and Products from one application to another. Here's a brief overview of how this works for each entity type: Content (Files) : Cellmobs allows you to copy or move files from one application to another. This can be useful for cases where you want to share or reuse assets across different applications. The synchronization process ensures that the file's metadata is also transferred, ensuring consistency and integrity across applications. Identities (Users or Contacts) : You can synchronize user or contact data across different applications. This can be extremely useful for businesses that have multiple applications and want to provide a unified user experience. For example, if a user updates customer information in one application, this change can be automatically reflected in all other applications. Organizations : Cellmobs provides the capability to copy or move organization data across applications. This can be useful for businesses that operate multiple applications and want to maintain a consistent organization structure across all of them. Products : Cellmobs allows you to synchronize product data across different applications. This can be particularly useful for businesses that sell the same products across different platforms or channels. By synchronizing product data, businesses can ensure that product information is always up-to-date and consistent across all platforms.","title":"Manage Data"},{"location":"app-console/manage-data/#unified-data-model","text":"Cellmobs provider a unified data model that acts as a common language for your applications. This framework not only simplifies development but also ensures consistency across different applications or services you might be using or creating. A unified data model offers a standardized structure where all your application's data can be described and organized in a uniform manner. It means that various types of data like user information, products , orders , transactions, and others are stored and interacted with consistently, irrespective of their source or the application handling them. This uniformity plays a vital role in facilitating seamless interactions between different components of an application, or even separate applications within your ecosystem. For example, a unified data model would allow an e-commerce app, a customer support app, and a marketing app to all understand and utilize the same customer data. The benefits of such an approach are numerous: Simplified Data Management : A unified model offers a consistent and simplified way to manage and interact with data. It eliminates the need for complex translations or conversions between different data formats or structures. Improved Interoperability : When all applications use the same data model, they can seamlessly exchange and make use of information, improving the interoperability between different systems. Increased Efficiency : By using a standardized model, developers can reduce the time and effort needed to integrate new systems or data sources into the application. Enhanced Data Quality and Consistency : With a unified approach, the risk of data inconsistency or redundancy is significantly reduced, leading to improved data quality.","title":"Unified Data Model"},{"location":"app-console/manage-integrations/","text":"Integrations \u00b6 Cellmobs offers extensive API integration capabilities that empower developers to connect their applications with a wide range of popular cloud apps. For a quick introduction on Integrations and overview on how to obtain API credentials, please checkout Setting Up Integrations This section will walk you through configuring Integrations in detail using the Cellmobs App Console. We use Dropbox as an example. Configure an Integration \u00b6 Identity Connections \u00b6 Webhooks \u00b6 Webhooks are an incredibly useful feature provided by many APIs, including those used by Cellmobs, to allow real-time communication between different applications. In essence, a webhook is a way for an app to provide other applications with real-time information. A webhook delivers data to other applications as it happens, meaning you get data immediately. Many of Cellmobs' API integrations, such as Dropbox, support webhooks. These integrations allow your Cellmobs app to react to events that happen on the integrated application. For instance, if you have integrated your app with Jira, you can configure webhooks to notify your Cellmobs app when a ticket is updated or deleted in Jira. The way it works is that each Cellmobs app has a dedicated webhook endpoint that can receive these notifications. When an event occurs on the external application, it sends a message to the webhook URL configured in Cellmobs. The message will typically contain information about the event, like what the event is and data associated with the event. These webhooks are critical for keeping your application data in sync with the external applications you have integrated with. For instance, if a file is deleted in Dropbox, a webhook can notify your Cellmobs app of this event, and your app can then update its own data accordingly. Moreover, webhooks can be connected to trigger Cellmobs workflows . This means that when certain events occur on the external application, not only is your data kept in sync, but it can also trigger specific actions within your Cellmobs app, like sending an email, updating a database, or starting a marketing campaign. This makes webhooks a powerful tool for automating processes and keeping data consistent across different applications. [WALKTHROUGH] Supported Integrations \u00b6 We currently support the following integrations and are adding new ones every week. Please be sure to check back frequently or learn more about use our Zapier integration to utilize APIs we currently do not support. API Entity Types Process Types Status Dropbox CONTENT CREATE , SAVE , DELETE , MOVE , LIST Live OneDrive CONTENT CREATE , SAVE , DELETE , MOVE , LIST Live Google Drive CONTENT CREATE , SAVE , DELETE , MOVE , LIST Live BOX CONTENT CREATE , SAVE , DELETE , MOVE , LIST Live AWS S3 CONTENT CREATE , SAVE , DELETE , MOVE , LIST Live MS Contacts IDENTITY , ORGANIZATION CREATE , SAVE , DELETE , MOVE , LIST Live MS Calendar CALENDAR_EVENT CREATE , SAVE , DELETE , MOVE , LIST Live Hubspot IDENTITY , ORGANIZATION , DEAL_TERMS , WORK , LEAD CREATE , SAVE , DELETE , MOVE , LIST Live Google People IDENTITY , ORGANIZATION CREATE , SAVE , DELETE , MOVE , LIST Live Google Calendar CALENDAR_EVENT CREATE , SAVE , DELETE , MOVE , LIST Live MS Teams INBOX_ITEM , IDENTITY , ORGANIZATION CREATE , SAVE , DELETE , MOVE Live Slack INBOX_ITEM , IDENTITY ,, ORGANIZATION CREATE , SAVE , DELETE , MOVE Live Mailchimp IDENTITY CREATE , SAVE , DELETE , LIST Live Trello IDENTITY , PROJECT , WORK CREATE , SAVE , DELETE , LIST Live Jira IDENTITY , PROJECT , WORK CREATE , SAVE , DELETE , LIST Live Zapier All entities CREATE , SAVE , DELETE Live OpenAI WEB_PAGE , CONTENT Generate Text and Images Live YouTube CONTENT CREATE , SAVE , DELETE , LIST Live","title":"Integrations"},{"location":"app-console/manage-integrations/#integrations","text":"Cellmobs offers extensive API integration capabilities that empower developers to connect their applications with a wide range of popular cloud apps. For a quick introduction on Integrations and overview on how to obtain API credentials, please checkout Setting Up Integrations This section will walk you through configuring Integrations in detail using the Cellmobs App Console. We use Dropbox as an example.","title":"Integrations"},{"location":"app-console/manage-integrations/#configure-an-integration","text":"","title":"Configure an Integration"},{"location":"app-console/manage-integrations/#identity-connections","text":"","title":"Identity Connections"},{"location":"app-console/manage-integrations/#webhooks","text":"Webhooks are an incredibly useful feature provided by many APIs, including those used by Cellmobs, to allow real-time communication between different applications. In essence, a webhook is a way for an app to provide other applications with real-time information. A webhook delivers data to other applications as it happens, meaning you get data immediately. Many of Cellmobs' API integrations, such as Dropbox, support webhooks. These integrations allow your Cellmobs app to react to events that happen on the integrated application. For instance, if you have integrated your app with Jira, you can configure webhooks to notify your Cellmobs app when a ticket is updated or deleted in Jira. The way it works is that each Cellmobs app has a dedicated webhook endpoint that can receive these notifications. When an event occurs on the external application, it sends a message to the webhook URL configured in Cellmobs. The message will typically contain information about the event, like what the event is and data associated with the event. These webhooks are critical for keeping your application data in sync with the external applications you have integrated with. For instance, if a file is deleted in Dropbox, a webhook can notify your Cellmobs app of this event, and your app can then update its own data accordingly. Moreover, webhooks can be connected to trigger Cellmobs workflows . This means that when certain events occur on the external application, not only is your data kept in sync, but it can also trigger specific actions within your Cellmobs app, like sending an email, updating a database, or starting a marketing campaign. This makes webhooks a powerful tool for automating processes and keeping data consistent across different applications. [WALKTHROUGH]","title":"Webhooks"},{"location":"app-console/manage-integrations/#supported-integrations","text":"We currently support the following integrations and are adding new ones every week. Please be sure to check back frequently or learn more about use our Zapier integration to utilize APIs we currently do not support. API Entity Types Process Types Status Dropbox CONTENT CREATE , SAVE , DELETE , MOVE , LIST Live OneDrive CONTENT CREATE , SAVE , DELETE , MOVE , LIST Live Google Drive CONTENT CREATE , SAVE , DELETE , MOVE , LIST Live BOX CONTENT CREATE , SAVE , DELETE , MOVE , LIST Live AWS S3 CONTENT CREATE , SAVE , DELETE , MOVE , LIST Live MS Contacts IDENTITY , ORGANIZATION CREATE , SAVE , DELETE , MOVE , LIST Live MS Calendar CALENDAR_EVENT CREATE , SAVE , DELETE , MOVE , LIST Live Hubspot IDENTITY , ORGANIZATION , DEAL_TERMS , WORK , LEAD CREATE , SAVE , DELETE , MOVE , LIST Live Google People IDENTITY , ORGANIZATION CREATE , SAVE , DELETE , MOVE , LIST Live Google Calendar CALENDAR_EVENT CREATE , SAVE , DELETE , MOVE , LIST Live MS Teams INBOX_ITEM , IDENTITY , ORGANIZATION CREATE , SAVE , DELETE , MOVE Live Slack INBOX_ITEM , IDENTITY ,, ORGANIZATION CREATE , SAVE , DELETE , MOVE Live Mailchimp IDENTITY CREATE , SAVE , DELETE , LIST Live Trello IDENTITY , PROJECT , WORK CREATE , SAVE , DELETE , LIST Live Jira IDENTITY , PROJECT , WORK CREATE , SAVE , DELETE , LIST Live Zapier All entities CREATE , SAVE , DELETE Live OpenAI WEB_PAGE , CONTENT Generate Text and Images Live YouTube CONTENT CREATE , SAVE , DELETE , LIST Live","title":"Supported Integrations"},{"location":"app-console/manage-ledgers/","text":"Ledgers \u00b6 Ledgers in Cellmobs function as a comprehensive financial log that captures all the monetary transactions within an application. This includes capturing payment transactions related to product orders from certain vendors, an attribute associated with Organizations that participate in a Cellmobs Marketplace or E-Commerce application. Ledgers can also document the revenue and cost elements related to order servicing and collaborations with business partners. While the use of Ledgers is optional, having an Organization entity configured with a primary Ledger simplifies financial tracking. Once this configuration is set, all the monetary data tied to that Organization will automatically flow into the designated Ledger. This ability to track financial flows effectively becomes particularly significant for financial analyses and reports. By having a complete record of revenues, costs in the Ledger, it becomes easier to generate meaningful financial insights and reports. For example the sytem can generate profit sharing reports between provided that the terms of any agreements between the involved Organizations (such as Vendors, Customers, Suppliers) have been properly logged as Deals . Ledgers in Cellmobs offer a high degree of flexibility, allowing users to not only track internal financial transactions but also to import entries from external sources. Users can add data to ledgers through CSV imports, making it easier to centralize financial information from various sources in a single location. This can be particularly useful when dealing with multiple channels or platforms where financial transactions occur. Or with revenue statements received by business partners. Additionally, ledgers can be updated with financial data received via API integrations from other applications and integrations. This seamless connection between systems ensures that your financial records around cost and revenues related to Products are centralized and always up-to-date, minimizing the potential for discrepancies or missing data. Moreover, the information captured in these ledgers can also be synchronized with popular accounting software like Intuit's Quicken and QuickBooks (Coming soon). This will enable a streamlined workflow, allowing businesses to seamlessly move financial data between their operational platform and their accounting system. Reports \u00b6 Cellmobs allows for extensive reporting from transaction Ledgers. This includes not only standard financial reports like product and customer revenue summaries, but also complex revenue sharing reports based on the terms of agreements between multiple stakeholders such as suppliers, vendors, distributors, agents, and sellers. A key component of the financial system is its concept of \"Deals\". Deals in Cellmobs serve as comprehensive documentation of the terms of an agreement between multiple organizations. For instance, a Deal might outline the revenue sharing agreement between a supplier and a distributor, or between an agent and a seller. To generate financial reports, Cellmobs automatically collects and organizes all financial data related to these Deals into Ledgers. This includes everything from payment transactions associated with product orders, to the costs and revenues associated with servicing orders or dealing with business partners. Once an Organization is configured with a primary Ledger, all this data flows automatically into it, providing a complete financial overview. From these detailed Ledgers, Cellmobs is then able to generate a variety of financial reports. Product and Customer Revenue Summaries: Cellmobs can quickly pull data from the Ledgers to produce summaries of revenues from different products or customers, giving businesses key insights into their most profitable areas. Revenue Sharing Reports: Perhaps most powerful is Cellmobs' ability to produce revenue sharing reports. These reports detail how revenues are divided between different parties based on the terms outlined in their Deals. For instance, if a supplier and a distributor have a Deal stating that they will split the revenue of a certain product 70/30, Cellmobs can automatically calculate these splits and represent them in a report. This takes the complexity out of revenue sharing and ensures all parties are compensated correctly. Cellmobs' ability to generate these reports not only provides businesses with valuable insights but also brings a high level of transparency and accuracy to the financial operations. This efficiency and clarity can significantly enhance decision-making and business relationships. Deals \u00b6 Deals within Cellmobs can cater to complex revenue sharing arrangements, accommodating the need for flexible business models and agreements. Here's how these elements play out: Tiered Revenue Sharing: Cellmobs allows Deals to specify different levels of revenue distribution such as gross, adjusted gross, and net. For instance, a participant might be entitled to a certain percentage of gross revenue, while others might receive a share of the net revenue (i.e., after costs are deducted). This flexibility allows for nuanced agreements that better reflect the roles and contributions of the different parties involved. Pre- and Post-Cost Deductions: The platform can handle agreements where revenue shares are calculated either before or after certain costs are deducted. This gives organizations the flexibility to account for costs in the manner that best suits their specific business model or agreement. Advance Payments: In many cases, suppliers or other parties might receive advance payments as part of their deal. Cellmobs can account for these advance payments in its revenue sharing calculations. For instance, the platform can be configured to first recoup the advance from revenues before distributing the remaining amount according to the specified revenue share percentages. Minimum Guarantees: If a deal includes a minimum guarantee to a supplier or another party, Cellmobs can incorporate this into its revenue sharing reports. For example, if a supplier is guaranteed a minimum revenue share regardless of actual sales, the platform can ensure this amount is paid out first, with any remaining revenue then distributed according to the agreed percentages.","title":"Ledgers"},{"location":"app-console/manage-ledgers/#ledgers","text":"Ledgers in Cellmobs function as a comprehensive financial log that captures all the monetary transactions within an application. This includes capturing payment transactions related to product orders from certain vendors, an attribute associated with Organizations that participate in a Cellmobs Marketplace or E-Commerce application. Ledgers can also document the revenue and cost elements related to order servicing and collaborations with business partners. While the use of Ledgers is optional, having an Organization entity configured with a primary Ledger simplifies financial tracking. Once this configuration is set, all the monetary data tied to that Organization will automatically flow into the designated Ledger. This ability to track financial flows effectively becomes particularly significant for financial analyses and reports. By having a complete record of revenues, costs in the Ledger, it becomes easier to generate meaningful financial insights and reports. For example the sytem can generate profit sharing reports between provided that the terms of any agreements between the involved Organizations (such as Vendors, Customers, Suppliers) have been properly logged as Deals . Ledgers in Cellmobs offer a high degree of flexibility, allowing users to not only track internal financial transactions but also to import entries from external sources. Users can add data to ledgers through CSV imports, making it easier to centralize financial information from various sources in a single location. This can be particularly useful when dealing with multiple channels or platforms where financial transactions occur. Or with revenue statements received by business partners. Additionally, ledgers can be updated with financial data received via API integrations from other applications and integrations. This seamless connection between systems ensures that your financial records around cost and revenues related to Products are centralized and always up-to-date, minimizing the potential for discrepancies or missing data. Moreover, the information captured in these ledgers can also be synchronized with popular accounting software like Intuit's Quicken and QuickBooks (Coming soon). This will enable a streamlined workflow, allowing businesses to seamlessly move financial data between their operational platform and their accounting system.","title":"Ledgers"},{"location":"app-console/manage-ledgers/#reports","text":"Cellmobs allows for extensive reporting from transaction Ledgers. This includes not only standard financial reports like product and customer revenue summaries, but also complex revenue sharing reports based on the terms of agreements between multiple stakeholders such as suppliers, vendors, distributors, agents, and sellers. A key component of the financial system is its concept of \"Deals\". Deals in Cellmobs serve as comprehensive documentation of the terms of an agreement between multiple organizations. For instance, a Deal might outline the revenue sharing agreement between a supplier and a distributor, or between an agent and a seller. To generate financial reports, Cellmobs automatically collects and organizes all financial data related to these Deals into Ledgers. This includes everything from payment transactions associated with product orders, to the costs and revenues associated with servicing orders or dealing with business partners. Once an Organization is configured with a primary Ledger, all this data flows automatically into it, providing a complete financial overview. From these detailed Ledgers, Cellmobs is then able to generate a variety of financial reports. Product and Customer Revenue Summaries: Cellmobs can quickly pull data from the Ledgers to produce summaries of revenues from different products or customers, giving businesses key insights into their most profitable areas. Revenue Sharing Reports: Perhaps most powerful is Cellmobs' ability to produce revenue sharing reports. These reports detail how revenues are divided between different parties based on the terms outlined in their Deals. For instance, if a supplier and a distributor have a Deal stating that they will split the revenue of a certain product 70/30, Cellmobs can automatically calculate these splits and represent them in a report. This takes the complexity out of revenue sharing and ensures all parties are compensated correctly. Cellmobs' ability to generate these reports not only provides businesses with valuable insights but also brings a high level of transparency and accuracy to the financial operations. This efficiency and clarity can significantly enhance decision-making and business relationships.","title":"Reports"},{"location":"app-console/manage-ledgers/#deals","text":"Deals within Cellmobs can cater to complex revenue sharing arrangements, accommodating the need for flexible business models and agreements. Here's how these elements play out: Tiered Revenue Sharing: Cellmobs allows Deals to specify different levels of revenue distribution such as gross, adjusted gross, and net. For instance, a participant might be entitled to a certain percentage of gross revenue, while others might receive a share of the net revenue (i.e., after costs are deducted). This flexibility allows for nuanced agreements that better reflect the roles and contributions of the different parties involved. Pre- and Post-Cost Deductions: The platform can handle agreements where revenue shares are calculated either before or after certain costs are deducted. This gives organizations the flexibility to account for costs in the manner that best suits their specific business model or agreement. Advance Payments: In many cases, suppliers or other parties might receive advance payments as part of their deal. Cellmobs can account for these advance payments in its revenue sharing calculations. For instance, the platform can be configured to first recoup the advance from revenues before distributing the remaining amount according to the specified revenue share percentages. Minimum Guarantees: If a deal includes a minimum guarantee to a supplier or another party, Cellmobs can incorporate this into its revenue sharing reports. For example, if a supplier is guaranteed a minimum revenue share regardless of actual sales, the platform can ensure this amount is paid out first, with any remaining revenue then distributed according to the agreed percentages.","title":"Deals"},{"location":"app-console/manage-localization/","text":"Localization \u00b6 Cellmobs's App Console is designed with localization and flexible taxonomy in mind, allowing developers to adapt their applications to various use cases, business verticals, and language requirements. The console is built around tokenized entities, form field labels, and text, meaning that each piece of text is associated with a unique token (aka code). This provides a highly adaptable environment where you can replace the default terminology with terminology that fits your specific application's needs. For example, in a healthcare application, \"Users\" might be replaced with \"Patients,\" or in an educational context, \"Organizations\" might be replaced with \"Schools\" or \"Classes.\" Moreover, these tokens support localization, allowing you to translate your application into different languages. You can specify the translations for each token, and the console will display the appropriate language based on the user's settings or your predefined configuration. This localization capability opens up your application to a global audience and ensures a user-friendly experience for users of different language backgrounds. Configure Localization \u00b6 Cellmobs makes it simple to customize and localize your application. Each term or phrase in the console UI or client application is represented by a token, or code . This code corresponds to a value that is the actual string displayed in the user interface. For example, the code user.email might correspond to the value 'Email Address'. If you want to customize the terminology in your application, you simply replace the default value associated with each code. This is done by clicking on the value in the \"Message\" column in the console and entering your desired string. This flexibility allows you to align the language used in your application with your specific use case or industry terminology. Moreover, if you need additional terms that are not covered by the default codes, you can add new code-message pairs. This allows you to extend the vocabulary used in your application beyond the default set provided by Cellmobs. For localization, if you have the translation API enabled, any new or updated message values will be automatically translated into the languages you have chosen to support. This means that if you update the 'Email Address' value to 'Correo Electr\u00f3nico' in Spanish, for instance, this new value will be used for Spanish-speaking users of your application. Taxonomy & Localization","title":"Localization"},{"location":"app-console/manage-localization/#localization","text":"Cellmobs's App Console is designed with localization and flexible taxonomy in mind, allowing developers to adapt their applications to various use cases, business verticals, and language requirements. The console is built around tokenized entities, form field labels, and text, meaning that each piece of text is associated with a unique token (aka code). This provides a highly adaptable environment where you can replace the default terminology with terminology that fits your specific application's needs. For example, in a healthcare application, \"Users\" might be replaced with \"Patients,\" or in an educational context, \"Organizations\" might be replaced with \"Schools\" or \"Classes.\" Moreover, these tokens support localization, allowing you to translate your application into different languages. You can specify the translations for each token, and the console will display the appropriate language based on the user's settings or your predefined configuration. This localization capability opens up your application to a global audience and ensures a user-friendly experience for users of different language backgrounds.","title":"Localization"},{"location":"app-console/manage-localization/#configure-localization","text":"Cellmobs makes it simple to customize and localize your application. Each term or phrase in the console UI or client application is represented by a token, or code . This code corresponds to a value that is the actual string displayed in the user interface. For example, the code user.email might correspond to the value 'Email Address'. If you want to customize the terminology in your application, you simply replace the default value associated with each code. This is done by clicking on the value in the \"Message\" column in the console and entering your desired string. This flexibility allows you to align the language used in your application with your specific use case or industry terminology. Moreover, if you need additional terms that are not covered by the default codes, you can add new code-message pairs. This allows you to extend the vocabulary used in your application beyond the default set provided by Cellmobs. For localization, if you have the translation API enabled, any new or updated message values will be automatically translated into the languages you have chosen to support. This means that if you update the 'Email Address' value to 'Correo Electr\u00f3nico' in Spanish, for instance, this new value will be used for Spanish-speaking users of your application. Taxonomy & Localization","title":"Configure Localization"},{"location":"app-console/manage-orders/","text":"Orders \u00b6 An Order is a crucial Cellmobs entity that plays a central role in facilitating transactions and commerce across the platform. It serves as a key component that connects various elements of the commerce process, including Shopping Carts, Subscription Plans , payment transactions , and payment processors . Orders are generated from Shopping Carts and Subscription Plans, representing the items or services that users wish to purchase. When an order is processed, it gets associated with one or more payment transactions ( PayTransaction ), which are then submitted to the payment processor linked to the Organization ( PaymentProcessor ). This ensures that the payment is securely handled and processed according to the platform's standards. Cellmobs supports various payment processors, including Stripe , Authorize.net , FirstData , and PayPal . This allows organizations to choose their preferred payment processor and cater to the needs of their customers accordingly. In addition to traditional payment methods, Cellmobs also supports virtual currencies, offering an alternative means of payment. Virtual currencies can be used as an abstraction for Fiat currencies, providing additional flexibility in payment options and catering to the growing demand for alternative payment methods. Viewing & Managing Orders \u00b6 Shopping Carts \u00b6 Submitting Carts \u00b6 Editing Carts \u00b6 Subscription Plans \u00b6 Cellmobs has a highly flexible and comprehensive subscription management system which allows for the creation of a diverse range of plans and packages to suit any use case. Here's how it works: Trials and Free Tiers: Cellmobs' subscription model supports trial periods and free tiers. This means you can offer your customers the opportunity to try out your services at no cost before they commit to a subscription. This is a popular strategy used by businesses to attract new customers and give them confidence in their services. Plans and Products: Each subscription plan in Cellmobs is associated with one or more Products . These Products define the pricing models that are then aggregated by the subscription plan. This allows for maximum flexibility as you can create a diverse range of Products each with its own price point, and then combine them into various subscription plans as needed. Flexible Pricing Models: Cellmobs supports a variety of pricing models , including flat rate, tiered, volume, and per unit pricing, among others. This allows you to price your products and services in the way that makes the most sense for your business and your customers. Complex Aggregations: The platform is designed to handle complex subscription plans which aggregate a whole list of products and services, each with its own price point and usage tier. This means you can offer comprehensive packages to your customers that bundle together a wide range of services, while still maintaining detailed control over the pricing and usage allowances of each individual product or service within the package. By allowing you to create such flexible and detailed subscription plans, Cellmobs helps you to cater to the varied needs of your customers, while also giving you the tools to manage and control your pricing strategy effectively. This helps to ensure that your subscription services are profitable and sustainable, while also providing excellent value to your customers. Subscribers \u00b6 The Cellmobs platform comes with an intuitive management console that simplifies subscription management. Here's how you can utilize these features: Subscriber Management: The console provides a detailed view of all your subscribers. You can manually add new subscribers, modify existing subscription plans, view transaction histories, and much more. Each subscriber profile contains vital information such as subscription status, payment history, contact details, and their associated subscription plans, which can be modified as needed. Billing and Payments: Cellmobs automates the billing cycle based on the frequency you choose, such as weekly, monthly, or annually. Each subscriber is automatically billed based on this cycle and their subscription start date, eliminating the need for manual invoicing. The platform also supports multiple payment gateways, providing a seamless payment experience for your customers. Refund Management: In the event of payment disputes or cancellations, the Cellmobs console allows you to issue refunds quickly and efficiently. Refunds can be full or partial, depending on your policies, and are automatically recorded in the subscriber's transaction history for transparency. Handling Past Due Accounts: Cellmobs comes equipped with features to handle past due accounts. If a subscriber fails to make payment, the system can send automated reminders, pause services, or even cancel the subscription based on your set parameters. This way, you can manage delinquent accounts and minimize revenue loss. Reporting and Analytics: The console also provides in-depth reports and analytics about your subscriptions. This includes metrics like churn rate, average revenue per user (ARPU), lifetime value (LTV), and many more. These insights can help you make informed decisions about your subscription pricing, marketing strategies, and overall business model. With Cellmobs, managing subscriptions becomes a streamlined and hassle-free process, allowing you to focus on delivering quality service to your customers. Payment Processors \u00b6 Cellmobs has built-in support for multiple payment processors (aka payment gateways), providing a flexible and versatile approach to handle transactions within your application. In a single-vendor application, you might configure a primary payment processor for your application and then add additional ones as backups. This is useful because it can provide a fallback option if there are issues with the primary processor, ensuring that your application can continue to accept payments without interruption. Organization Payment Processors However, in a multi-vendor or marketplace environment, Cellmobs provides a different approach. In such a scenario, you can allow individual sellers or vendors (represented by Organizations within Cellmobs) to configure their own payment processors. This means each vendor in your marketplace can choose the payment processor that best suits their needs or preferences. Edit Payment Processors Credentials In either case, the payment processor associated with the selling Organization is used when an order is being processed. This ensures that the money from the sale goes to the correct party. By supporting multiple payment processors and allowing for flexible configuration, Cellmobs ensures that your application can effectively and efficiently handle transactions, providing a smooth and frictionless experience for both sellers and buyers. Payment Transactions \u00b6","title":"Orders"},{"location":"app-console/manage-orders/#orders","text":"An Order is a crucial Cellmobs entity that plays a central role in facilitating transactions and commerce across the platform. It serves as a key component that connects various elements of the commerce process, including Shopping Carts, Subscription Plans , payment transactions , and payment processors . Orders are generated from Shopping Carts and Subscription Plans, representing the items or services that users wish to purchase. When an order is processed, it gets associated with one or more payment transactions ( PayTransaction ), which are then submitted to the payment processor linked to the Organization ( PaymentProcessor ). This ensures that the payment is securely handled and processed according to the platform's standards. Cellmobs supports various payment processors, including Stripe , Authorize.net , FirstData , and PayPal . This allows organizations to choose their preferred payment processor and cater to the needs of their customers accordingly. In addition to traditional payment methods, Cellmobs also supports virtual currencies, offering an alternative means of payment. Virtual currencies can be used as an abstraction for Fiat currencies, providing additional flexibility in payment options and catering to the growing demand for alternative payment methods.","title":"Orders"},{"location":"app-console/manage-orders/#viewing-managing-orders","text":"","title":"Viewing &amp; Managing Orders"},{"location":"app-console/manage-orders/#shopping-carts","text":"","title":"Shopping Carts"},{"location":"app-console/manage-orders/#submitting-carts","text":"","title":"Submitting Carts"},{"location":"app-console/manage-orders/#editing-carts","text":"","title":"Editing Carts"},{"location":"app-console/manage-orders/#subscription-plans","text":"Cellmobs has a highly flexible and comprehensive subscription management system which allows for the creation of a diverse range of plans and packages to suit any use case. Here's how it works: Trials and Free Tiers: Cellmobs' subscription model supports trial periods and free tiers. This means you can offer your customers the opportunity to try out your services at no cost before they commit to a subscription. This is a popular strategy used by businesses to attract new customers and give them confidence in their services. Plans and Products: Each subscription plan in Cellmobs is associated with one or more Products . These Products define the pricing models that are then aggregated by the subscription plan. This allows for maximum flexibility as you can create a diverse range of Products each with its own price point, and then combine them into various subscription plans as needed. Flexible Pricing Models: Cellmobs supports a variety of pricing models , including flat rate, tiered, volume, and per unit pricing, among others. This allows you to price your products and services in the way that makes the most sense for your business and your customers. Complex Aggregations: The platform is designed to handle complex subscription plans which aggregate a whole list of products and services, each with its own price point and usage tier. This means you can offer comprehensive packages to your customers that bundle together a wide range of services, while still maintaining detailed control over the pricing and usage allowances of each individual product or service within the package. By allowing you to create such flexible and detailed subscription plans, Cellmobs helps you to cater to the varied needs of your customers, while also giving you the tools to manage and control your pricing strategy effectively. This helps to ensure that your subscription services are profitable and sustainable, while also providing excellent value to your customers.","title":"Subscription Plans"},{"location":"app-console/manage-orders/#subscribers","text":"The Cellmobs platform comes with an intuitive management console that simplifies subscription management. Here's how you can utilize these features: Subscriber Management: The console provides a detailed view of all your subscribers. You can manually add new subscribers, modify existing subscription plans, view transaction histories, and much more. Each subscriber profile contains vital information such as subscription status, payment history, contact details, and their associated subscription plans, which can be modified as needed. Billing and Payments: Cellmobs automates the billing cycle based on the frequency you choose, such as weekly, monthly, or annually. Each subscriber is automatically billed based on this cycle and their subscription start date, eliminating the need for manual invoicing. The platform also supports multiple payment gateways, providing a seamless payment experience for your customers. Refund Management: In the event of payment disputes or cancellations, the Cellmobs console allows you to issue refunds quickly and efficiently. Refunds can be full or partial, depending on your policies, and are automatically recorded in the subscriber's transaction history for transparency. Handling Past Due Accounts: Cellmobs comes equipped with features to handle past due accounts. If a subscriber fails to make payment, the system can send automated reminders, pause services, or even cancel the subscription based on your set parameters. This way, you can manage delinquent accounts and minimize revenue loss. Reporting and Analytics: The console also provides in-depth reports and analytics about your subscriptions. This includes metrics like churn rate, average revenue per user (ARPU), lifetime value (LTV), and many more. These insights can help you make informed decisions about your subscription pricing, marketing strategies, and overall business model. With Cellmobs, managing subscriptions becomes a streamlined and hassle-free process, allowing you to focus on delivering quality service to your customers.","title":"Subscribers"},{"location":"app-console/manage-orders/#payment-processors","text":"Cellmobs has built-in support for multiple payment processors (aka payment gateways), providing a flexible and versatile approach to handle transactions within your application. In a single-vendor application, you might configure a primary payment processor for your application and then add additional ones as backups. This is useful because it can provide a fallback option if there are issues with the primary processor, ensuring that your application can continue to accept payments without interruption. Organization Payment Processors However, in a multi-vendor or marketplace environment, Cellmobs provides a different approach. In such a scenario, you can allow individual sellers or vendors (represented by Organizations within Cellmobs) to configure their own payment processors. This means each vendor in your marketplace can choose the payment processor that best suits their needs or preferences. Edit Payment Processors Credentials In either case, the payment processor associated with the selling Organization is used when an order is being processed. This ensures that the money from the sale goes to the correct party. By supporting multiple payment processors and allowing for flexible configuration, Cellmobs ensures that your application can effectively and efficiently handle transactions, providing a smooth and frictionless experience for both sellers and buyers.","title":"Payment Processors"},{"location":"app-console/manage-orders/#payment-transactions","text":"","title":"Payment Transactions"},{"location":"app-console/manage-organizations/","text":"Organizations \u00b6 In Cellmobs, the Organization entity serves as the central and most crucial component of the platform, as it connects and regulates access to almost every other entity. An Organization is responsible for defining the structure and access levels of various data points, ensuring proper management and control over the application. Some of the key relationships and properties of an Organization include: Members : Members are the users associated with an Organization. They can have different roles and permissions, which determine their level of access and functionality within the organization. Products : Products are goods or services offered by the Organization. They can be physical items, digital content, or services provided by the organization to its customers. Subscribers : Subscribers are users who have opted in to receive updates and communications from the Organization, typically via email, SMS, or other messaging platforms. Locations : Locations represent physical or virtual addresses associated with the Organization, such as offices, stores, warehouses, or online presence. Accounts : Locations represent physical or virtual addresses associated with the Organization, such as offices, stores, warehouses, or online presence. Payment Processors : Locations represent physical or virtual addresses associated with the Organization, such as offices, stores, warehouses, or online presence. Custom Roles : Transactions are records of financial activities within the Organization, including payments, refunds, and other monetary exchanges. Custom Fields : Content encompasses all file-based data associated with the Organization, such as images, documents, videos, and more. To configure and manage an Organization, developers and administrators can use the App Console (or the APIs). Manage Organizations \u00b6 Manage Organzations Managing Members \u00b6 The Organization Members tab in the Organization editor is an essential tool for managing your team within the Cellmobs platform. It provides capabilities to both add and remove members to an Organization, while also offering control over the specifics of each member's role and other relational properties. Add / Remove Members \u00b6 Existing members in the database can be added directly to the Organization. If you need to modify the role of any member or tweak other properties pertaining to their relationship with the Organization, the editor allows for those adjustments. This provides the ability to fine-tune the access levels and responsibilities of each member within the Organization. Add / Remove Members Invite Members \u00b6 The platform also facilitates an invitation system for new members. Invite Members By sending an invite to the prospective member's email, you can extend an opportunity for them to join your Organization. Email Invite Upon receiving this invite, the individual has the option to accept or decline. If they opt to accept, they'll be prompted to create a password for their new account. Accept Invite Following the successful completion of this acceptance process, confirmation emails are automatically dispatched to the Organization's Administrators. These notifications inform them that the invited individual has accepted their invitation, allowing them to update the team roster accordingly. This streamlined process makes it straightforward to manage your team's composition, access levels, and roles, enabling your Organization to operate efficiently on the Cellmobs platform. Tip Invitations within Cellmobs are particularly useful when building community-oriented applications. These applications often revolve around the idea of users creating their own groups or communities to collaborate, engage, or partake in specific activities. By inviting new members to join their specific group within the broader application, users can curate a network of individuals aligned with their interests or goals. This allows for a degree of personalization and user ownership within the application, which can significantly enhance user engagement and satisfaction. Whether these groups are organized around collaborative projects, shared interests, group learning, or social interaction, the invitation system of Cellmobs empowers your users to grow and manage their own communities within your application's ecosystem. This is a powerful feature that can facilitate a diverse range of user interactions and activities, contributing to the dynamic and engaging nature of your Cellmobs app. Manage Locations \u00b6 Cellmobs brings geo-location capabilities right at the core of its platform, allowing the creation of location-aware applications with ease. The importance of geo-location in today's digital landscape is immense. Whether it's to enable location-based searches, personalized user experiences, or targeted marketing efforts, having access to reliable and intuitive geo-location functionality can greatly enhance the user experience and utility of an application. Most entities within Cellmobs can be associated with one or more locations, each possessing its unique latitude and longitude coordinates. For instance, if an entity is an Organization, these locations could represent physical store branches, event venues, or any geographic point of relevance. The latitude and longitude coordinates associated with these locations allow for precise and accurate location tracking and identification. Furthermore, the Cellmobs API supports specific location-based search queries. Users can perform searches based on latitude, longitude, radius, or boundary boxes, enabling them to find entities within a certain geographic area. For example, if a user wants to find all events of a particular user group happening within a certain radius of their current location, this can easily be accomplished with Cellmobs' geo-location features. This granular control and deep integration of geo-location information throughout the platform make Cellmobs a powerful tool for developing location-aware applications. From hyper-local content delivery to detailed spatial analysis, Cellmobs provides developers the tools to leverage geo-location in a myriad of ways, resulting in applications that are more engaging, personalized, and relevant to the end-user. Managing Financial Transactions \u00b6 In the digital economy, having streamlined and efficient financial management capabilities are crucial for businesses. Cellmobs allows each user and Organization on the platform to have accounts, which could be bank accounts, credit accounts, or even virtual currency accounts. The purpose of these accounts is to facilitate smooth and hassle-free transactions between organizations. This is particularly useful in a marketplace scenario where there are multiple buyers and sellers, each possibly having different preferred methods of transaction. Accounts \u00b6 An organization's account serves as its financial hub within the Cellmobs ecosystem, accommodating the inflow and outflow of funds, much like a traditional bank account. Whether you are receiving funds from a sale or making payments to a vendor, these transactions are facilitated through your organization's account on Cellmobs. But what makes Cellmobs stand out is the ability for each organization to configure its own payment gateway. In an online marketplace setting, this feature is particularly powerful. Imagine you're a vendor selling goods or services on a marketplace powered by Cellmobs. Instead of the marketplace operator handling all transactions, and then disbursing funds to you, the payment gateway feature allows your customers to pay you directly. This direct payment structure can dramatically speed up the receipt of funds and gives you, as a vendor, greater control over your finances. Payment Gateways \u00b6 Setting up a payment gateway is a straightforward process and we support integration with many popular providers (FirstData, Stripe, PayPal, Authorize.net). Once your gateway is configured, it can handle transactions from multiple sources - credit/debit cards, digital wallets, bank transfers, and more - providing flexibility for your customers and smooth operation for your business. Configure Payment Gateway By providing organizations with the ability to have accounts and configure payment gateways, Cellmobs empowers businesses to manage their financial operations efficiently, securely, and with greater control. It's yet another way we're striving to make digital commerce smoother and more accessible for everyone. Add Custom Roles \u00b6 Add Custom Fields \u00b6 Click on Add Organization Upload the logo of the company Enter the name of the column Select the provider as \u201cCELLMOBS\u201d Select the parent organization name (if any), if not, you can leave it blank Enter code (if any) Enter Legal name of the organization Select the Type as \u201cCustomer\u201d Select the appropriate Status of the organization Enter the Phone # of the organization Enter the Primary Email of the organization Provide the website URL of the organization Provide some text as a summary of the organization Provide few details as Description of the organization","title":"Organizations"},{"location":"app-console/manage-organizations/#organizations","text":"In Cellmobs, the Organization entity serves as the central and most crucial component of the platform, as it connects and regulates access to almost every other entity. An Organization is responsible for defining the structure and access levels of various data points, ensuring proper management and control over the application. Some of the key relationships and properties of an Organization include: Members : Members are the users associated with an Organization. They can have different roles and permissions, which determine their level of access and functionality within the organization. Products : Products are goods or services offered by the Organization. They can be physical items, digital content, or services provided by the organization to its customers. Subscribers : Subscribers are users who have opted in to receive updates and communications from the Organization, typically via email, SMS, or other messaging platforms. Locations : Locations represent physical or virtual addresses associated with the Organization, such as offices, stores, warehouses, or online presence. Accounts : Locations represent physical or virtual addresses associated with the Organization, such as offices, stores, warehouses, or online presence. Payment Processors : Locations represent physical or virtual addresses associated with the Organization, such as offices, stores, warehouses, or online presence. Custom Roles : Transactions are records of financial activities within the Organization, including payments, refunds, and other monetary exchanges. Custom Fields : Content encompasses all file-based data associated with the Organization, such as images, documents, videos, and more. To configure and manage an Organization, developers and administrators can use the App Console (or the APIs).","title":"Organizations"},{"location":"app-console/manage-organizations/#manage-organizations","text":"Manage Organzations","title":"Manage Organizations"},{"location":"app-console/manage-organizations/#managing-members","text":"The Organization Members tab in the Organization editor is an essential tool for managing your team within the Cellmobs platform. It provides capabilities to both add and remove members to an Organization, while also offering control over the specifics of each member's role and other relational properties.","title":"Managing Members"},{"location":"app-console/manage-organizations/#add-remove-members","text":"Existing members in the database can be added directly to the Organization. If you need to modify the role of any member or tweak other properties pertaining to their relationship with the Organization, the editor allows for those adjustments. This provides the ability to fine-tune the access levels and responsibilities of each member within the Organization. Add / Remove Members","title":"Add / Remove Members"},{"location":"app-console/manage-organizations/#invite-members","text":"The platform also facilitates an invitation system for new members. Invite Members By sending an invite to the prospective member's email, you can extend an opportunity for them to join your Organization. Email Invite Upon receiving this invite, the individual has the option to accept or decline. If they opt to accept, they'll be prompted to create a password for their new account. Accept Invite Following the successful completion of this acceptance process, confirmation emails are automatically dispatched to the Organization's Administrators. These notifications inform them that the invited individual has accepted their invitation, allowing them to update the team roster accordingly. This streamlined process makes it straightforward to manage your team's composition, access levels, and roles, enabling your Organization to operate efficiently on the Cellmobs platform. Tip Invitations within Cellmobs are particularly useful when building community-oriented applications. These applications often revolve around the idea of users creating their own groups or communities to collaborate, engage, or partake in specific activities. By inviting new members to join their specific group within the broader application, users can curate a network of individuals aligned with their interests or goals. This allows for a degree of personalization and user ownership within the application, which can significantly enhance user engagement and satisfaction. Whether these groups are organized around collaborative projects, shared interests, group learning, or social interaction, the invitation system of Cellmobs empowers your users to grow and manage their own communities within your application's ecosystem. This is a powerful feature that can facilitate a diverse range of user interactions and activities, contributing to the dynamic and engaging nature of your Cellmobs app.","title":"Invite Members"},{"location":"app-console/manage-organizations/#manage-locations","text":"Cellmobs brings geo-location capabilities right at the core of its platform, allowing the creation of location-aware applications with ease. The importance of geo-location in today's digital landscape is immense. Whether it's to enable location-based searches, personalized user experiences, or targeted marketing efforts, having access to reliable and intuitive geo-location functionality can greatly enhance the user experience and utility of an application. Most entities within Cellmobs can be associated with one or more locations, each possessing its unique latitude and longitude coordinates. For instance, if an entity is an Organization, these locations could represent physical store branches, event venues, or any geographic point of relevance. The latitude and longitude coordinates associated with these locations allow for precise and accurate location tracking and identification. Furthermore, the Cellmobs API supports specific location-based search queries. Users can perform searches based on latitude, longitude, radius, or boundary boxes, enabling them to find entities within a certain geographic area. For example, if a user wants to find all events of a particular user group happening within a certain radius of their current location, this can easily be accomplished with Cellmobs' geo-location features. This granular control and deep integration of geo-location information throughout the platform make Cellmobs a powerful tool for developing location-aware applications. From hyper-local content delivery to detailed spatial analysis, Cellmobs provides developers the tools to leverage geo-location in a myriad of ways, resulting in applications that are more engaging, personalized, and relevant to the end-user.","title":"Manage Locations"},{"location":"app-console/manage-organizations/#managing-financial-transactions","text":"In the digital economy, having streamlined and efficient financial management capabilities are crucial for businesses. Cellmobs allows each user and Organization on the platform to have accounts, which could be bank accounts, credit accounts, or even virtual currency accounts. The purpose of these accounts is to facilitate smooth and hassle-free transactions between organizations. This is particularly useful in a marketplace scenario where there are multiple buyers and sellers, each possibly having different preferred methods of transaction.","title":"Managing Financial Transactions"},{"location":"app-console/manage-organizations/#accounts","text":"An organization's account serves as its financial hub within the Cellmobs ecosystem, accommodating the inflow and outflow of funds, much like a traditional bank account. Whether you are receiving funds from a sale or making payments to a vendor, these transactions are facilitated through your organization's account on Cellmobs. But what makes Cellmobs stand out is the ability for each organization to configure its own payment gateway. In an online marketplace setting, this feature is particularly powerful. Imagine you're a vendor selling goods or services on a marketplace powered by Cellmobs. Instead of the marketplace operator handling all transactions, and then disbursing funds to you, the payment gateway feature allows your customers to pay you directly. This direct payment structure can dramatically speed up the receipt of funds and gives you, as a vendor, greater control over your finances.","title":"Accounts"},{"location":"app-console/manage-organizations/#payment-gateways","text":"Setting up a payment gateway is a straightforward process and we support integration with many popular providers (FirstData, Stripe, PayPal, Authorize.net). Once your gateway is configured, it can handle transactions from multiple sources - credit/debit cards, digital wallets, bank transfers, and more - providing flexibility for your customers and smooth operation for your business. Configure Payment Gateway By providing organizations with the ability to have accounts and configure payment gateways, Cellmobs empowers businesses to manage their financial operations efficiently, securely, and with greater control. It's yet another way we're striving to make digital commerce smoother and more accessible for everyone.","title":"Payment Gateways"},{"location":"app-console/manage-organizations/#add-custom-roles","text":"","title":"Add Custom Roles"},{"location":"app-console/manage-organizations/#add-custom-fields","text":"Click on Add Organization Upload the logo of the company Enter the name of the column Select the provider as \u201cCELLMOBS\u201d Select the parent organization name (if any), if not, you can leave it blank Enter code (if any) Enter Legal name of the organization Select the Type as \u201cCustomer\u201d Select the appropriate Status of the organization Enter the Phone # of the organization Enter the Primary Email of the organization Provide the website URL of the organization Provide some text as a summary of the organization Provide few details as Description of the organization","title":"Add Custom Fields"},{"location":"app-console/manage-pages/","text":"Pages \u00b6 Pages are the primary entity for configuring and managing web page templates, metadata, and content. They are encapsulated within the Cellmobs WebPage entity, which serves as the foundation for creating and organizing the structure of a web application. WebPage entities allow developers to define the layout, design, and components of a web page, ensuring consistency and ease of management across the entire application. By using a WebPage entity, developers can create various types of pages, such as landing pages, blog posts, product pages, and more, all while maintaining a uniform look and feel. Metadata associated with WebPage entities plays a crucial role in search engine optimization ( SEO ) and accessibility. Developers can specify metadata such as title, url, description, keywords, and other relevant information to optimize their pages for search engines. Content within a WebPage entity is flexible and can include text, images, videos, and other multimedia elements, enabling developers to create rich and engaging web pages that cater to their specific needs and target audience. WebPage content can be static or dynamic and fetched from the database and dynamically rendered through page template fragments. High-level structure of a WebPage WebPage |--Organization |--Content (PrimaryContent) |--Sections |--Key |--PageSection |--WebTemplate |--Html |--Data |--Settings |--Metadata Primary Content \u00b6 Primary Content is typically an image or video. It is used as open graph url and as such represents a page to other services if a user shares the page url on social media. The primary content is also often used as hero image of a page. Facebook Share Hero Image Page Editor \u00b6 The Cellmobs App Console's page editor is a comprehensive tool for managing and optimizing your web pages. Here's how it works: Page Editor Main Settings : The main settings allow you to control the primary aspects of your web pages, such as the page URL, the page title, and the status of the page (published, draft, etc). It is also where you would set up any A/B testing variants for the page. Meta Tags : In the meta tags section, you can manage the metadata for your page. This includes things like meta descriptions, keywords, and Open Graph tags, which can be crucial for search engine optimization and social media sharing. Page Content : The page content section provides a rich editor for managing the actual content of your page. This can include text, images, videos, and any other content you want to include on your page. The editor supports rich text formatting and allows you to arrange your content in a variety of ways. Edit Page Content Underlying Templates : With the template editor, you can modify the underlying HTML and CSS of your page. This can be useful for implementing custom designs or functionalities that go beyond what's possible with the content editor alone. Inline Editing : When used in conjunction with the Cellmobs React SDK , the App Console page editor can also support inline editing of page content. This means you can make changes to your page directly in the context of the live website, seeing exactly how your changes will look to end users in real time. Optional Inline Editor Dynamic Content \u00b6 The Cellmobs page editor offers support for dynamic content, allowing for a highly customizable and adaptive user experience. It achieves this by allowing you to define complex dynamic search filters for entities such as WebPage, Product , and Content . When a user loads a page, these filters are automatically executed against the current state of your data. The results of these queries then populate the relevant sections of your page. This dynamic content is accessed through the data field of the dynamic PageSection entity in your page structure. For example, you could set up a filter on a Product page to display related products based on the product currently being viewed. When a user visits that page, the filter would execute a search for other products with matching attributes (e.g., same category, same brand, etc.). The results would then be dynamically inserted into the designated section of your page. Or, you could have a dynamic section on your homepage that displays the most recent blog posts. When the page loads, it would execute a search for Content entities with a type of 'blog post', sorted by creation date, and display the results on the page. Dynamic Blog Posts Page Section Dynamic content enables you to create more engaging, personalized, and up-to-date experiences for your users, without having to manually update the content yourself. It's a powerful way to keep your app fresh and relevant, and to drive engagement with your content. Page Sections \u00b6 A/B Testing \u00b6 A/B testing is a powerful tool for improving the user experience and effectiveness of your web pages, and Cellmobs provides built-in support for this. Dynamic Blog Posts Page Section Here's how it works: Page Variations : In Cellmobs, you can create multiple variations of the same page, each with the same URL but differing content, layout, images, or any other element you want to test. Random Selection : When a user navigates to the URL in question, Cellmobs selects one of the page variations based on their configured viewto display to the user. The selection process is distributed based on the configured view share for each page (e.g. Page A 10%, Page B 90%), ensuring that each gets a desired amount of exposure. Multiple Variations : Unlike many platforms that limit A/B testing to just two variations (A and B), Cellmobs allows for an unlimited number of page variations. This means you can test multiple hypotheses concurrently. Analysis : With the appropriate analytics setup, you can measure the impact of each variation on user behavior and outcomes. This could be engagement metrics like time spent on page, conversion metrics like form submissions or sales, or any other key performance indicator relevant to your goals. Optimization : After collecting and analyzing your data, you can determine which page variation is the most effective and make it the default version, or continue testing and refining further. By facilitating A/B testing, Cellmobs enables you to continuously improve your web pages based on real user data, maximizing the effectiveness of your digital experiences. Managing Pages \u00b6 As an organizational administrator, specifically a SYSADMIN , you have complete control over managing your application's pages. This includes the power to enable or disable any page in the application, essentially controlling what is visible and accessible to your users. Moreover, if you are a SYSADMIN , you have the ability to edit the configuration of your App Console pages. However, this power comes with great responsibility as any misconfiguration could potentially impact the functionality of your app console. Therefore, it's advisable to exercise caution when making changes at this level. In order to distribute responsibility and control, Cellmobs recommends associating different organizations with your custom pages. By doing this, you can delegate specific roles within those organizations to edit and manage your page content. This approach not only ensures a more secure and controlled setup but also enables more efficient management and curation of your page content. For instance, you could delegate content creation and updates to your marketing team for certain pages, while your product team could manage product-related pages. This way, you can ensure that the right people have the appropriate level of access, improving both security and productivity. Manage Pages Create a new Page \u00b6 [WALKTHROUGH]","title":"Pages"},{"location":"app-console/manage-pages/#pages","text":"Pages are the primary entity for configuring and managing web page templates, metadata, and content. They are encapsulated within the Cellmobs WebPage entity, which serves as the foundation for creating and organizing the structure of a web application. WebPage entities allow developers to define the layout, design, and components of a web page, ensuring consistency and ease of management across the entire application. By using a WebPage entity, developers can create various types of pages, such as landing pages, blog posts, product pages, and more, all while maintaining a uniform look and feel. Metadata associated with WebPage entities plays a crucial role in search engine optimization ( SEO ) and accessibility. Developers can specify metadata such as title, url, description, keywords, and other relevant information to optimize their pages for search engines. Content within a WebPage entity is flexible and can include text, images, videos, and other multimedia elements, enabling developers to create rich and engaging web pages that cater to their specific needs and target audience. WebPage content can be static or dynamic and fetched from the database and dynamically rendered through page template fragments. High-level structure of a WebPage WebPage |--Organization |--Content (PrimaryContent) |--Sections |--Key |--PageSection |--WebTemplate |--Html |--Data |--Settings |--Metadata","title":"Pages"},{"location":"app-console/manage-pages/#primary-content","text":"Primary Content is typically an image or video. It is used as open graph url and as such represents a page to other services if a user shares the page url on social media. The primary content is also often used as hero image of a page. Facebook Share Hero Image","title":"Primary Content"},{"location":"app-console/manage-pages/#page-editor","text":"The Cellmobs App Console's page editor is a comprehensive tool for managing and optimizing your web pages. Here's how it works: Page Editor Main Settings : The main settings allow you to control the primary aspects of your web pages, such as the page URL, the page title, and the status of the page (published, draft, etc). It is also where you would set up any A/B testing variants for the page. Meta Tags : In the meta tags section, you can manage the metadata for your page. This includes things like meta descriptions, keywords, and Open Graph tags, which can be crucial for search engine optimization and social media sharing. Page Content : The page content section provides a rich editor for managing the actual content of your page. This can include text, images, videos, and any other content you want to include on your page. The editor supports rich text formatting and allows you to arrange your content in a variety of ways. Edit Page Content Underlying Templates : With the template editor, you can modify the underlying HTML and CSS of your page. This can be useful for implementing custom designs or functionalities that go beyond what's possible with the content editor alone. Inline Editing : When used in conjunction with the Cellmobs React SDK , the App Console page editor can also support inline editing of page content. This means you can make changes to your page directly in the context of the live website, seeing exactly how your changes will look to end users in real time. Optional Inline Editor","title":"Page Editor"},{"location":"app-console/manage-pages/#dynamic-content","text":"The Cellmobs page editor offers support for dynamic content, allowing for a highly customizable and adaptive user experience. It achieves this by allowing you to define complex dynamic search filters for entities such as WebPage, Product , and Content . When a user loads a page, these filters are automatically executed against the current state of your data. The results of these queries then populate the relevant sections of your page. This dynamic content is accessed through the data field of the dynamic PageSection entity in your page structure. For example, you could set up a filter on a Product page to display related products based on the product currently being viewed. When a user visits that page, the filter would execute a search for other products with matching attributes (e.g., same category, same brand, etc.). The results would then be dynamically inserted into the designated section of your page. Or, you could have a dynamic section on your homepage that displays the most recent blog posts. When the page loads, it would execute a search for Content entities with a type of 'blog post', sorted by creation date, and display the results on the page. Dynamic Blog Posts Page Section Dynamic content enables you to create more engaging, personalized, and up-to-date experiences for your users, without having to manually update the content yourself. It's a powerful way to keep your app fresh and relevant, and to drive engagement with your content.","title":"Dynamic Content"},{"location":"app-console/manage-pages/#page-sections","text":"","title":"Page Sections"},{"location":"app-console/manage-pages/#ab-testing","text":"A/B testing is a powerful tool for improving the user experience and effectiveness of your web pages, and Cellmobs provides built-in support for this. Dynamic Blog Posts Page Section Here's how it works: Page Variations : In Cellmobs, you can create multiple variations of the same page, each with the same URL but differing content, layout, images, or any other element you want to test. Random Selection : When a user navigates to the URL in question, Cellmobs selects one of the page variations based on their configured viewto display to the user. The selection process is distributed based on the configured view share for each page (e.g. Page A 10%, Page B 90%), ensuring that each gets a desired amount of exposure. Multiple Variations : Unlike many platforms that limit A/B testing to just two variations (A and B), Cellmobs allows for an unlimited number of page variations. This means you can test multiple hypotheses concurrently. Analysis : With the appropriate analytics setup, you can measure the impact of each variation on user behavior and outcomes. This could be engagement metrics like time spent on page, conversion metrics like form submissions or sales, or any other key performance indicator relevant to your goals. Optimization : After collecting and analyzing your data, you can determine which page variation is the most effective and make it the default version, or continue testing and refining further. By facilitating A/B testing, Cellmobs enables you to continuously improve your web pages based on real user data, maximizing the effectiveness of your digital experiences.","title":"A/B Testing"},{"location":"app-console/manage-pages/#managing-pages","text":"As an organizational administrator, specifically a SYSADMIN , you have complete control over managing your application's pages. This includes the power to enable or disable any page in the application, essentially controlling what is visible and accessible to your users. Moreover, if you are a SYSADMIN , you have the ability to edit the configuration of your App Console pages. However, this power comes with great responsibility as any misconfiguration could potentially impact the functionality of your app console. Therefore, it's advisable to exercise caution when making changes at this level. In order to distribute responsibility and control, Cellmobs recommends associating different organizations with your custom pages. By doing this, you can delegate specific roles within those organizations to edit and manage your page content. This approach not only ensures a more secure and controlled setup but also enables more efficient management and curation of your page content. For instance, you could delegate content creation and updates to your marketing team for certain pages, while your product team could manage product-related pages. This way, you can ensure that the right people have the appropriate level of access, improving both security and productivity. Manage Pages","title":"Managing Pages"},{"location":"app-console/manage-pages/#create-a-new-page","text":"[WALKTHROUGH]","title":"Create a new Page"},{"location":"app-console/manage-products/","text":"Products \u00b6 Products in Cellmobs can be categorized as either GOODS or SERVICES and represent items or offerings that users pay for. These Products are associated with Organizations that sell goods and services through a Cellmobs app, catering to various business models, such as traditional online stores or services that are part of subscription plans . The App Console provides a user-friendly interface for designing and managing your product catalog, allowing you to create and organize Products in a way that best suits your application's needs. With this tool, you can easily manage and customize your offerings while maintaining a structured and efficient product catalog. To facilitate seamless integration of commerce functionality into your client application, the Cellmobs platform offers the Commerce API . This comprehensive API provides all the necessary methods to create, update, and retrieve Products, manage inventory, handle orders, and more. By leveraging the Commerce API, you can efficiently build and maintain a robust commerce solution within your application, ensuring a smooth and feature-rich experience for your users. Info Integrations to sync your data with Amazon, Shopify and Quickbooks are in development and will be available later this year. Creating Products \u00b6 1. Navigate to /admin/products/list 2. Click \"New Product\" 3. Click the \"Enter product name\" field. 4. Click \"Select a type\" to choose a Product Type **5. Click \"Service\" if you want to create a \"service\" or choose a different type (required). Edit the Entity Status if you like. ** 6. Click \"Select an organization\" and look for the organization that will sell this product 7. Type to find and select a seller Organization (required) 8. Click \"Save Changes\" to establish your new Product in the Catalog Adding Content \u00b6 Products are versatile entities that can be linked with one or more Content entities to effectively showcase or deliver them. The Content entities associated with a Product can take on different roles depending on the nature of the Product itself. For instance, if the Product being sold is a physical item, such as clothing or a gadget, the linked Content entities typically serve as product images. These images help potential buyers understand the Product's appearance, features, and functionalities better, thus aiding in their purchase decision. On the other hand, when the Product is a digital item, such as a movie, music album, ebook, or software, the associated Content entities could be the actual digital files that the user purchases. Once the transaction is complete, these digital files can be made accessible to the buyer for download or streaming, depending on the nature of the digital product. This association between Products and Content entities in Cellmobs provides a highly flexible structure that caters to a broad spectrum of product types, both physical and digital. The result is a platform that can accommodate a wide range of ecommerce business models and product offerings. Pricing \u00b6 Pricing your products on Cellmobs is not only simple but highly adaptable to suit a variety of business models and strategies. This flexibility ensures that you can set up pricing rules that perfectly match your business needs and the purchasing habits of your customers. Here's how: Region-specific pricing : Cellmobs allows you to set different prices for different regions. This can be beneficial if you're selling your product globally and want to adjust prices based on regional economic factors or competitive landscape. Seasonal pricing : Depending on your product or service, you might want to change your pricing based on the season. For instance, holiday discounts or higher rates during peak season can easily be implemented. SKU variations pricing : If you have variations of a product (e.g., different colors, sizes, or specifications), each SKU can be priced differently. This feature is particularly useful for inventory with different cost structures. Interval pricing : You can set prices to vary based on the time frame for a subscription service. For example, customers may be charged a different rate if they subscribe monthly versus annually. This allows for flexibility in pricing structures that can incentivize longer-term commitments from customers. Product Pricing Features \u00b6 Product features provide a versatile way to highlight the attributes or capabilities of your products. By using the Feature Editor, you can create and manage these features effortlessly and then apply them to one or more products as needed. Product Features Features can be anything you deem important for your customers to know about a product. It might include physical characteristics (like size, weight, color), capabilities (like speed, power, compatibility), or any other aspect that differentiates your product. Here's how it works: Using the Feature Editor : The Feature Editor is an intuitive tool in the Cellmobs platform where you can create, modify, or remove product features. These can then be associated with your products to provide detailed information to your customers. Grouping Features : Grouping features allow you to categorize similar features under a common theme for better organization and easier navigation. For example, all features related to the physical attributes of a product can be grouped under a \"Specifications\" feature type. Utilizing FEATURE_TYPES : FEATURE_TYPES is a vocabulary in Cellmobs that allows you to define and manage different groups of features. You can edit this vocabulary using the Vocabulary Editor. By doing so, you can maintain consistency in how you classify features across your products. Applying Features to Products : Once your features are set up, you can apply them to any product you wish. This makes it easy to show customers the features of a product, enhancing the product descriptions and possibly influencing the buying decision. By leveraging the flexibility and ease of the Feature Editor, you can significantly enhance the way you present your products, leading to a better-informed customer and potentially increased sales. Feature Editor Taxes & Fees \u00b6 Taxes and fees play a crucial role in eCommerce and digital platforms, impacting the final cost to the consumer. With Cellmobs, managing these financial elements is made straightforward using the Taxes and Fees Editor. Taxes and Fees Configuring Types of Charges : In Cellmobs, you can configure both fixed and percentage-based charges. Fixed charges are one-time fees, while percentage-based charges can be set to apply to the subtotal or total amount of the cart. Setting Quantity-based Fees : The platform allows you to impose fees based on the quantity of product units in the cart. This can be useful for handling bulk purchases or setting up discounts based on quantity. Applying Charges at Different Stages : You have the flexibility to apply charges at various stages of the checkout process. For instance, you can configure certain fees to apply before taxes (e.g., shipping or handling fees), while others, like processing fees, can be imposed after tax calculation. Creating Tax Rules : With the Tax Editor, you can set up tax rules based on various criteria such as location, product type, etc. This helps ensure that you're charging the correct tax amount based on local laws and regulations. Product Taxes and Fees By offering this granular control over taxes and fees, Cellmobs allows you to accurately reflect the cost implications of transactions, giving your customers a clear breakdown of charges before they finalize their purchase. This can help foster transparency and trust between your business and its customers, enhancing the overall shopping experience. Promotions \u00b6 Promotions are an effective way to drive customer engagement, boost sales, and manage inventory. Cellmobs provides robust support for a range of promotional activities. Promotions Editor Promotion Scope : You have the flexibility to set promotions at a global store level or limit them to specific products or product categories. This is done by using tags to categorize products and then applying promotions to these tags. Product Promotions Promotion Types : Cellmobs allows you to create promotions that offer fixed dollar amounts off the regular price, or percentage-based discounts. This means you can set up promotions that take, for example, 20% off the total order, or provide a flat $10 off on certain products. Promotion Duration : Promotions can be set to be active for specific time frames. This is particularly useful for running seasonal sales, flash sales, or limited-time offers. Promotion Usage : You can limit the number of times a promotion can be used by an individual user or in total. This can be useful for exclusive offers or when the supply of a promoted item is limited. Promotion Codes : These can be used to allow customers to claim a discount at checkout. These codes can be distributed through various marketing channels to drive customer engagement. Tip Remember that promotions are a powerful tool for encouraging purchases, so use them strategically to ensure you're maximizing their potential while preserving your margins. Reservations \u00b6 In many industries such as travel, health & fitness, and hospitality, the ability to make and manage reservations is key to their operation. Recognizing this, Cellmobs has built-in support for product reservations. This feature offers an effective way to manage the availability and booking of products and services, offering both businesses and customers a smooth transaction process. Reservation Types : Cellmobs supports a variety of reservation types, making it adaptable to a wide range of industries. Whether it's a vacation rental, a guided trip, or an appointment for a service, businesses can customize the booking process to suit their needs. Availability Management : With Cellmobs, you can manage the availability of your products. You can set specific times and dates when a product or service is available for reservation. This way, you can avoid overbooking or scheduling conflicts. Booking Confirmation : Once a customer makes a reservation, a confirmation is sent automatically. This confirmation includes all the necessary details about the reservation, providing a record for both the business and the customer. Reservation Modifications and Cancellations : Customers can modify or cancel their reservations, subject to the policies you set. This feature provides flexibility for customers, while also helping businesses manage their schedules and inventory. Integrated with Order Management : Reservations are fully integrated with the order management system on Cellmobs. This ensures that all transactions are properly tracked, and can facilitate tasks such as billing, inventory management, and customer service. By incorporating reservations into the e-commerce experience, Cellmobs allows businesses to extend their offerings and provide more comprehensive and sophisticated services to their customers.","title":"Products"},{"location":"app-console/manage-products/#products","text":"Products in Cellmobs can be categorized as either GOODS or SERVICES and represent items or offerings that users pay for. These Products are associated with Organizations that sell goods and services through a Cellmobs app, catering to various business models, such as traditional online stores or services that are part of subscription plans . The App Console provides a user-friendly interface for designing and managing your product catalog, allowing you to create and organize Products in a way that best suits your application's needs. With this tool, you can easily manage and customize your offerings while maintaining a structured and efficient product catalog. To facilitate seamless integration of commerce functionality into your client application, the Cellmobs platform offers the Commerce API . This comprehensive API provides all the necessary methods to create, update, and retrieve Products, manage inventory, handle orders, and more. By leveraging the Commerce API, you can efficiently build and maintain a robust commerce solution within your application, ensuring a smooth and feature-rich experience for your users. Info Integrations to sync your data with Amazon, Shopify and Quickbooks are in development and will be available later this year.","title":"Products"},{"location":"app-console/manage-products/#creating-products","text":"1. Navigate to /admin/products/list 2. Click \"New Product\" 3. Click the \"Enter product name\" field. 4. Click \"Select a type\" to choose a Product Type **5. Click \"Service\" if you want to create a \"service\" or choose a different type (required). Edit the Entity Status if you like. ** 6. Click \"Select an organization\" and look for the organization that will sell this product 7. Type to find and select a seller Organization (required) 8. Click \"Save Changes\" to establish your new Product in the Catalog","title":"Creating Products"},{"location":"app-console/manage-products/#adding-content","text":"Products are versatile entities that can be linked with one or more Content entities to effectively showcase or deliver them. The Content entities associated with a Product can take on different roles depending on the nature of the Product itself. For instance, if the Product being sold is a physical item, such as clothing or a gadget, the linked Content entities typically serve as product images. These images help potential buyers understand the Product's appearance, features, and functionalities better, thus aiding in their purchase decision. On the other hand, when the Product is a digital item, such as a movie, music album, ebook, or software, the associated Content entities could be the actual digital files that the user purchases. Once the transaction is complete, these digital files can be made accessible to the buyer for download or streaming, depending on the nature of the digital product. This association between Products and Content entities in Cellmobs provides a highly flexible structure that caters to a broad spectrum of product types, both physical and digital. The result is a platform that can accommodate a wide range of ecommerce business models and product offerings.","title":"Adding Content"},{"location":"app-console/manage-products/#pricing","text":"Pricing your products on Cellmobs is not only simple but highly adaptable to suit a variety of business models and strategies. This flexibility ensures that you can set up pricing rules that perfectly match your business needs and the purchasing habits of your customers. Here's how: Region-specific pricing : Cellmobs allows you to set different prices for different regions. This can be beneficial if you're selling your product globally and want to adjust prices based on regional economic factors or competitive landscape. Seasonal pricing : Depending on your product or service, you might want to change your pricing based on the season. For instance, holiday discounts or higher rates during peak season can easily be implemented. SKU variations pricing : If you have variations of a product (e.g., different colors, sizes, or specifications), each SKU can be priced differently. This feature is particularly useful for inventory with different cost structures. Interval pricing : You can set prices to vary based on the time frame for a subscription service. For example, customers may be charged a different rate if they subscribe monthly versus annually. This allows for flexibility in pricing structures that can incentivize longer-term commitments from customers. Product Pricing","title":"Pricing"},{"location":"app-console/manage-products/#features","text":"Product features provide a versatile way to highlight the attributes or capabilities of your products. By using the Feature Editor, you can create and manage these features effortlessly and then apply them to one or more products as needed. Product Features Features can be anything you deem important for your customers to know about a product. It might include physical characteristics (like size, weight, color), capabilities (like speed, power, compatibility), or any other aspect that differentiates your product. Here's how it works: Using the Feature Editor : The Feature Editor is an intuitive tool in the Cellmobs platform where you can create, modify, or remove product features. These can then be associated with your products to provide detailed information to your customers. Grouping Features : Grouping features allow you to categorize similar features under a common theme for better organization and easier navigation. For example, all features related to the physical attributes of a product can be grouped under a \"Specifications\" feature type. Utilizing FEATURE_TYPES : FEATURE_TYPES is a vocabulary in Cellmobs that allows you to define and manage different groups of features. You can edit this vocabulary using the Vocabulary Editor. By doing so, you can maintain consistency in how you classify features across your products. Applying Features to Products : Once your features are set up, you can apply them to any product you wish. This makes it easy to show customers the features of a product, enhancing the product descriptions and possibly influencing the buying decision. By leveraging the flexibility and ease of the Feature Editor, you can significantly enhance the way you present your products, leading to a better-informed customer and potentially increased sales. Feature Editor","title":"Features"},{"location":"app-console/manage-products/#taxes-fees","text":"Taxes and fees play a crucial role in eCommerce and digital platforms, impacting the final cost to the consumer. With Cellmobs, managing these financial elements is made straightforward using the Taxes and Fees Editor. Taxes and Fees Configuring Types of Charges : In Cellmobs, you can configure both fixed and percentage-based charges. Fixed charges are one-time fees, while percentage-based charges can be set to apply to the subtotal or total amount of the cart. Setting Quantity-based Fees : The platform allows you to impose fees based on the quantity of product units in the cart. This can be useful for handling bulk purchases or setting up discounts based on quantity. Applying Charges at Different Stages : You have the flexibility to apply charges at various stages of the checkout process. For instance, you can configure certain fees to apply before taxes (e.g., shipping or handling fees), while others, like processing fees, can be imposed after tax calculation. Creating Tax Rules : With the Tax Editor, you can set up tax rules based on various criteria such as location, product type, etc. This helps ensure that you're charging the correct tax amount based on local laws and regulations. Product Taxes and Fees By offering this granular control over taxes and fees, Cellmobs allows you to accurately reflect the cost implications of transactions, giving your customers a clear breakdown of charges before they finalize their purchase. This can help foster transparency and trust between your business and its customers, enhancing the overall shopping experience.","title":"Taxes &amp; Fees"},{"location":"app-console/manage-products/#promotions","text":"Promotions are an effective way to drive customer engagement, boost sales, and manage inventory. Cellmobs provides robust support for a range of promotional activities. Promotions Editor Promotion Scope : You have the flexibility to set promotions at a global store level or limit them to specific products or product categories. This is done by using tags to categorize products and then applying promotions to these tags. Product Promotions Promotion Types : Cellmobs allows you to create promotions that offer fixed dollar amounts off the regular price, or percentage-based discounts. This means you can set up promotions that take, for example, 20% off the total order, or provide a flat $10 off on certain products. Promotion Duration : Promotions can be set to be active for specific time frames. This is particularly useful for running seasonal sales, flash sales, or limited-time offers. Promotion Usage : You can limit the number of times a promotion can be used by an individual user or in total. This can be useful for exclusive offers or when the supply of a promoted item is limited. Promotion Codes : These can be used to allow customers to claim a discount at checkout. These codes can be distributed through various marketing channels to drive customer engagement. Tip Remember that promotions are a powerful tool for encouraging purchases, so use them strategically to ensure you're maximizing their potential while preserving your margins.","title":"Promotions"},{"location":"app-console/manage-products/#reservations","text":"In many industries such as travel, health & fitness, and hospitality, the ability to make and manage reservations is key to their operation. Recognizing this, Cellmobs has built-in support for product reservations. This feature offers an effective way to manage the availability and booking of products and services, offering both businesses and customers a smooth transaction process. Reservation Types : Cellmobs supports a variety of reservation types, making it adaptable to a wide range of industries. Whether it's a vacation rental, a guided trip, or an appointment for a service, businesses can customize the booking process to suit their needs. Availability Management : With Cellmobs, you can manage the availability of your products. You can set specific times and dates when a product or service is available for reservation. This way, you can avoid overbooking or scheduling conflicts. Booking Confirmation : Once a customer makes a reservation, a confirmation is sent automatically. This confirmation includes all the necessary details about the reservation, providing a record for both the business and the customer. Reservation Modifications and Cancellations : Customers can modify or cancel their reservations, subject to the policies you set. This feature provides flexibility for customers, while also helping businesses manage their schedules and inventory. Integrated with Order Management : Reservations are fully integrated with the order management system on Cellmobs. This ensures that all transactions are properly tracked, and can facilitate tasks such as billing, inventory management, and customer service. By incorporating reservations into the e-commerce experience, Cellmobs allows businesses to extend their offerings and provide more comprehensive and sophisticated services to their customers.","title":"Reservations"},{"location":"app-console/manage-references/","text":"References \u00b6 The Reference entity in Cellmobs plays a important role in establishing flexible and customizable relationships between various entities within your application. Essentially, a Reference entity acts as a bridge, linking together two or more different entities based on a user-defined ReferenceType . A reference type can be anything you define, allowing you to create connections that make sense for your specific application's needs. For example, you might have a 'user to product' reference that links a User entity to a Product entity, showing that a particular user has purchased a certain product. Similarly, you might create an 'order to product' reference that associates an Order entity with the specific Product entities it includes. These reference entities and types provide a powerful tool for shaping your data relationships in a way that's most meaningful for your application. They can represent real-world associations or dependencies that exist between different pieces of data, making your application more intuitive and your data easier to manage and understand. Here are a few benefits of using Reference entities: Versatility : You're not limited to predefined relationships. You can create any type of connection that suits your application's needs. Enhanced Data Insight : By establishing connections between entities, you can create a more comprehensive view of your data and gain deeper insights. Increased Efficiency : Instead of manually linking data or writing complex code to establish connections, you can use Reference entities to easily create and manage relationships. Simplified Data Management : By using references, you can avoid data duplication and ensure a single source of truth for your data.","title":"Manage references"},{"location":"app-console/manage-references/#references","text":"The Reference entity in Cellmobs plays a important role in establishing flexible and customizable relationships between various entities within your application. Essentially, a Reference entity acts as a bridge, linking together two or more different entities based on a user-defined ReferenceType . A reference type can be anything you define, allowing you to create connections that make sense for your specific application's needs. For example, you might have a 'user to product' reference that links a User entity to a Product entity, showing that a particular user has purchased a certain product. Similarly, you might create an 'order to product' reference that associates an Order entity with the specific Product entities it includes. These reference entities and types provide a powerful tool for shaping your data relationships in a way that's most meaningful for your application. They can represent real-world associations or dependencies that exist between different pieces of data, making your application more intuitive and your data easier to manage and understand. Here are a few benefits of using Reference entities: Versatility : You're not limited to predefined relationships. You can create any type of connection that suits your application's needs. Enhanced Data Insight : By establishing connections between entities, you can create a more comprehensive view of your data and gain deeper insights. Increased Efficiency : Instead of manually linking data or writing complex code to establish connections, you can use Reference entities to easily create and manage relationships. Simplified Data Management : By using references, you can avoid data duplication and ensure a single source of truth for your data.","title":"References"},{"location":"app-console/manage-requirements/","text":"Requirements \u00b6 In Cellmobs, the Entity Requirements feature is a powerful tool that enhances data consistency and supports the creation of various workflows for your application. This feature can be configured for any type of entity in the system, including users, products, orders, and more. Requirement Settings Entity Requirements are essentially rules or conditions that need to be satisfied by the data attributes of entities. These requirements can be applied broadly to all instances of an entity type or narrowed down to only target a specific subset of an entity that meets a certain filter condition. Requirement Filters When an entity is saved or modified in the system, Cellmobs checks whether the entity matches any existing Entity Requirements. If matched, the system attempts to validate the entity against these requirements. If the validation is successful, it ensures the data consistency of your application by confirming that the entity data is accurate and adheres to the set requirements. Requirement Rules However, if the validation fails, the platform does not merely return an error. Instead, it can trigger a transition in the entity's status and initiate different API processes. For instance, if the validation of an order entity fails, it might automatically trigger an API process that sends an email notification to the concerned party. This ability to link Entity Requirements to API processes unlocks the potential to create a variety of automated workflows. These could include data integrity checks, notifications, data syncing, data transformation, and more. By effectively using Entity Requirements, developers can build a more efficient, reliable, and automated system within the Cellmobs platform. Click here to learn how to trigger API Processes based on entity requirements.","title":"Requirements"},{"location":"app-console/manage-requirements/#requirements","text":"In Cellmobs, the Entity Requirements feature is a powerful tool that enhances data consistency and supports the creation of various workflows for your application. This feature can be configured for any type of entity in the system, including users, products, orders, and more. Requirement Settings Entity Requirements are essentially rules or conditions that need to be satisfied by the data attributes of entities. These requirements can be applied broadly to all instances of an entity type or narrowed down to only target a specific subset of an entity that meets a certain filter condition. Requirement Filters When an entity is saved or modified in the system, Cellmobs checks whether the entity matches any existing Entity Requirements. If matched, the system attempts to validate the entity against these requirements. If the validation is successful, it ensures the data consistency of your application by confirming that the entity data is accurate and adheres to the set requirements. Requirement Rules However, if the validation fails, the platform does not merely return an error. Instead, it can trigger a transition in the entity's status and initiate different API processes. For instance, if the validation of an order entity fails, it might automatically trigger an API process that sends an email notification to the concerned party. This ability to link Entity Requirements to API processes unlocks the potential to create a variety of automated workflows. These could include data integrity checks, notifications, data syncing, data transformation, and more. By effectively using Entity Requirements, developers can build a more efficient, reliable, and automated system within the Cellmobs platform. Click here to learn how to trigger API Processes based on entity requirements.","title":"Requirements"},{"location":"app-console/manage-subscriptions/","text":"Subscriptions \u00b6 Subscriptions are a highly effective way to monetize your Cellmobs application by generating recurring revenue from users. By offering subscription plans, you can provide your users with access to premium features, content, or services on a regular basis, such as monthly or annually. This recurring revenue model can lead to more predictable cash flow and a better understanding of your customer base. The advantages of using subscriptions include: Predictable Revenue : With subscription plans, you can more accurately forecast your revenue over time, making it easier to plan and allocate resources. Customer Retention : Subscriptions encourage customer loyalty and long-term commitment, leading to higher retention rates and lifetime value. Flexible Pricing : Subscription plans allow you to create different pricing tiers, catering to various user segments and their specific needs. This enables you to attract a wider audience and maximize revenue potential. Automated Billing : Cellmobs handles the billing process for your subscription plans, automatically charging customers and managing renewals, freeing you up to focus on your core business. Improved User Experience : Offering a subscription model can enhance the user experience by providing ongoing value, updates, and support, fostering a sense of trust and satisfaction among your users. Subscription Plans \u00b6 Cellmobs provides the necessary tools and infrastructure to easily create and manage subscription plans for your application. Sample Subscription Plan Create a subscription plan typically starts with defining the Products that make up your plan. Once you have your Products configured you can define the plan through the console. Creating a Plan \u00b6 Managing Subscribers \u00b6 Create Subscribers in the Console \u00b6 Create Subscriber with the API \u00b6 Editing Subscriptions \u00b6","title":"Subscriptions"},{"location":"app-console/manage-subscriptions/#subscriptions","text":"Subscriptions are a highly effective way to monetize your Cellmobs application by generating recurring revenue from users. By offering subscription plans, you can provide your users with access to premium features, content, or services on a regular basis, such as monthly or annually. This recurring revenue model can lead to more predictable cash flow and a better understanding of your customer base. The advantages of using subscriptions include: Predictable Revenue : With subscription plans, you can more accurately forecast your revenue over time, making it easier to plan and allocate resources. Customer Retention : Subscriptions encourage customer loyalty and long-term commitment, leading to higher retention rates and lifetime value. Flexible Pricing : Subscription plans allow you to create different pricing tiers, catering to various user segments and their specific needs. This enables you to attract a wider audience and maximize revenue potential. Automated Billing : Cellmobs handles the billing process for your subscription plans, automatically charging customers and managing renewals, freeing you up to focus on your core business. Improved User Experience : Offering a subscription model can enhance the user experience by providing ongoing value, updates, and support, fostering a sense of trust and satisfaction among your users.","title":"Subscriptions"},{"location":"app-console/manage-subscriptions/#subscription-plans","text":"Cellmobs provides the necessary tools and infrastructure to easily create and manage subscription plans for your application. Sample Subscription Plan Create a subscription plan typically starts with defining the Products that make up your plan. Once you have your Products configured you can define the plan through the console.","title":"Subscription Plans"},{"location":"app-console/manage-subscriptions/#creating-a-plan","text":"","title":"Creating a Plan"},{"location":"app-console/manage-subscriptions/#managing-subscribers","text":"","title":"Managing Subscribers"},{"location":"app-console/manage-subscriptions/#create-subscribers-in-the-console","text":"","title":"Create Subscribers in the Console"},{"location":"app-console/manage-subscriptions/#create-subscriber-with-the-api","text":"","title":"Create Subscriber with the API"},{"location":"app-console/manage-subscriptions/#editing-subscriptions","text":"","title":"Editing Subscriptions"},{"location":"app-console/manage-tags/","text":"Tags \u00b6 Cellmobs Tags are a versatile and powerful feature that can be utilized in various ways to enhance the organization and functionality of your app. By leveraging Tags, you can create custom structures, categorize content, and establish relationships between different elements within your application. For more see common use cases for Cellmobs Tags . Tag Types \u00b6 Vocabulary TAG_TYPE Configure Tag Types Configure Tag Hierarchies Add New Tag","title":"Tags"},{"location":"app-console/manage-tags/#tags","text":"Cellmobs Tags are a versatile and powerful feature that can be utilized in various ways to enhance the organization and functionality of your app. By leveraging Tags, you can create custom structures, categorize content, and establish relationships between different elements within your application. For more see common use cases for Cellmobs Tags .","title":"Tags"},{"location":"app-console/manage-tags/#tag-types","text":"Vocabulary TAG_TYPE Configure Tag Types Configure Tag Hierarchies Add New Tag","title":"Tag Types"},{"location":"app-console/manage-templates/","text":"Templates \u00b6 All Cellmobs templates are based on the Freemarker template format, a widely-used, powerful, and flexible template engine for Java-based applications. Freemarker enables developers to create dynamic and customizable templates for Web Pages and Web Components, Emails, SMS/Text messages, and internal messages, ensuring consistent templating format across the platform. (see Technologies for more details). Web Templates \u00b6 Web Templates can be used to render page components Message Templates \u00b6 Message Template Editor Custom Fields \u00b6","title":"Templates"},{"location":"app-console/manage-templates/#templates","text":"All Cellmobs templates are based on the Freemarker template format, a widely-used, powerful, and flexible template engine for Java-based applications. Freemarker enables developers to create dynamic and customizable templates for Web Pages and Web Components, Emails, SMS/Text messages, and internal messages, ensuring consistent templating format across the platform. (see Technologies for more details).","title":"Templates"},{"location":"app-console/manage-templates/#web-templates","text":"Web Templates can be used to render page components","title":"Web Templates"},{"location":"app-console/manage-templates/#message-templates","text":"Message Template Editor","title":"Message Templates"},{"location":"app-console/manage-templates/#custom-fields","text":"","title":"Custom Fields"},{"location":"app-console/manage-users/","text":"Users \u00b6 Users of your application are represented by the Identity entity. Each user is assigned a single Global Role that determines their access level and permissions within the app. For customers or regular users, they are typically assigned the ROLE_USER . This role provides them with basic access to the application, allowing them to interact with the app's features and functionality in a limited capacity. If your application has more tiered access levels or requires additional permissions for certain users, you can configure these using Organization Roles , which offer more granular control over user permissions. For team members who require elevated access to your application, such as developers, sales, or customer support teams, you should consider assigning a higher-level role. Some examples of these elevated roles include: ROLE_EDITOR : This role allows users to create, edit, and manage content within the application, such as products, articles, or other content types. ROLE_MANAGER : Users with this role have increased access to administrative functions, including managing user accounts, overseeing transactions, and monitoring application performance. ROLE_ADMIN : The ROLE_ADMIN provides the highest level of access to the application, allowing users to manage all aspects of the app, including configuration, user management, and system settings. Assigning appropriate roles to your users is crucial for maintaining the security and integrity of your application. It helps ensure that users have the necessary permissions to perform their tasks while preventing unauthorized access to sensitive information or critical app functions. Info Any role higher than ROLE_USER is considered a Team Member role and would impact the total number of users on your Cellmobs Account . For Identity data such as general contacts you can assign the role ROLE_NONUSER . This users with this role will be assigned a random passsword and will not be able to login until their role is elevated to at least ROLE_USER . As the administrator, you hold the power to to add, import, and invite users to join your users, as well as control the user's access rights and change the user's role and location. Add Users \u00b6 Notifications \u00b6 Payment Options \u00b6 We can invite users to the users. Invitations will be sent to the specified email addresses. They will be added to the users only based on their approval. Go to the Users Section Click on Add user Profile Tab: Upload the image of the person (optional) Provide the required fields like \u201cFirst Name\u201d, \u201cLast Name \u201c, \u201cRole\u201d, \u201cPhone Number\u201d and other details like birth day, Address etc. (if necessary) Account details Tab: Provide the details like user name, email address, You can also provide a few more details for Account security like, Login attempts, Login verification, Account status etc. Change Password Tab: We can change or recover password Notifications details: We can modify the notification channels as desired by the user.","title":"Users"},{"location":"app-console/manage-users/#users","text":"Users of your application are represented by the Identity entity. Each user is assigned a single Global Role that determines their access level and permissions within the app. For customers or regular users, they are typically assigned the ROLE_USER . This role provides them with basic access to the application, allowing them to interact with the app's features and functionality in a limited capacity. If your application has more tiered access levels or requires additional permissions for certain users, you can configure these using Organization Roles , which offer more granular control over user permissions. For team members who require elevated access to your application, such as developers, sales, or customer support teams, you should consider assigning a higher-level role. Some examples of these elevated roles include: ROLE_EDITOR : This role allows users to create, edit, and manage content within the application, such as products, articles, or other content types. ROLE_MANAGER : Users with this role have increased access to administrative functions, including managing user accounts, overseeing transactions, and monitoring application performance. ROLE_ADMIN : The ROLE_ADMIN provides the highest level of access to the application, allowing users to manage all aspects of the app, including configuration, user management, and system settings. Assigning appropriate roles to your users is crucial for maintaining the security and integrity of your application. It helps ensure that users have the necessary permissions to perform their tasks while preventing unauthorized access to sensitive information or critical app functions. Info Any role higher than ROLE_USER is considered a Team Member role and would impact the total number of users on your Cellmobs Account . For Identity data such as general contacts you can assign the role ROLE_NONUSER . This users with this role will be assigned a random passsword and will not be able to login until their role is elevated to at least ROLE_USER . As the administrator, you hold the power to to add, import, and invite users to join your users, as well as control the user's access rights and change the user's role and location.","title":"Users"},{"location":"app-console/manage-users/#add-users","text":"","title":"Add Users"},{"location":"app-console/manage-users/#notifications","text":"","title":"Notifications"},{"location":"app-console/manage-users/#payment-options","text":"We can invite users to the users. Invitations will be sent to the specified email addresses. They will be added to the users only based on their approval. Go to the Users Section Click on Add user Profile Tab: Upload the image of the person (optional) Provide the required fields like \u201cFirst Name\u201d, \u201cLast Name \u201c, \u201cRole\u201d, \u201cPhone Number\u201d and other details like birth day, Address etc. (if necessary) Account details Tab: Provide the details like user name, email address, You can also provide a few more details for Account security like, Login attempts, Login verification, Account status etc. Change Password Tab: We can change or recover password Notifications details: We can modify the notification channels as desired by the user.","title":"Payment Options"},{"location":"app-console/manage-vocabularies/","text":"Managing Vocabularies \u00b6 Cellmobs provides a powerful and flexible way to customize and adapt your app to specific use cases and requirements by offering a combination of SYSTEM and CUSTOM vocabularies. This dual approach enables you to take full advantage of predefined vocabularies while also having the flexibility to create your own custom vocabularies as needed. Custom Vocabularies \u00b6 In addition to SYSTEM vocabularies, Cellmobs allows you to create your own custom vocabularies tailored to your specific needs and requirements. CUSTOM vocabularies enable you to define unique terms, phrases, and labels that are relevant to your application's domain or industry. This flexibility empowers you to create a more personalized and context-aware user experience, tailored to your target audience. To edit a custom Vocabulary navigate to /admin/vocab/list in the console of your app. Vocabularies 1. All editable Vocabularies will be labeled Yes , those that are not will be No 2. To edit a CUSTOM Vocabulary click the edit icon in the ACTIONS column 3. This will open the Vocabulary editor screen 4. Each Voculary entry (aka TypeValue ), requires at minimum a Name. All other fields are options. Edit Vocabulary 5. Use the form above to add new entries, or click on the values of an existing field (red dotted) to edit its value. Edit Vocabulary Field System Vocabularies \u00b6 These are predefined vocabularies provided by Cellmobs that cover common scenarios and use cases. They cannot be edited. SYSTEM vocabularies include terms and phrases that are commonly used across the platform, such as labels for buttons, form elements, navigation menus, and other UI components. List of Vocabularies \u00b6 Name Description Editable ACL_PERMISSION ACL Permissions ACL_ROLE Organization ACL Roles CATEGORY deprecated CONDITION Logical operators EQ, NEQ etc. CONTENT_FIELD CONTENT_REQUEST_FIELD CONTENT_TYPE The primary Content IMAGE , VIDEO etc. COUNTRY CURRENCY_ISO_CODE DEAL_STATUS The status of an agreement between Organizations DIRECTION DISTANCE_UNIT EDITOR_TYPE The web page editor type ENTITY_STATUS The status of an entity ENTITY_TYPE The entity type EVENT_STATUS EVENT_TYPE FEATURE_TYPE FILE_TYPE The type of Content file FREIGHT_TYPE IDENTITY_TYPE INCOTERM_TYPE INTERVAL_TYPE INVENTORY_STATUS INVITE_STATUS JOB_TYPE LEAD_FIELD LEAD_REQUEST_FIELD LEAD_TYPE LOCATION_TYPE ORDER_STATUS ORGANIZATION_ROLE ORGANIZATION_TYPE The organization type PAGE_TYPE PORT PRICE_TYPE PRODUCT_CODE_TYPE PRODUCT_FIELD PRODUCT_REQUEST_FIELD PRODUCT_TYPE PROFIT_TYPE PROVIDER RATING_TYPE STAR , THUMBS , COMMENT RECURRENCE_TYPE REFERENCE_TYPE The type of reference between entities RENDER_TYPE The template rendering type RENDITION_TYPE The type of rendition REQUEST_TYPE REQUIREMENT_REQUEST_FIELD RESULT_STATUS RESULT_TYPE ROUNDING_MODE The mode for rounding numeric values STATE The US State TAG_TYPE The type of a hierarchy of Tags TASK_STATUS The tax status TASK_TYPE The type of task of Work entity TAX_LEVEL The level where the tax or fee is applied TAX_STATUS The tax status of an Order TAX_TYPE The type of tax or fee TEMPLATE_TYPE If a template is a Child or Root UNIT_TYPE VOCABULARY_TYPE WEBPAGE_FIELD WEBPAGE_REQUEST_FIELD WEIGHT_UNIT WORK_TYPE","title":"Vocabularies"},{"location":"app-console/manage-vocabularies/#managing-vocabularies","text":"Cellmobs provides a powerful and flexible way to customize and adapt your app to specific use cases and requirements by offering a combination of SYSTEM and CUSTOM vocabularies. This dual approach enables you to take full advantage of predefined vocabularies while also having the flexibility to create your own custom vocabularies as needed.","title":"Managing Vocabularies"},{"location":"app-console/manage-vocabularies/#custom-vocabularies","text":"In addition to SYSTEM vocabularies, Cellmobs allows you to create your own custom vocabularies tailored to your specific needs and requirements. CUSTOM vocabularies enable you to define unique terms, phrases, and labels that are relevant to your application's domain or industry. This flexibility empowers you to create a more personalized and context-aware user experience, tailored to your target audience. To edit a custom Vocabulary navigate to /admin/vocab/list in the console of your app. Vocabularies 1. All editable Vocabularies will be labeled Yes , those that are not will be No 2. To edit a CUSTOM Vocabulary click the edit icon in the ACTIONS column 3. This will open the Vocabulary editor screen 4. Each Voculary entry (aka TypeValue ), requires at minimum a Name. All other fields are options. Edit Vocabulary 5. Use the form above to add new entries, or click on the values of an existing field (red dotted) to edit its value. Edit Vocabulary Field","title":"Custom Vocabularies"},{"location":"app-console/manage-vocabularies/#system-vocabularies","text":"These are predefined vocabularies provided by Cellmobs that cover common scenarios and use cases. They cannot be edited. SYSTEM vocabularies include terms and phrases that are commonly used across the platform, such as labels for buttons, form elements, navigation menus, and other UI components.","title":"System Vocabularies"},{"location":"app-console/manage-vocabularies/#list-of-vocabularies","text":"Name Description Editable ACL_PERMISSION ACL Permissions ACL_ROLE Organization ACL Roles CATEGORY deprecated CONDITION Logical operators EQ, NEQ etc. CONTENT_FIELD CONTENT_REQUEST_FIELD CONTENT_TYPE The primary Content IMAGE , VIDEO etc. COUNTRY CURRENCY_ISO_CODE DEAL_STATUS The status of an agreement between Organizations DIRECTION DISTANCE_UNIT EDITOR_TYPE The web page editor type ENTITY_STATUS The status of an entity ENTITY_TYPE The entity type EVENT_STATUS EVENT_TYPE FEATURE_TYPE FILE_TYPE The type of Content file FREIGHT_TYPE IDENTITY_TYPE INCOTERM_TYPE INTERVAL_TYPE INVENTORY_STATUS INVITE_STATUS JOB_TYPE LEAD_FIELD LEAD_REQUEST_FIELD LEAD_TYPE LOCATION_TYPE ORDER_STATUS ORGANIZATION_ROLE ORGANIZATION_TYPE The organization type PAGE_TYPE PORT PRICE_TYPE PRODUCT_CODE_TYPE PRODUCT_FIELD PRODUCT_REQUEST_FIELD PRODUCT_TYPE PROFIT_TYPE PROVIDER RATING_TYPE STAR , THUMBS , COMMENT RECURRENCE_TYPE REFERENCE_TYPE The type of reference between entities RENDER_TYPE The template rendering type RENDITION_TYPE The type of rendition REQUEST_TYPE REQUIREMENT_REQUEST_FIELD RESULT_STATUS RESULT_TYPE ROUNDING_MODE The mode for rounding numeric values STATE The US State TAG_TYPE The type of a hierarchy of Tags TASK_STATUS The tax status TASK_TYPE The type of task of Work entity TAX_LEVEL The level where the tax or fee is applied TAX_STATUS The tax status of an Order TAX_TYPE The type of tax or fee TEMPLATE_TYPE If a template is a Child or Root UNIT_TYPE VOCABULARY_TYPE WEBPAGE_FIELD WEBPAGE_REQUEST_FIELD WEIGHT_UNIT WORK_TYPE","title":"List of Vocabularies"},{"location":"app-console/manage-workflow/","text":"Workflow \u00b6 API processes in Cellmobs provide a powerful tool for automating tasks based on the status of an entity within the system. This automation is possible due to the platform's event-driven architecture, where events are fired each time an entity is saved. The configuration of an API process involves setting up a sequence of tasks to be performed when a specific entity reaches a particular status. This could be statuses such as 'Approved', 'Suspended', etc. The system will then automatically trigger the associated API process when the configured conditions are met. Furthermore, API processes are not limited to interactions within the Cellmobs platform but can also incorporate external service providers like Hubspot, Dropbox, etc., thanks to the platform's robust integration capabilities. This interplay between internal and external systems allows you to create complex workflows that span across multiple platforms. For example, let's consider a scenario where you've configured an API process to be triggered when a new Order is received (i.e., the Order entity reaches the 'Received' status). This API process could include a task that copies the order details to Hubspot. Once this task is executed, a link is established between the two systems, enabling easy tracking and management of the order across both platforms. API Process Settings This functionality extends the platform's automation capabilities, enhancing efficiency and reducing the need for manual interventions. It allows you to tailor the platform to your specific business needs, creating a more streamlined and effective system. Sample API Process List API processes in Cellmobs offer multifaceted triggering mechanisms, with one of the significant features being their interaction with entity Requirements . Entity Requirements in Cellmobs enforce specific conditions on entity attributes to ensure data consistency and integrity. When an entity is saved, these conditions are checked and, based on the results, the entity may transition between different statuses. Besides this automated triggering, API processes can also be manually initiated in two ways: through the entity processing control panel and the \"process entity\" modal. Entity Processing Control Panel The entity processing control panel provides a batch processing mechanism for managing entities between different API integrations. This is particularly useful when you need to handle a large number of entities simultaneously, ensuring consistency and time-efficiency. On the other hand, the \"process entity\" model provides an interface for executing ad hoc API processes for individual entities. This gives you the flexibility to trigger processes as required, allowing for specific, one-off operations that may not be covered by your existing workflows. Process Entity Icon Adhoc Entity Processing This combination of automated and manual triggers gives you complete control over your API processes, ensuring that they can be effectively managed to meet the unique needs of your business.","title":"Workflow"},{"location":"app-console/manage-workflow/#workflow","text":"API processes in Cellmobs provide a powerful tool for automating tasks based on the status of an entity within the system. This automation is possible due to the platform's event-driven architecture, where events are fired each time an entity is saved. The configuration of an API process involves setting up a sequence of tasks to be performed when a specific entity reaches a particular status. This could be statuses such as 'Approved', 'Suspended', etc. The system will then automatically trigger the associated API process when the configured conditions are met. Furthermore, API processes are not limited to interactions within the Cellmobs platform but can also incorporate external service providers like Hubspot, Dropbox, etc., thanks to the platform's robust integration capabilities. This interplay between internal and external systems allows you to create complex workflows that span across multiple platforms. For example, let's consider a scenario where you've configured an API process to be triggered when a new Order is received (i.e., the Order entity reaches the 'Received' status). This API process could include a task that copies the order details to Hubspot. Once this task is executed, a link is established between the two systems, enabling easy tracking and management of the order across both platforms. API Process Settings This functionality extends the platform's automation capabilities, enhancing efficiency and reducing the need for manual interventions. It allows you to tailor the platform to your specific business needs, creating a more streamlined and effective system. Sample API Process List API processes in Cellmobs offer multifaceted triggering mechanisms, with one of the significant features being their interaction with entity Requirements . Entity Requirements in Cellmobs enforce specific conditions on entity attributes to ensure data consistency and integrity. When an entity is saved, these conditions are checked and, based on the results, the entity may transition between different statuses. Besides this automated triggering, API processes can also be manually initiated in two ways: through the entity processing control panel and the \"process entity\" modal. Entity Processing Control Panel The entity processing control panel provides a batch processing mechanism for managing entities between different API integrations. This is particularly useful when you need to handle a large number of entities simultaneously, ensuring consistency and time-efficiency. On the other hand, the \"process entity\" model provides an interface for executing ad hoc API processes for individual entities. This gives you the flexibility to trigger processes as required, allowing for specific, one-off operations that may not be covered by your existing workflows. Process Entity Icon Adhoc Entity Processing This combination of automated and manual triggers gives you complete control over your API processes, ensuring that they can be effectively managed to meet the unique needs of your business.","title":"Workflow"},{"location":"app-console/other-settings/","text":"Other Functionalities \u00b6 This section highlights the other important functionalities of the admin console System Properties \u00b6 This section is mainly used to manage system settings and global variables. Changing or removing any of these values might negatively impact system performance. Content Settings \u00b6 This feature is used to modify the height and width for all kinds of available file types for a normal, small, or large file size. Currency Conversions \u00b6 This feature is used to Configure the conversion rates for all configured currencies. Security \u00b6 Security is a simple and important feature that helps you keep control of your users\u2019 access to sensitive company data. With Security, you can configure organization roles and associated permissions, update an existing role or create a new role, and then deploy it to your team. Integrations \u00b6 This feature is to Manage OAuth2 application integrations i.e., integrate any available to the clients. Example: Integrate the client\u2019s application to outlook, Google drive, JIRA etc. Admin Integrations SiteMaps: \u00b6 This feature is used to manage the SiteMaps API Processes: \u00b6 This feature is to Manage Entity event-based API processes.","title":"Other Functionalities"},{"location":"app-console/other-settings/#other-functionalities","text":"This section highlights the other important functionalities of the admin console","title":"Other Functionalities"},{"location":"app-console/other-settings/#system-properties","text":"This section is mainly used to manage system settings and global variables. Changing or removing any of these values might negatively impact system performance.","title":"System Properties"},{"location":"app-console/other-settings/#content-settings","text":"This feature is used to modify the height and width for all kinds of available file types for a normal, small, or large file size.","title":"Content Settings"},{"location":"app-console/other-settings/#currency-conversions","text":"This feature is used to Configure the conversion rates for all configured currencies.","title":"Currency Conversions"},{"location":"app-console/other-settings/#security","text":"Security is a simple and important feature that helps you keep control of your users\u2019 access to sensitive company data. With Security, you can configure organization roles and associated permissions, update an existing role or create a new role, and then deploy it to your team.","title":"Security"},{"location":"app-console/other-settings/#integrations","text":"This feature is to Manage OAuth2 application integrations i.e., integrate any available to the clients. Example: Integrate the client\u2019s application to outlook, Google drive, JIRA etc. Admin Integrations","title":"Integrations"},{"location":"app-console/other-settings/#sitemaps","text":"This feature is used to manage the SiteMaps","title":"SiteMaps:"},{"location":"app-console/other-settings/#api-processes","text":"This feature is to Manage Entity event-based API processes.","title":"API Processes:"},{"location":"changelog/","text":"Changelog \u00b6 Cellmobs 3.0 \u00b6 0.1.1 _ May 22, 2022 \u00b6 Added Quickstart Guide ReactSDK Installation instruction 0.1.0 _ May 12, 2023 \u00b6 Initial release","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#cellmobs-30","text":"","title":"Cellmobs 3.0"},{"location":"changelog/#1.1.15","text":"Added Quickstart Guide ReactSDK Installation instruction","title":"0.1.1 _ May 22, 2022"},{"location":"changelog/#0.1.0","text":"Initial release","title":"0.1.0 _ May 12, 2023"},{"location":"guide/aggregation/","text":"Aggregation \u00b6 Guide will be available soon!","title":"Aggregation"},{"location":"guide/aggregation/#aggregation","text":"Guide will be available soon!","title":"Aggregation"},{"location":"guide/authentication/","text":"Authentication \u00b6 The Cellmobs API security is designed to provide robust protection and ensure the integrity of all API requests. To achieve this, the platform employs a two-fold security mechanism that requires both a valid API Key and a valid JSON Web Token (JWT) to be passed with each API request. API Key \u00b6 The API Key is a unique identifier that is associated with your account or application. To authenticate your API requests, you must include the API Key as a password in the 'x-api-key' header. This key serves as a primary layer of authentication, verifying that the request is coming from a legitimate source with the necessary credentials to access the API. JWT Token \u00b6 In addition to thes API Key, the Cellmobs API security also requires a valid JWT token for each request. The JWT token is a compact, URL-safe means of representing claims to be transferred between two parties. You need to pass the JWT token in the 'Authorization' header of the API request as Bearer token. The token ensures that the user making the request has the appropriate permissions and validates their identity. How to Authenticate \u00b6 By employing this two-fold security mechanism, the Cellmobs API ensures that only authorized users with the correct credentials can access and interact with the platform's resources. Step 1: Create an API Key \u00b6 To create an API Key go the Apps Section and choose the app for which you want to generate a new key. If you don't have an app yet we suggest you consult our Quickstart Guide . Apps: Active API Keys Step 2: Authenticate to get a valid JWT Token \u00b6 To obtain a JWT token simply Login with an active application user. You can use our postman collection or try the API sandbox . Login curl -- location -- request POST 'https://web.cellmobs.com/v1/auth/login?username= {email} &password= {password} ' \\ -- header 'x-api-key: my-api-key' reCAPTCHA \u00b6 reCAPTCHA: reCAPTCHA is a security feature designed to protect web applications from automated bots and spam. It works by presenting users with a challenge, usually in the form of distorted text, images, or puzzles, that they must solve to prove they are human. The benefits of reCAPTCHA include: Preventing automated bots from accessing your app, which can lead to security vulnerabilities, data breaches, and unwanted spam. Reducing the risk of fraudulent activities, such as fake sign-ups, spam comments, and fake transactions. Improving the overall security and user experience of your application by keeping bots and spam at bay. Multi-Factory Authentication (MFA) \u00b6 Multi-Factor Authentication (MFA): MFA is a security process that requires users to provide multiple forms of identification before gaining access to their accounts or sensitive data. This typically involves a combination of something the user knows (password), something the user has (a physical token, smartphone), and something the user is (biometric data). The benefits of MFA include: Enhanced account security by making it more difficult for attackers to gain unauthorized access, even if they obtain a user's password. Protecting sensitive data and critical app functionality from unauthorized access, reducing the risk of data breaches and other security incidents. Providing an additional layer of security for users, especially in situations where passwords may be weak or compromised. Cellmobs recognizes the importance of robust security measures, and as such, offers Multi-Factor Authentication (MFA) support through both the Google Authenticator App and text messages, utilizing its integration with Twilio. This dual support ensures that users can choose the method that best suits their preferences and needs, further enhancing the security of their accounts. Here's how Cellmobs supports MFA through these two methods: Google Authenticator App \u00b6 The Google Authenticator App is a popular choice for implementing MFA because it generates time-based one-time passwords (TOTPs) on the user's smartphone. When users enable MFA using the Google Authenticator App, they'll be prompted to scan a QR code or enter a secret key into the app. Once set up, the app generates a unique, temporary code every 30 seconds. Users will be required to enter this code when logging in, along with their usual password. This additional layer of security ensures that even if a user's password is compromised, the attacker would still need the time-sensitive code from the Google Authenticator App to gain access to the account. Text Messages (SMS) with Twilio Integration \u00b6 Cellmobs also supports MFA via text messages through its integration with Twilio, a leading cloud communications platform. When users enable MFA using this method, they'll be required to provide their mobile phone number. Upon login, after entering their password, they will receive a unique, temporary code via text message. This code must be entered to gain access to their account. Note Cellmobs requires the implementation of reCAPTCHA and MFA to ensure that the platform and the applications built on it are secure and resilient against threats. By incorporating these security measures, Cellmobs provides a robust and reliable environment for developers and users, ensuring the safety and integrity of the applications and data hosted on the platform. SAML Support \u00b6 SAML support is currently under development and will be available soon. Rate Limiting \u00b6 Cellmobs employs a rate limiting mechanism using token bucket allocation to manage and control the rate at which API requests are processed for each app. This method helps maintain the stability and performance of the platform, ensuring a consistent and reliable experience for our customers and their users. By default, each app is allocated 1,000 tokens per minute, meaning that it can make up to 1,000 API requests within a 60-second window. The token bucket allocation operates on a rolling basis, replenishing tokens at a constant rate, and allowing unused tokens to carry over to the next minute, up to the maximum limit. If the default allocation of 1,000 tokens per minute is not sufficient for your app's needs, you can request an increase in your token limit by opening a support ticket . Our support team will evaluate your request and, if approved, increase the token allocation to better accommodate your app's requirements. This approach to rate limiting ensures fair resource usage among all apps on the Cellmobs platform while providing the flexibility for subscribers to request adjustments based on their specific needs.","title":"Authentication"},{"location":"guide/authentication/#authentication","text":"The Cellmobs API security is designed to provide robust protection and ensure the integrity of all API requests. To achieve this, the platform employs a two-fold security mechanism that requires both a valid API Key and a valid JSON Web Token (JWT) to be passed with each API request.","title":"Authentication"},{"location":"guide/authentication/#api-key","text":"The API Key is a unique identifier that is associated with your account or application. To authenticate your API requests, you must include the API Key as a password in the 'x-api-key' header. This key serves as a primary layer of authentication, verifying that the request is coming from a legitimate source with the necessary credentials to access the API.","title":"API Key"},{"location":"guide/authentication/#jwt-token","text":"In addition to thes API Key, the Cellmobs API security also requires a valid JWT token for each request. The JWT token is a compact, URL-safe means of representing claims to be transferred between two parties. You need to pass the JWT token in the 'Authorization' header of the API request as Bearer token. The token ensures that the user making the request has the appropriate permissions and validates their identity.","title":"JWT Token"},{"location":"guide/authentication/#how-to-authenticate","text":"By employing this two-fold security mechanism, the Cellmobs API ensures that only authorized users with the correct credentials can access and interact with the platform's resources.","title":"How to Authenticate"},{"location":"guide/authentication/#step-1-create-an-api-key","text":"To create an API Key go the Apps Section and choose the app for which you want to generate a new key. If you don't have an app yet we suggest you consult our Quickstart Guide . Apps: Active API Keys","title":"Step 1: Create an API Key"},{"location":"guide/authentication/#step-2-authenticate-to-get-a-valid-jwt-token","text":"To obtain a JWT token simply Login with an active application user. You can use our postman collection or try the API sandbox . Login curl -- location -- request POST 'https://web.cellmobs.com/v1/auth/login?username= {email} &password= {password} ' \\ -- header 'x-api-key: my-api-key'","title":"Step 2: Authenticate to get a valid JWT Token"},{"location":"guide/authentication/#recaptcha","text":"reCAPTCHA: reCAPTCHA is a security feature designed to protect web applications from automated bots and spam. It works by presenting users with a challenge, usually in the form of distorted text, images, or puzzles, that they must solve to prove they are human. The benefits of reCAPTCHA include: Preventing automated bots from accessing your app, which can lead to security vulnerabilities, data breaches, and unwanted spam. Reducing the risk of fraudulent activities, such as fake sign-ups, spam comments, and fake transactions. Improving the overall security and user experience of your application by keeping bots and spam at bay.","title":"reCAPTCHA"},{"location":"guide/authentication/#multi-factory-authentication-mfa","text":"Multi-Factor Authentication (MFA): MFA is a security process that requires users to provide multiple forms of identification before gaining access to their accounts or sensitive data. This typically involves a combination of something the user knows (password), something the user has (a physical token, smartphone), and something the user is (biometric data). The benefits of MFA include: Enhanced account security by making it more difficult for attackers to gain unauthorized access, even if they obtain a user's password. Protecting sensitive data and critical app functionality from unauthorized access, reducing the risk of data breaches and other security incidents. Providing an additional layer of security for users, especially in situations where passwords may be weak or compromised. Cellmobs recognizes the importance of robust security measures, and as such, offers Multi-Factor Authentication (MFA) support through both the Google Authenticator App and text messages, utilizing its integration with Twilio. This dual support ensures that users can choose the method that best suits their preferences and needs, further enhancing the security of their accounts. Here's how Cellmobs supports MFA through these two methods:","title":"Multi-Factory Authentication (MFA)"},{"location":"guide/authentication/#google-authenticator-app","text":"The Google Authenticator App is a popular choice for implementing MFA because it generates time-based one-time passwords (TOTPs) on the user's smartphone. When users enable MFA using the Google Authenticator App, they'll be prompted to scan a QR code or enter a secret key into the app. Once set up, the app generates a unique, temporary code every 30 seconds. Users will be required to enter this code when logging in, along with their usual password. This additional layer of security ensures that even if a user's password is compromised, the attacker would still need the time-sensitive code from the Google Authenticator App to gain access to the account.","title":"Google Authenticator App"},{"location":"guide/authentication/#text-messages-sms-with-twilio-integration","text":"Cellmobs also supports MFA via text messages through its integration with Twilio, a leading cloud communications platform. When users enable MFA using this method, they'll be required to provide their mobile phone number. Upon login, after entering their password, they will receive a unique, temporary code via text message. This code must be entered to gain access to their account. Note Cellmobs requires the implementation of reCAPTCHA and MFA to ensure that the platform and the applications built on it are secure and resilient against threats. By incorporating these security measures, Cellmobs provides a robust and reliable environment for developers and users, ensuring the safety and integrity of the applications and data hosted on the platform.","title":"Text Messages (SMS) with Twilio Integration"},{"location":"guide/authentication/#saml-support","text":"SAML support is currently under development and will be available soon.","title":"SAML Support"},{"location":"guide/authentication/#rate-limiting","text":"Cellmobs employs a rate limiting mechanism using token bucket allocation to manage and control the rate at which API requests are processed for each app. This method helps maintain the stability and performance of the platform, ensuring a consistent and reliable experience for our customers and their users. By default, each app is allocated 1,000 tokens per minute, meaning that it can make up to 1,000 API requests within a 60-second window. The token bucket allocation operates on a rolling basis, replenishing tokens at a constant rate, and allowing unused tokens to carry over to the next minute, up to the maximum limit. If the default allocation of 1,000 tokens per minute is not sufficient for your app's needs, you can request an increase in your token limit by opening a support ticket . Our support team will evaluate your request and, if approved, increase the token allocation to better accommodate your app's requirements. This approach to rate limiting ensures fair resource usage among all apps on the Cellmobs platform while providing the flexibility for subscribers to request adjustments based on their specific needs.","title":"Rate Limiting"},{"location":"guide/communities/","text":"Communities \u00b6 Guide will be availble soon!","title":"Communities"},{"location":"guide/communities/#communities","text":"Guide will be availble soon!","title":"Communities"},{"location":"guide/creating-web-pages/","text":"Creating Web Pages \u00b6 Creating Web Pages","title":"Creating Web Pages"},{"location":"guide/creating-web-pages/#creating-web-pages","text":"Creating Web Pages","title":"Creating Web Pages"},{"location":"guide/customer-management/","text":"Customer Management \u00b6 Customer Management","title":"Customer Management"},{"location":"guide/customer-management/#customer-management","text":"Customer Management","title":"Customer Management"},{"location":"guide/development-guide/","text":"Development Guide \u00b6 This section provides comprehensive information on the development aspects of the Cellmobs platform. It covers topics such as data modeling, user authentication , permissions, API usage, SEO , and more. The Development Guide is designed to help developers build robust and scalable applications using the Cellmobs platform. It also provides guidance and ideas for implementing specific use cases, helping you understand how to tailor the platform's features and capabilities to build applications that cater to your unique requirements. Some of the use cases covered in the Development Guide include: Marketplaces \u00b6 The guide offers insights on how to create and manage online marketplaces, connecting buyers and sellers, and handling transactions. It covers essential features such as product listings, search and filtering, vendor management, and order processing. By following the guidance provided, you can develop a seamless marketplace experience that meets the needs of both buyers and sellers. E-commerce Apps \u00b6 The guide provides valuable information on building e-commerce applications, covering everything from product catalogs and shopping carts to payment processing and order fulfillment. It also discusses strategies for optimizing user experience, improving conversion rates, and ensuring that your e-commerce app delivers a smooth and engaging shopping experience. Communities \u00b6 The Development Guide delves into the creation and management of online communities, including forums, social networks, and membership sites. It covers essential community features such as user profiles, content sharing, messaging, and moderation tools. By following the guide's recommendations, you can foster a vibrant and thriving community that keeps users engaged and connected. Content Management \u00b6 The guide offers insights on managing content within your application, such as articles, blog posts , and multimedia assets . It covers content creation, editing, publishing, and organization, ensuring that your users have access to relevant and up-to-date information. Custom Use Cases \u00b6 In addition to the specific use cases mentioned above, the Development Guide also offers guidance on how to adapt the Cellmobs platform to meet your unique requirements. This includes tips on [customizing data models, user roles, and integrations, allowing you to build applications that cater to a wide range of industries and verticals. Note By following the guidance and ideas provided in the Development Guide, you can leverage the full potential of the Cellmobs platform to create applications that not only meet your specific use case requirements but also deliver exceptional user experiences.","title":"Overview"},{"location":"guide/development-guide/#development-guide","text":"This section provides comprehensive information on the development aspects of the Cellmobs platform. It covers topics such as data modeling, user authentication , permissions, API usage, SEO , and more. The Development Guide is designed to help developers build robust and scalable applications using the Cellmobs platform. It also provides guidance and ideas for implementing specific use cases, helping you understand how to tailor the platform's features and capabilities to build applications that cater to your unique requirements. Some of the use cases covered in the Development Guide include:","title":"Development Guide"},{"location":"guide/development-guide/#marketplaces","text":"The guide offers insights on how to create and manage online marketplaces, connecting buyers and sellers, and handling transactions. It covers essential features such as product listings, search and filtering, vendor management, and order processing. By following the guidance provided, you can develop a seamless marketplace experience that meets the needs of both buyers and sellers.","title":"&nbsp; Marketplaces"},{"location":"guide/development-guide/#e-commerce-apps","text":"The guide provides valuable information on building e-commerce applications, covering everything from product catalogs and shopping carts to payment processing and order fulfillment. It also discusses strategies for optimizing user experience, improving conversion rates, and ensuring that your e-commerce app delivers a smooth and engaging shopping experience.","title":"&nbsp; E-commerce Apps"},{"location":"guide/development-guide/#communities","text":"The Development Guide delves into the creation and management of online communities, including forums, social networks, and membership sites. It covers essential community features such as user profiles, content sharing, messaging, and moderation tools. By following the guide's recommendations, you can foster a vibrant and thriving community that keeps users engaged and connected.","title":"&nbsp; Communities"},{"location":"guide/development-guide/#content-management","text":"The guide offers insights on managing content within your application, such as articles, blog posts , and multimedia assets . It covers content creation, editing, publishing, and organization, ensuring that your users have access to relevant and up-to-date information.","title":"&nbsp; Content Management"},{"location":"guide/development-guide/#custom-use-cases","text":"In addition to the specific use cases mentioned above, the Development Guide also offers guidance on how to adapt the Cellmobs platform to meet your unique requirements. This includes tips on [customizing data models, user roles, and integrations, allowing you to build applications that cater to a wide range of industries and verticals. Note By following the guidance and ideas provided in the Development Guide, you can leverage the full potential of the Cellmobs platform to create applications that not only meet your specific use case requirements but also deliver exceptional user experiences.","title":"&nbsp; Custom Use Cases"},{"location":"guide/e-commerce/","text":"E-Commerce \u00b6 Guide will be availble soon!","title":"E-Commerce"},{"location":"guide/e-commerce/#e-commerce","text":"Guide will be availble soon!","title":"E-Commerce"},{"location":"guide/managing-files/","text":"Managing Files \u00b6 Guide will be availble soon!","title":"Managing Files"},{"location":"guide/managing-files/#managing-files","text":"Guide will be availble soon!","title":"Managing Files"},{"location":"guide/marketplaces/","text":"Marketplaces \u00b6 Guide will be availble soon!","title":"Marketplaces"},{"location":"guide/marketplaces/#marketplaces","text":"Guide will be availble soon!","title":"Marketplaces"},{"location":"guide/plugins/","text":"Plugins \u00b6 Open Services Gateway initiative (OSGi) is a well-established framework that allows for module-based development, providing a high level of flexibility and adaptability for Java applications. By adopting OSGi, Cellmobs enhances its extensibility, providing a more robust and adaptable platform for developers. Here's how: Dynamic Module System \u00b6 OSGi's dynamic module system allows developers to add, update, or remove modules at runtime without restarting the entire application. This not only saves time during the development process, but also enables a high degree of customization as developers can add new functionalities to Cellmobs applications on-the-fly. Service-Oriented Architecture \u00b6 OSGi promotes a service-oriented architecture, where each module, also known as a bundle, provides services to other modules and consumes services provided by others. This encourages loose coupling, which leads to a more modular and maintainable application. In the context of Cellmobs, developers can easily integrate various services into their application by merely installing the corresponding OSGi bundles. Efficient Resource Management \u00b6 With OSGi, each bundle operates in its own namespace, which helps in efficient resource management and eliminates conflicts between different bundles. This makes Cellmobs more reliable and stable, especially when running multiple plugins or integrations. Rich Ecosystem of Bundles \u00b6 OSGi boasts a rich ecosystem of ready-to-use bundles, extending the capabilities of the Cellmobs platform. Developers can leverage these bundles to add specific functionalities to their application, reducing development time and increasing efficiency. Versioning and Compatibility \u00b6 OSGi handles versioning and compatibility effectively. Different versions of a bundle can coexist, and each bundle can specify the versions of services it requires. This makes it easier for Cellmobs applications to manage dependencies and avoid conflicts. Cellmobs' use of OSGi brings a new level of adaptability, modularity, and extensibility to the platform. It simplifies the integration of third-party services and the development of custom plugins, offering a versatile solution to meet diverse business needs. Example \u00b6 Here's an example of how to create an OSGi interface, implementation, and activator for a plug-in that will save a new contact to the Mailchimp REST API: OSGi interface: public interface MailchimpService { void addContact ( String email , String firstName , String lastName ) throws Exception ; } OSGi implementation: import com.mashape.unirest.http.HttpResponse ; import com.mashape.unirest.http.Unirest ; import org.osgi.service.component.annotations.Component ; @Component public class MailchimpServiceImpl implements MailchimpService { private static final String API_KEY = \"YOUR_API_KEY_HERE\" ; private static final String API_ENDPOINT = \"https://us1.api.mailchimp.com/3.0/lists/YOUR_LIST_ID/members\" ; @Override public void addContact ( String email , String firstName , String lastName ) throws Exception { String jsonPayload = \"{\\\"email_address\\\":\\\"\" + email + \"\\\",\\\"status\\\":\\\"subscribed\\\",\\\"merge_fields\\\":{\\\"FNAME\\\":\\\"\" + firstName + \"\\\",\\\"LNAME\\\":\\\"\" + lastName + \"\\\"}}\" ; HttpResponse < String > response = Unirest . post ( API_ENDPOINT ) . header ( \"Authorization\" , \"Basic \" + API_KEY ) . header ( \"Content-Type\" , \"application/json\" ) . body ( jsonPayload ) . asString (); if ( response . getStatus () != 200 ) { throw new Exception ( \"Failed to add contact to Mailchimp list: \" + response . getBody ()); } } } Make sure to replace YOUR_API_KEY_HERE with your Mailchimp API key and YOUR_LIST_ID with the ID of the list to which you want to add the new contact. OSGi activator: import org.osgi.framework.BundleActivator ; import org.osgi.framework.BundleContext ; import org.osgi.framework.ServiceRegistration ; public class Activator implements BundleActivator { private ServiceRegistration < MailchimpService > registration ; @Override public void start ( BundleContext bundleContext ) throws Exception { registration = bundleContext . registerService ( MailchimpService . class , new MailchimpServiceImpl (), null ); } @Override public void stop ( BundleContext bundleContext ) throws Exception { registration . unregister (); } } The activator is responsible for registering the MailchimpService implementation as an OSGi service. The start method is called when the bundle is started, and the registerService method is used to register the service. The stop method is called when the bundle is stopped, and the unregister method is used to unregister the service. Note that you will need to include the Unirest and org.json libraries in your OSGi bundle. You can do this by adding the libraries to the bundle's classpath, or by using a dependency management tool like Maven or Gradle to automatically include the libraries in the bundle. Packaging an OSGI Bundle \u00b6 The main components of an OSGi bundle are: Java classes: The Java classes that make up the functionality of the bundle. These classes are typically organized into packages and may include interfaces, implementation classes, and utility classes. Manifest file: The manifest file is a text file that provides metadata about the bundle, such as its name, version, package exports and imports, and required dependencies. The manifest file must be named MANIFEST.MF and located in the META-INF directory of the bundle. Resources: The bundle may include non-Java resources such as images, configuration files, and other assets. These resources must be placed in the appropriate directories within the bundle's file structure. Libraries: The bundle may depend on third-party libraries or other bundles. These dependencies must be packaged with the bundle, typically in a lib directory. Bundle activatorz An optional Java class that is used to initialize and start the bundle when it is activated by the OSGi framework. The activator class must implement the BundleActivator interface. Before installation, an OSGi bundle is packaged as a JAR file with the following structure: my-bundle/ \u251c\u2500\u2500 META-INF/ \u2502 \u2514\u2500\u2500 MANIFEST.MF \u251c\u2500\u2500 com/ \u2502 \u2514\u2500\u2500 mycompany/ \u2502 \u2514\u2500\u2500 mybundle/ \u2502 \u251c\u2500\u2500 MyClass1.class \u2502 \u251c\u2500\u2500 MyClass2.class \u2502 \u2514\u2500\u2500 ... \u251c\u2500\u2500 lib/ \u2502 \u2514\u2500\u2500 some-library.jar \u2514\u2500\u2500 resources/ \u251c\u2500\u2500 config.properties \u2514\u2500\u2500 images/ \u251c\u2500\u2500 image1.png \u2514\u2500\u2500 image2.png The META-INF/MANIFEST.MF file is required and must contain the bundle's metadata, as described above. The com/mycompany/mybundle directory contains the Java classes that make up the bundle's functionality. The lib directory contains any third-party libraries that the bundle depends on. The resources directory contains any non-Java resources, such as configuration files and images. Once the JAR file is created, it can be installed into an OSGi framework by copying it to the framework's bundle directory. The OSGi framework will read the MANIFEST.MF file to determine the bundle's metadata and dependencies, and will then activate and start the bundle. Here's an example MANIFEST.MF file for the Mailchimp plugin that I described earlier: Manifest-Version: 1.0 Bundle-ManifestVersion: 2 Bundle-Name: Mailchimp Plugin Bundle-SymbolicName: com.example.mailchimpplugin Bundle-Version: 1.0.0 Bundle-Activator: com.example.mailchimpplugin.Activator Bundle-Vendor: Example Company Import-Package: org.osgi.framework;version=\"1.3.0\", com.mashape.unirest.http;version=\"[1.4,2)\", org.json;version=\"[20211205,2022)\" Export-Package: com.example.mailchimpplugin.api This manifest file includes the following metadata: Bundle-ManifestVersion - The version of the bundle manifest specification. Bundle-Name - A human-readable name for the bundle. Bundle-SymbolicName - A unique identifier for the bundle. Bundle-Version - The version of the bundle. Bundle-Activator - The fully qualified class name of the bundle's activator. Bundle-Vendor - The name of the company or organization that created the bundle. Import-Package - The list of packages that the bundle depends on. In this case, the bundle depends on the org.osgi.framework , com.mashape.unirest.http , and org.json packages. Export-Package - The list of packages that the bundle exports. In this case, the bundle exports the com.example.mailchimpplugin.api package, which contains the MailchimpService interface. Note that the version ranges specified for the imported packages ( [1.4,2) and [20211205,2022) ) indicate that the bundle requires a minimum version of 1.4 for the com.mashape.unirest.http package and a minimum version of 20211205 for the org.json package, but is compatible with any version up to (but not including) version 2.0 and 2022 , respectively. Dependency Resolution \u00b6 In OSGi, bundles can depend on other bundles, and the OSGi framework provides a mechanism to manage these dependencies. When a bundle is installed into the framework, the framework examines the bundle's MANIFEST.MF file to determine its dependencies. OSGi resolves dependencies by comparing the requirements of a bundle with the capabilities of other bundles. A requirement is a declaration by a bundle of what it needs, while a capability is a declaration by a bundle of what it provides. A requirement can be of two types: Import-Package or Require-Bundle . Import-Package is used to declare a dependency on a specific package, while Require-Bundle is used to declare a dependency on another bundle. A capability can be of two types: Export-Package or Provide-Capability . Export-Package is used to declare a package that the bundle provides, while Provide-Capability is used to declare a custom capability that the bundle provides. When the OSGi framework installs a bundle, it examines the bundle's requirements and capabilities to determine which other bundles can satisfy the requirements. The framework maintains a dependency graph that tracks the dependencies between bundles. If a required capability is not present in the framework, the bundle cannot be resolved and will fail to start. OSGi uses a dynamic linking mechanism, which means that dependencies are resolved at runtime, rather than at compile time. This allows bundles to be installed and uninstalled dynamically, without affecting the rest of the system. When a bundle is started, its activator is called to perform any initialization tasks, such as registering services with the OSGi service registry. If the activator fails to start, the bundle will be stopped and its services will be unregistered. In summary, OSGi bundles resolve dependencies by examining the requirements and capabilities of bundles, and dynamically linking them at runtime. This allows for a highly modular and flexible system, where bundles can be installed and uninstalled dynamically, without affecting the rest of the system.","title":"Plugins"},{"location":"guide/plugins/#plugins","text":"Open Services Gateway initiative (OSGi) is a well-established framework that allows for module-based development, providing a high level of flexibility and adaptability for Java applications. By adopting OSGi, Cellmobs enhances its extensibility, providing a more robust and adaptable platform for developers. Here's how:","title":"Plugins"},{"location":"guide/plugins/#dynamic-module-system","text":"OSGi's dynamic module system allows developers to add, update, or remove modules at runtime without restarting the entire application. This not only saves time during the development process, but also enables a high degree of customization as developers can add new functionalities to Cellmobs applications on-the-fly.","title":"Dynamic Module System"},{"location":"guide/plugins/#service-oriented-architecture","text":"OSGi promotes a service-oriented architecture, where each module, also known as a bundle, provides services to other modules and consumes services provided by others. This encourages loose coupling, which leads to a more modular and maintainable application. In the context of Cellmobs, developers can easily integrate various services into their application by merely installing the corresponding OSGi bundles.","title":"Service-Oriented Architecture"},{"location":"guide/plugins/#efficient-resource-management","text":"With OSGi, each bundle operates in its own namespace, which helps in efficient resource management and eliminates conflicts between different bundles. This makes Cellmobs more reliable and stable, especially when running multiple plugins or integrations.","title":"Efficient Resource Management"},{"location":"guide/plugins/#rich-ecosystem-of-bundles","text":"OSGi boasts a rich ecosystem of ready-to-use bundles, extending the capabilities of the Cellmobs platform. Developers can leverage these bundles to add specific functionalities to their application, reducing development time and increasing efficiency.","title":"Rich Ecosystem of Bundles"},{"location":"guide/plugins/#versioning-and-compatibility","text":"OSGi handles versioning and compatibility effectively. Different versions of a bundle can coexist, and each bundle can specify the versions of services it requires. This makes it easier for Cellmobs applications to manage dependencies and avoid conflicts. Cellmobs' use of OSGi brings a new level of adaptability, modularity, and extensibility to the platform. It simplifies the integration of third-party services and the development of custom plugins, offering a versatile solution to meet diverse business needs.","title":"Versioning and Compatibility"},{"location":"guide/plugins/#example","text":"Here's an example of how to create an OSGi interface, implementation, and activator for a plug-in that will save a new contact to the Mailchimp REST API: OSGi interface: public interface MailchimpService { void addContact ( String email , String firstName , String lastName ) throws Exception ; } OSGi implementation: import com.mashape.unirest.http.HttpResponse ; import com.mashape.unirest.http.Unirest ; import org.osgi.service.component.annotations.Component ; @Component public class MailchimpServiceImpl implements MailchimpService { private static final String API_KEY = \"YOUR_API_KEY_HERE\" ; private static final String API_ENDPOINT = \"https://us1.api.mailchimp.com/3.0/lists/YOUR_LIST_ID/members\" ; @Override public void addContact ( String email , String firstName , String lastName ) throws Exception { String jsonPayload = \"{\\\"email_address\\\":\\\"\" + email + \"\\\",\\\"status\\\":\\\"subscribed\\\",\\\"merge_fields\\\":{\\\"FNAME\\\":\\\"\" + firstName + \"\\\",\\\"LNAME\\\":\\\"\" + lastName + \"\\\"}}\" ; HttpResponse < String > response = Unirest . post ( API_ENDPOINT ) . header ( \"Authorization\" , \"Basic \" + API_KEY ) . header ( \"Content-Type\" , \"application/json\" ) . body ( jsonPayload ) . asString (); if ( response . getStatus () != 200 ) { throw new Exception ( \"Failed to add contact to Mailchimp list: \" + response . getBody ()); } } } Make sure to replace YOUR_API_KEY_HERE with your Mailchimp API key and YOUR_LIST_ID with the ID of the list to which you want to add the new contact. OSGi activator: import org.osgi.framework.BundleActivator ; import org.osgi.framework.BundleContext ; import org.osgi.framework.ServiceRegistration ; public class Activator implements BundleActivator { private ServiceRegistration < MailchimpService > registration ; @Override public void start ( BundleContext bundleContext ) throws Exception { registration = bundleContext . registerService ( MailchimpService . class , new MailchimpServiceImpl (), null ); } @Override public void stop ( BundleContext bundleContext ) throws Exception { registration . unregister (); } } The activator is responsible for registering the MailchimpService implementation as an OSGi service. The start method is called when the bundle is started, and the registerService method is used to register the service. The stop method is called when the bundle is stopped, and the unregister method is used to unregister the service. Note that you will need to include the Unirest and org.json libraries in your OSGi bundle. You can do this by adding the libraries to the bundle's classpath, or by using a dependency management tool like Maven or Gradle to automatically include the libraries in the bundle.","title":"Example"},{"location":"guide/plugins/#packaging-an-osgi-bundle","text":"The main components of an OSGi bundle are: Java classes: The Java classes that make up the functionality of the bundle. These classes are typically organized into packages and may include interfaces, implementation classes, and utility classes. Manifest file: The manifest file is a text file that provides metadata about the bundle, such as its name, version, package exports and imports, and required dependencies. The manifest file must be named MANIFEST.MF and located in the META-INF directory of the bundle. Resources: The bundle may include non-Java resources such as images, configuration files, and other assets. These resources must be placed in the appropriate directories within the bundle's file structure. Libraries: The bundle may depend on third-party libraries or other bundles. These dependencies must be packaged with the bundle, typically in a lib directory. Bundle activatorz An optional Java class that is used to initialize and start the bundle when it is activated by the OSGi framework. The activator class must implement the BundleActivator interface. Before installation, an OSGi bundle is packaged as a JAR file with the following structure: my-bundle/ \u251c\u2500\u2500 META-INF/ \u2502 \u2514\u2500\u2500 MANIFEST.MF \u251c\u2500\u2500 com/ \u2502 \u2514\u2500\u2500 mycompany/ \u2502 \u2514\u2500\u2500 mybundle/ \u2502 \u251c\u2500\u2500 MyClass1.class \u2502 \u251c\u2500\u2500 MyClass2.class \u2502 \u2514\u2500\u2500 ... \u251c\u2500\u2500 lib/ \u2502 \u2514\u2500\u2500 some-library.jar \u2514\u2500\u2500 resources/ \u251c\u2500\u2500 config.properties \u2514\u2500\u2500 images/ \u251c\u2500\u2500 image1.png \u2514\u2500\u2500 image2.png The META-INF/MANIFEST.MF file is required and must contain the bundle's metadata, as described above. The com/mycompany/mybundle directory contains the Java classes that make up the bundle's functionality. The lib directory contains any third-party libraries that the bundle depends on. The resources directory contains any non-Java resources, such as configuration files and images. Once the JAR file is created, it can be installed into an OSGi framework by copying it to the framework's bundle directory. The OSGi framework will read the MANIFEST.MF file to determine the bundle's metadata and dependencies, and will then activate and start the bundle. Here's an example MANIFEST.MF file for the Mailchimp plugin that I described earlier: Manifest-Version: 1.0 Bundle-ManifestVersion: 2 Bundle-Name: Mailchimp Plugin Bundle-SymbolicName: com.example.mailchimpplugin Bundle-Version: 1.0.0 Bundle-Activator: com.example.mailchimpplugin.Activator Bundle-Vendor: Example Company Import-Package: org.osgi.framework;version=\"1.3.0\", com.mashape.unirest.http;version=\"[1.4,2)\", org.json;version=\"[20211205,2022)\" Export-Package: com.example.mailchimpplugin.api This manifest file includes the following metadata: Bundle-ManifestVersion - The version of the bundle manifest specification. Bundle-Name - A human-readable name for the bundle. Bundle-SymbolicName - A unique identifier for the bundle. Bundle-Version - The version of the bundle. Bundle-Activator - The fully qualified class name of the bundle's activator. Bundle-Vendor - The name of the company or organization that created the bundle. Import-Package - The list of packages that the bundle depends on. In this case, the bundle depends on the org.osgi.framework , com.mashape.unirest.http , and org.json packages. Export-Package - The list of packages that the bundle exports. In this case, the bundle exports the com.example.mailchimpplugin.api package, which contains the MailchimpService interface. Note that the version ranges specified for the imported packages ( [1.4,2) and [20211205,2022) ) indicate that the bundle requires a minimum version of 1.4 for the com.mashape.unirest.http package and a minimum version of 20211205 for the org.json package, but is compatible with any version up to (but not including) version 2.0 and 2022 , respectively.","title":"Packaging an OSGI Bundle"},{"location":"guide/plugins/#dependency-resolution","text":"In OSGi, bundles can depend on other bundles, and the OSGi framework provides a mechanism to manage these dependencies. When a bundle is installed into the framework, the framework examines the bundle's MANIFEST.MF file to determine its dependencies. OSGi resolves dependencies by comparing the requirements of a bundle with the capabilities of other bundles. A requirement is a declaration by a bundle of what it needs, while a capability is a declaration by a bundle of what it provides. A requirement can be of two types: Import-Package or Require-Bundle . Import-Package is used to declare a dependency on a specific package, while Require-Bundle is used to declare a dependency on another bundle. A capability can be of two types: Export-Package or Provide-Capability . Export-Package is used to declare a package that the bundle provides, while Provide-Capability is used to declare a custom capability that the bundle provides. When the OSGi framework installs a bundle, it examines the bundle's requirements and capabilities to determine which other bundles can satisfy the requirements. The framework maintains a dependency graph that tracks the dependencies between bundles. If a required capability is not present in the framework, the bundle cannot be resolved and will fail to start. OSGi uses a dynamic linking mechanism, which means that dependencies are resolved at runtime, rather than at compile time. This allows bundles to be installed and uninstalled dynamically, without affecting the rest of the system. When a bundle is started, its activator is called to perform any initialization tasks, such as registering services with the OSGi service registry. If the activator fails to start, the bundle will be stopped and its services will be unregistered. In summary, OSGi bundles resolve dependencies by examining the requirements and capabilities of bundles, and dynamically linking them at runtime. This allows for a highly modular and flexible system, where bundles can be installed and uninstalled dynamically, without affecting the rest of the system.","title":"Dependency Resolution"},{"location":"guide/seo/","text":"SEO \u00b6 Guide will be availble soon! Page Metadata \u00b6 Guide will be availble soon! Page Urls \u00b6 Guide will be availble soon! Server Side Rendering \u00b6 Guide will be availble soon! Analytics \u00b6 Guide will be availble soon! Sitemaps \u00b6 Cellmobs provides an inbuilt Sitemap generator, which is a crucial tool for optimizing search engine indexing and enhancing the discoverability of your application's content. The Sitemap generator supports various Cellmobs entities, including Web Pages, Products, Content, and Tags. With this, you can automatically create XML sitemaps which include all relevant URLs along with additional metadata about each URL. This metadata can contain details like when the URL was last updated, how frequently it changes, and its importance relative to other URLs in your app. One of the main benefits of the Sitemap generator is the ability to schedule automatic regeneration of your sitemaps. This feature ensures that as you add, modify, or remove content on your app, your sitemaps stay up-to-date, accurately reflecting your app's content structure to search engines. Configure Sitemaps Rules Additionally, the Sitemap generator also creates a sitemap index file. This file acts as a reference guide to all your individual sitemaps and is especially useful for larger apps with extensive content. The generated sitemap index can be directly submitted to Google and other search engines supporting XML sitemaps. When the sitemap or sitemap index file is generated, you can opt to have it automatically uploaded to your web application or manually downloaded it to manual update your applications. Manage & Download Sitemaps","title":"SEO"},{"location":"guide/seo/#seo","text":"Guide will be availble soon!","title":"SEO"},{"location":"guide/seo/#page-metadata","text":"Guide will be availble soon!","title":"Page Metadata"},{"location":"guide/seo/#page-urls","text":"Guide will be availble soon!","title":"Page Urls"},{"location":"guide/seo/#server-side-rendering","text":"Guide will be availble soon!","title":"Server Side Rendering"},{"location":"guide/seo/#analytics","text":"Guide will be availble soon!","title":"Analytics"},{"location":"guide/seo/#sitemaps","text":"Cellmobs provides an inbuilt Sitemap generator, which is a crucial tool for optimizing search engine indexing and enhancing the discoverability of your application's content. The Sitemap generator supports various Cellmobs entities, including Web Pages, Products, Content, and Tags. With this, you can automatically create XML sitemaps which include all relevant URLs along with additional metadata about each URL. This metadata can contain details like when the URL was last updated, how frequently it changes, and its importance relative to other URLs in your app. One of the main benefits of the Sitemap generator is the ability to schedule automatic regeneration of your sitemaps. This feature ensures that as you add, modify, or remove content on your app, your sitemaps stay up-to-date, accurately reflecting your app's content structure to search engines. Configure Sitemaps Rules Additionally, the Sitemap generator also creates a sitemap index file. This file acts as a reference guide to all your individual sitemaps and is especially useful for larger apps with extensive content. The generated sitemap index can be directly submitted to Google and other search engines supporting XML sitemaps. When the sitemap or sitemap index file is generated, you can opt to have it automatically uploaded to your web application or manually downloaded it to manual update your applications. Manage & Download Sitemaps","title":"Sitemaps"},{"location":"guide/syndication/","text":"Syndication \u00b6 Guide will be available soon!","title":"Syndication"},{"location":"guide/syndication/#syndication","text":"Guide will be available soon!","title":"Syndication"},{"location":"setup/creating-a-website/","text":"Creating a Website \u00b6 Setting up","title":"Creating a Website"},{"location":"setup/creating-a-website/#creating-a-website","text":"Setting up","title":"Creating a Website"},{"location":"setup/creating-apps/","text":"Creating Apps \u00b6 The Cellmobs platform is designed to enable customers to develop and manage multiple apps, each with its own unique environment and set of resources. Here's how it works: Create a New App \u00b6 Once you're logged into your Cellmobs account, you can easily create a new application through the \"Your Apps\" section user interface. This involves naming your application, and optionally providing a description to help you remember its purpose. Tenant ID Assignment \u00b6 Every new application is assigned a unique tenant ID. This serves as an identifier that helps to separate the data and operations of one application from another. It's crucial for maintaining the isolation and integrity of each application's data and operations. API Credentials \u00b6 Once your new application is created, you can generates API keys for it. These API keys are used to authenticate your application when it communicates with the Cellmobs platform, ensuring that only authorized applications can interact with your app's data and functionality. Dedicated Database \u00b6 Each application on Cellmobs has its own dedicated MongoDB database. This means your application's data is stored separately from other applications, ensuring data privacy and security. Also, this architecture enables each application to scale its database resources independently based on its specific requirements.","title":"Your first App"},{"location":"setup/creating-apps/#creating-apps","text":"The Cellmobs platform is designed to enable customers to develop and manage multiple apps, each with its own unique environment and set of resources. Here's how it works:","title":"Creating Apps"},{"location":"setup/creating-apps/#create-a-new-app","text":"Once you're logged into your Cellmobs account, you can easily create a new application through the \"Your Apps\" section user interface. This involves naming your application, and optionally providing a description to help you remember its purpose.","title":"Create a New App"},{"location":"setup/creating-apps/#tenant-id-assignment","text":"Every new application is assigned a unique tenant ID. This serves as an identifier that helps to separate the data and operations of one application from another. It's crucial for maintaining the isolation and integrity of each application's data and operations.","title":"Tenant ID Assignment"},{"location":"setup/creating-apps/#api-credentials","text":"Once your new application is created, you can generates API keys for it. These API keys are used to authenticate your application when it communicates with the Cellmobs platform, ensuring that only authorized applications can interact with your app's data and functionality.","title":"API Credentials"},{"location":"setup/creating-apps/#dedicated-database","text":"Each application on Cellmobs has its own dedicated MongoDB database. This means your application's data is stored separately from other applications, ensuring data privacy and security. Also, this architecture enables each application to scale its database resources independently based on its specific requirements.","title":"Dedicated Database"},{"location":"setup/global-settings/","text":"Global Settings \u00b6 This section explores the more important settings that impact the overall functionality, appearance, and behavior of your app on a global level. The list of settings is ever evolving so be sure to check back frequently. Important App Settings \u00b6 App Settings are managed using the App Console . Method Description Sample app.name The name of your app. CELLMOBS app.organization.id The MongoDB id of your primary organization app.organization.ledger.id The id of the ledger used for recording app revenue and costs. application.domain The main domain of you application. cellmobs.com application.icon The url of your app favicon /favicon.ico application.icon.large application.logo The url of your app logo application.logo.lite aws.default.region us-east-1 aws.access.key AWS Access Key for overriding the default App assets storage location ###### aws.secret.access.key Access Secret Access Key for overriding the default App storage location ###### api.host Your REST API host http://web.cellmobs.com cdn.bucket S3 bucket for public static assets media.cellmobs.com cdn.host CDN host for public static assets https://cdn.cellmobs.com cdn.root.folder S3 folder for public static assets app-1/ file.bucket S3 bucket for secure files files.cellmobs.com file.bucket.root S3 folder for secure files cellmobs-dev/ chatgpt.api.key Optional Open AI api key sk-################## contact-request-alert-recipients Optional comma-delimited list of email, that should receive contact request alert facebook.app.id Your Facebook App ID associated with your app 2156########## google.analytics.id Google Analytics Measurement ID UA-#########-1 google.maps.key Google Map API Key AIzaSyB6Q99Sf_################# google.tag.manager.id Google Tag Manager ID GTM-N56ZFB6 host.domain Your application host www.cellmobs.com messaging.from.email The email address that is used for sending application alerts info@cellmobs.com recaptcha.secret.key The Google reCAPTHCA secret key recaptcha.site.key The Google reCAPTHCA site key supported.languages es,es,fr,ru,it,zh,de twilio.account.sid The Twilio account sid for sending text messages twilio.auth.token The Twilio account auth token for sending text messages twilio.verify.sid The Twilio account verify sid","title":"Global Settings"},{"location":"setup/global-settings/#global-settings","text":"This section explores the more important settings that impact the overall functionality, appearance, and behavior of your app on a global level. The list of settings is ever evolving so be sure to check back frequently.","title":"Global Settings"},{"location":"setup/global-settings/#important-app-settings","text":"App Settings are managed using the App Console . Method Description Sample app.name The name of your app. CELLMOBS app.organization.id The MongoDB id of your primary organization app.organization.ledger.id The id of the ledger used for recording app revenue and costs. application.domain The main domain of you application. cellmobs.com application.icon The url of your app favicon /favicon.ico application.icon.large application.logo The url of your app logo application.logo.lite aws.default.region us-east-1 aws.access.key AWS Access Key for overriding the default App assets storage location ###### aws.secret.access.key Access Secret Access Key for overriding the default App storage location ###### api.host Your REST API host http://web.cellmobs.com cdn.bucket S3 bucket for public static assets media.cellmobs.com cdn.host CDN host for public static assets https://cdn.cellmobs.com cdn.root.folder S3 folder for public static assets app-1/ file.bucket S3 bucket for secure files files.cellmobs.com file.bucket.root S3 folder for secure files cellmobs-dev/ chatgpt.api.key Optional Open AI api key sk-################## contact-request-alert-recipients Optional comma-delimited list of email, that should receive contact request alert facebook.app.id Your Facebook App ID associated with your app 2156########## google.analytics.id Google Analytics Measurement ID UA-#########-1 google.maps.key Google Map API Key AIzaSyB6Q99Sf_################# google.tag.manager.id Google Tag Manager ID GTM-N56ZFB6 host.domain Your application host www.cellmobs.com messaging.from.email The email address that is used for sending application alerts info@cellmobs.com recaptcha.secret.key The Google reCAPTHCA secret key recaptcha.site.key The Google reCAPTHCA site key supported.languages es,es,fr,ru,it,zh,de twilio.account.sid The Twilio account sid for sending text messages twilio.auth.token The Twilio account auth token for sending text messages twilio.verify.sid The Twilio account verify sid","title":"Important App Settings"},{"location":"setup/image-settings/","text":"Image Settings \u00b6 Developers using Cellmobs can define ImageSettings for different application FileTypes to ensure that their applications display images in the desired format, size, and quality. Image Settings are associated with an Organization and provide a flexible way to configure multiple image renditions for various use cases and device types. Depending on your application requirements, there is no limit to the number of Image Settings that can be configured, allowing for maximum flexibility in managing image renditions for different FileTypes. File Types \u00b6 FILE_TYPE is a Cellmobs Vocabulary , and while new file types can be added and removed, there are a set of SYSTEM file types that each application should retain as they are used throughout the platform. File Types System File Types \u00b6 FileType Description CUSTOM_IMAGE Custom Image is the default file type images are uploaded and the main tyoe for WebPage images. PRODUCT_IMAGE Product Image is the expected format for images associated with Products TAG_IMAGE Tag Images are an optional image types associated with Tags ORGANIZATION_LOGO The default file type for Organization logos IDENTITY_AVATAR The default file type for User profile images SECURE_FILE The default file type for files that are only available to users withe the proper Organization role Configuring Image Renditions \u00b6 Configure Image Renditions Each FILE_TYPE has a set of five renditions. Each rendition consists of an image MIME type (e.g., JPEG, PNG) and corresponding image dimensions (e.g., width and height). Developers can configure Image Settings for specific use cases, or adjust the setting of the SYSTEM file types (Organization Logos, User Avatars, Product Images, and Custom Images) to their app and device type requirements. Image Rendition Sample","title":"Image Settings"},{"location":"setup/image-settings/#image-settings","text":"Developers using Cellmobs can define ImageSettings for different application FileTypes to ensure that their applications display images in the desired format, size, and quality. Image Settings are associated with an Organization and provide a flexible way to configure multiple image renditions for various use cases and device types. Depending on your application requirements, there is no limit to the number of Image Settings that can be configured, allowing for maximum flexibility in managing image renditions for different FileTypes.","title":"Image Settings"},{"location":"setup/image-settings/#file-types","text":"FILE_TYPE is a Cellmobs Vocabulary , and while new file types can be added and removed, there are a set of SYSTEM file types that each application should retain as they are used throughout the platform. File Types","title":"File Types"},{"location":"setup/image-settings/#system-file-types","text":"FileType Description CUSTOM_IMAGE Custom Image is the default file type images are uploaded and the main tyoe for WebPage images. PRODUCT_IMAGE Product Image is the expected format for images associated with Products TAG_IMAGE Tag Images are an optional image types associated with Tags ORGANIZATION_LOGO The default file type for Organization logos IDENTITY_AVATAR The default file type for User profile images SECURE_FILE The default file type for files that are only available to users withe the proper Organization role","title":"System File Types"},{"location":"setup/image-settings/#configuring-image-renditions","text":"Configure Image Renditions Each FILE_TYPE has a set of five renditions. Each rendition consists of an image MIME type (e.g., JPEG, PNG) and corresponding image dimensions (e.g., width and height). Developers can configure Image Settings for specific use cases, or adjust the setting of the SYSTEM file types (Organization Logos, User Avatars, Product Images, and Custom Images) to their app and device type requirements. Image Rendition Sample","title":"Configuring Image Renditions"},{"location":"setup/message-templates/","text":"Message Templates \u00b6 Cellmobs currently supports three different message types to cater to various communication needs within applications. These message types include Emails, SMS/Text messages, and internal messages, which can be used for User-to-User and Organization-to-User communications, as well as general system notifications. Info Push notifications and integrations with third party messaging platform are in development and will be available later this year. The messages are sent based on platform and application events, some of which can be configured, while others are native to the Cellmobs platform. Here's an overview of each message type: Emails \u00b6 Email messages are the default communication method for delivering important information, updates, and notifications. Cellmobs supports sending email messages to users based on triggered events within the application, such as account registration, password resets, and promotional updates. Developers can customize the email templates, ensuring that the content aligns with the application's branding and communication strategy. Emails are sent via AWS's Simple Email Service (SES) and as such require you to validate a valid email address with SES if you would like to use your own email for delivering email messages to your users. Text Messages \u00b6 SMS/Text messages: SMS or text messages offer a fast and direct way to communicate with users. Cellmobs supports sending SMS messages based on application events, such as order confirmations, account verification codes, and time-sensitive alerts. Integration with Twilio ensures reliable and prompt delivery of SMS messages to users' mobile devices, enhancing user engagement and responsiveness. To get started with text messages be sure to signup with Twilio to obtain API credentials api token and configure them as global settings in your app. Internal Messages (IM) \u00b6 Internal messages are an essential component of User-to-User and Organization-to-User communication within the Cellmobs platform. These messages facilitate direct communication between users, as well as between an organization and its users. Internal messages can be used for a variety of purposes, including support requests, user feedback, or system notifications (e.g., activity confirmations, upcoming maintenance or new feature announcements). Editing Templates \u00b6 All message templates in Cellmobs are based on the Freemarker template format, a widely-used, powerful, and flexible template engine for Java-based applications. Freemarker enables developers to create dynamic and customizable message templates for Emails, SMS/Text messages, and internal messages, ensuring consistent and engaging communication experiences within their application (see Technologies for more details). Message Template Editor Click here for more details on how to Manage Templates and how to create custom templates and use them in your application. System Templates \u00b6 Template Type Subject account-invitation EMAIL Account Invitation lead-auto-reply EMAIL Auto Reponse to Contact Form or Lead datapoint-api-request-limit-alert EMAIL API Requests Limit Reached contact-request-alert EMAIL Contact Request Alert datapoint-dns-not-found-alert EMAIL DNS Not Found datapoint-db-storage-alert EMAIL DataPoint DB Storage Low Alert datapoint-file-storage-alert EMAIL File Storage Low datapoint-free-tier-exceeded-alert EMAIL Free Tier Exceeded datapoint-many-errors-alert EMAIL Too Many Errors Alert datapoint-service-impaired-alert EMAIL Service Impaired general-custom-email EMAIL General Custom Email im-entity-process-alert-failure IM Entity Process Failed! im-entity-process-alert-success IM Entity Process Success! order-maintenance-work-order EMAIL Maintenance Work Order organization-email-share EMAIL Organization Email Share organization-invite EMAIL Organization Invite organization-invite-accept EMAIL Organization Invite Accept organization-join-confirmation EMAIL Join Organization Confirmation organization-join-request EMAIL Join Organization Request organization-message EMAIL Organization Message organization-message-confirmation EMAIL Organization Message Delivery Confirmation organization-order-alert EMAIL Booking Alert aka Organization Order Alert organization-order-approval-request EMAIL Organization Order Approval Request organization-order-confirmation EMAIL Organization Order Confirmation organization-order-invoice EMAIL Organization Order Invoice Link organization-order-no-payment-method EMAIL No Valid Payment Method organization-order-transaction-receipt EMAIL Order Transaction Receipt organization-role-change EMAIL Organization Role Change organization-subscription-cancellation EMAIL Organization Subscription Cancellation organization-subscription-trial-ends EMAIL Organization Subscription Trial Ends organization-subscription-update EMAIL Organization Subscription Update Confirmation organization-transaction-receipt EMAIL organization-transaction-receipt password-reset EMAIL Password Reset Confirmation password-reset-request EMAIL Password Recovery password-reset-request-console EMAIL Password Recovery registration-confirmation EMAIL Registration Confirmation registration-welcome EMAIL Registration Welcome share-inbox EMAIL Share Identity Inbox tell-a-friend EMAIL Tell a Friend usage-file-storage-alert EMAIL DataPoint File Storage Alert","title":"Message Templates"},{"location":"setup/message-templates/#message-templates","text":"Cellmobs currently supports three different message types to cater to various communication needs within applications. These message types include Emails, SMS/Text messages, and internal messages, which can be used for User-to-User and Organization-to-User communications, as well as general system notifications. Info Push notifications and integrations with third party messaging platform are in development and will be available later this year. The messages are sent based on platform and application events, some of which can be configured, while others are native to the Cellmobs platform. Here's an overview of each message type:","title":"Message Templates"},{"location":"setup/message-templates/#emails","text":"Email messages are the default communication method for delivering important information, updates, and notifications. Cellmobs supports sending email messages to users based on triggered events within the application, such as account registration, password resets, and promotional updates. Developers can customize the email templates, ensuring that the content aligns with the application's branding and communication strategy. Emails are sent via AWS's Simple Email Service (SES) and as such require you to validate a valid email address with SES if you would like to use your own email for delivering email messages to your users.","title":"Emails"},{"location":"setup/message-templates/#text-messages","text":"SMS/Text messages: SMS or text messages offer a fast and direct way to communicate with users. Cellmobs supports sending SMS messages based on application events, such as order confirmations, account verification codes, and time-sensitive alerts. Integration with Twilio ensures reliable and prompt delivery of SMS messages to users' mobile devices, enhancing user engagement and responsiveness. To get started with text messages be sure to signup with Twilio to obtain API credentials api token and configure them as global settings in your app.","title":"Text Messages"},{"location":"setup/message-templates/#internal-messages-im","text":"Internal messages are an essential component of User-to-User and Organization-to-User communication within the Cellmobs platform. These messages facilitate direct communication between users, as well as between an organization and its users. Internal messages can be used for a variety of purposes, including support requests, user feedback, or system notifications (e.g., activity confirmations, upcoming maintenance or new feature announcements).","title":"Internal Messages (IM)"},{"location":"setup/message-templates/#editing-templates","text":"All message templates in Cellmobs are based on the Freemarker template format, a widely-used, powerful, and flexible template engine for Java-based applications. Freemarker enables developers to create dynamic and customizable message templates for Emails, SMS/Text messages, and internal messages, ensuring consistent and engaging communication experiences within their application (see Technologies for more details). Message Template Editor Click here for more details on how to Manage Templates and how to create custom templates and use them in your application.","title":"Editing Templates"},{"location":"setup/message-templates/#system-templates","text":"Template Type Subject account-invitation EMAIL Account Invitation lead-auto-reply EMAIL Auto Reponse to Contact Form or Lead datapoint-api-request-limit-alert EMAIL API Requests Limit Reached contact-request-alert EMAIL Contact Request Alert datapoint-dns-not-found-alert EMAIL DNS Not Found datapoint-db-storage-alert EMAIL DataPoint DB Storage Low Alert datapoint-file-storage-alert EMAIL File Storage Low datapoint-free-tier-exceeded-alert EMAIL Free Tier Exceeded datapoint-many-errors-alert EMAIL Too Many Errors Alert datapoint-service-impaired-alert EMAIL Service Impaired general-custom-email EMAIL General Custom Email im-entity-process-alert-failure IM Entity Process Failed! im-entity-process-alert-success IM Entity Process Success! order-maintenance-work-order EMAIL Maintenance Work Order organization-email-share EMAIL Organization Email Share organization-invite EMAIL Organization Invite organization-invite-accept EMAIL Organization Invite Accept organization-join-confirmation EMAIL Join Organization Confirmation organization-join-request EMAIL Join Organization Request organization-message EMAIL Organization Message organization-message-confirmation EMAIL Organization Message Delivery Confirmation organization-order-alert EMAIL Booking Alert aka Organization Order Alert organization-order-approval-request EMAIL Organization Order Approval Request organization-order-confirmation EMAIL Organization Order Confirmation organization-order-invoice EMAIL Organization Order Invoice Link organization-order-no-payment-method EMAIL No Valid Payment Method organization-order-transaction-receipt EMAIL Order Transaction Receipt organization-role-change EMAIL Organization Role Change organization-subscription-cancellation EMAIL Organization Subscription Cancellation organization-subscription-trial-ends EMAIL Organization Subscription Trial Ends organization-subscription-update EMAIL Organization Subscription Update Confirmation organization-transaction-receipt EMAIL organization-transaction-receipt password-reset EMAIL Password Reset Confirmation password-reset-request EMAIL Password Recovery password-reset-request-console EMAIL Password Recovery registration-confirmation EMAIL Registration Confirmation registration-welcome EMAIL Registration Welcome share-inbox EMAIL Share Identity Inbox tell-a-friend EMAIL Tell a Friend usage-file-storage-alert EMAIL DataPoint File Storage Alert","title":"System Templates"},{"location":"setup/model-schema/","text":"Data Model & Schema \u00b6 Cellmobs offers a highly flexible core data model, consisting of commonly used entities such as Identities (Users), Organizations, Products, Content (Files), and more. This flexibility allows users to build a wide range of applications tailored to their specific requirements. EntityType Description ACLROLEORGANIZATION Defines the role of an IDENTITY in an ORGANIZATION APIKEY The properties and value of an API Key CALENDAR_EVENT A Calendar Event CART A shopping cart associated with an ORDER CHANNEL A syndication channel configuration CONTENT A file of a certain content type DEALTERMS The terms of an agreement between two or more parties FEATURE A PRODUCT features FEED An aggregation feed configuration IDENTITY_ACCOUNT Payment information, Credit Card or Bank Account IDENTITY_CONNECTION Credentials for an API Integration IDENTITY A user , person, individual IMAGE_SETTINGS Rendition settings for a FILE_TYPE INBOX_ITEM An email, notification, or chat message INVITE An invitation for an IDENTITY to an ORGANIZATION LEAD A business lead or contact request LEDGER_ENTRY A entry in the revenue LEDGER of an ORGANIZATION LEDGER_REPORT A report generated from a LEDGER . LEDGER A revenue and cost ledger of an ORGANIZATION LOCATION A geo location of a certain LocationType: RESIDENCE, OFFICE, etc. MODEL A custom data model OAUTH_APP The credential for and OAuth API Integration ORDER An order with a CART that contains PRODUCT ORGANIZATION An organization or group of some kind PAYMENT_PROCESSOR The configuration and credentials for a payment gateway PAYTRANSATION A payment transaction POLL A poll with one or more questions PRODUCT A product , a good or service PROJECT A project, that contains multiple WORK units PROMOTION A product promotion that can be applied to an ORDER RATING A entity rating of a certain type e.g. PRODUCT star rating REFERENCE Defines an arbitrary relationship between two entities REQUIREMENT Defines the field value requirements for entities and validation workflow RESERVATION A Product reservation REWARD_TRIGGER Defines what triggers an IDENTITY reward attribution REWARD A reward for WORK that is triggered by a REWARD_TRIGGER SUBSCRIPTION_PLAN A subscription plan consisting of one or more PRODUCTS SUBSCRIPTION A subscription of an IDENTITY to a SUBCRIPTION_PLAN TAG A tag (category or label) associated with an entity TAX Defines a tax or fee aassociated with a PRODUCT or ORDER TENANT A tenant also knows as a Cellmobs App TYPEVALUE A configured value of a Vocabulary WEBPAGE Defines the content of a web page WEBTEMPLATE A email, web, or report template WORK Defines task aka story, ticket typically associated with a PROJECT The core data model can be extended in two ways: Custom Field Templates and custom Models. Custom Field Templates \u00b6 Custom Field Templates provide a convenient way to extend existing model classes with additional fields. Users can define sets of fields as templates that can be attached to new or modified entities. This allows users to add custom attributes to entities, enabling them to capture and store additional information specific to their application's requirements. Custom Field Templates make it easy to expand the core data model without the need for complex code modifications or database schema changes. Click here to learn how to configure customer field templates . Custom Field Templates Entity Requirements \u00b6 In addition to extending the core data model, Cellmobs supports Entity Requirements, a feature designed to validate entity field values based on configurable business rules in support of certain use cases and workflows . Entity Requirements help ensure data consistency and integrity by enforcing specific conditions and constraints on entity attributes. This allows users to maintain high-quality data in their applications, ultimately improving the overall user experience and reliability of the system. Entity Requirements Example Click here to learn how to configure entity requirements . Custom Models \u00b6 For more advanced use cases, Cellmobs allows users to create entirely custom Models. This feature provides even greater flexibility, enabling users to define their own entity types with custom attributes, relationships, and behavior. Custom Models can be used alongside the core data model to build sophisticated applications that cater to unique business requirements. Custom Models are still in the experimental stage and will be rolled out later this year.","title":"Data Model &amp; Schema"},{"location":"setup/model-schema/#data-model-schema","text":"Cellmobs offers a highly flexible core data model, consisting of commonly used entities such as Identities (Users), Organizations, Products, Content (Files), and more. This flexibility allows users to build a wide range of applications tailored to their specific requirements. EntityType Description ACLROLEORGANIZATION Defines the role of an IDENTITY in an ORGANIZATION APIKEY The properties and value of an API Key CALENDAR_EVENT A Calendar Event CART A shopping cart associated with an ORDER CHANNEL A syndication channel configuration CONTENT A file of a certain content type DEALTERMS The terms of an agreement between two or more parties FEATURE A PRODUCT features FEED An aggregation feed configuration IDENTITY_ACCOUNT Payment information, Credit Card or Bank Account IDENTITY_CONNECTION Credentials for an API Integration IDENTITY A user , person, individual IMAGE_SETTINGS Rendition settings for a FILE_TYPE INBOX_ITEM An email, notification, or chat message INVITE An invitation for an IDENTITY to an ORGANIZATION LEAD A business lead or contact request LEDGER_ENTRY A entry in the revenue LEDGER of an ORGANIZATION LEDGER_REPORT A report generated from a LEDGER . LEDGER A revenue and cost ledger of an ORGANIZATION LOCATION A geo location of a certain LocationType: RESIDENCE, OFFICE, etc. MODEL A custom data model OAUTH_APP The credential for and OAuth API Integration ORDER An order with a CART that contains PRODUCT ORGANIZATION An organization or group of some kind PAYMENT_PROCESSOR The configuration and credentials for a payment gateway PAYTRANSATION A payment transaction POLL A poll with one or more questions PRODUCT A product , a good or service PROJECT A project, that contains multiple WORK units PROMOTION A product promotion that can be applied to an ORDER RATING A entity rating of a certain type e.g. PRODUCT star rating REFERENCE Defines an arbitrary relationship between two entities REQUIREMENT Defines the field value requirements for entities and validation workflow RESERVATION A Product reservation REWARD_TRIGGER Defines what triggers an IDENTITY reward attribution REWARD A reward for WORK that is triggered by a REWARD_TRIGGER SUBSCRIPTION_PLAN A subscription plan consisting of one or more PRODUCTS SUBSCRIPTION A subscription of an IDENTITY to a SUBCRIPTION_PLAN TAG A tag (category or label) associated with an entity TAX Defines a tax or fee aassociated with a PRODUCT or ORDER TENANT A tenant also knows as a Cellmobs App TYPEVALUE A configured value of a Vocabulary WEBPAGE Defines the content of a web page WEBTEMPLATE A email, web, or report template WORK Defines task aka story, ticket typically associated with a PROJECT The core data model can be extended in two ways: Custom Field Templates and custom Models.","title":"Data Model &amp; Schema"},{"location":"setup/model-schema/#custom-field-templates","text":"Custom Field Templates provide a convenient way to extend existing model classes with additional fields. Users can define sets of fields as templates that can be attached to new or modified entities. This allows users to add custom attributes to entities, enabling them to capture and store additional information specific to their application's requirements. Custom Field Templates make it easy to expand the core data model without the need for complex code modifications or database schema changes. Click here to learn how to configure customer field templates . Custom Field Templates","title":"Custom Field Templates"},{"location":"setup/model-schema/#entity-requirements","text":"In addition to extending the core data model, Cellmobs supports Entity Requirements, a feature designed to validate entity field values based on configurable business rules in support of certain use cases and workflows . Entity Requirements help ensure data consistency and integrity by enforcing specific conditions and constraints on entity attributes. This allows users to maintain high-quality data in their applications, ultimately improving the overall user experience and reliability of the system. Entity Requirements Example Click here to learn how to configure entity requirements .","title":"Entity Requirements"},{"location":"setup/model-schema/#custom-models","text":"For more advanced use cases, Cellmobs allows users to create entirely custom Models. This feature provides even greater flexibility, enabling users to define their own entity types with custom attributes, relationships, and behavior. Custom Models can be used alongside the core data model to build sophisticated applications that cater to unique business requirements. Custom Models are still in the experimental stage and will be rolled out later this year.","title":"Custom Models"},{"location":"setup/nuxt-sdk/","text":"Nuxt SDK \u00b6 Coming soon!","title":"Nuxt SDK"},{"location":"setup/nuxt-sdk/#nuxt-sdk","text":"Coming soon!","title":"Nuxt SDK"},{"location":"setup/quickstart/","text":"Quick Start \u00b6 Welcome to the Cellmobs QuickStart Guide! This guide is your stepping-stone to building and deploying your very own web application on the Cellmobs platform. By the end of this guide, you'll be familiar with the essential steps to get started with Cellmobs. We'll walk you through: Signing Up : How to sign up for a free Cellmobs account. Creating an App : How to create your first application using Cellmobs platform. Verifying DNS Entries : We'll guide you on how to verify the DNS entries for your newly created app, a crucial step for it to be accessible on the web. Generating API Key : You'll learn how to create an API key, which acts as a unique identifier and authorizer for your app. Logging into App Console : Accessinf the App Console, which is your control room for managing the app. Inviting Team Members : Collaborating on an application is made easy with Cellmobs. We'll show you how to invite team members to your app. Configuring the App : Finally, we'll get you started on configuring your application to meet your specific requirements. This QuickStart Guide is intended to provide a concise overview of the Cellmobs platform's basics. For a deeper dive into each topic, we encourage you to explore the developer documentation. Now, let's get started with building your first application on the Cellmobs platform! Creating an account \u00b6 Cellmobs offers a free tier to get you started right away. No credit card required. To sign up, navigate to Cellmobs Sign-up Page . Sign Up Form Creating your first app \u00b6 Login at the Cellmobs Login Page with your email and password. Click on the \" Your Apps \" option on the navigation bar. Create an App Enter your application name and click on the save button. Application names are normalized e.g. My New App will be normalized to my-new-app Verify your App DNS \u00b6 Select your newly created application from the dropdown menu and navigate to the \"Keys and DNS\" section. Provided everything went well, your should see a list of 3 host names under Endpoints. Console: This is where your App administration console will live. Web API: This is the API host for your application's REST API . Webhook: This your main webhook host, in case you want to configure integrations with webhook support for your app. Your App DNS Copy and paste the urls in your browser to verify that each host is responding. The console will present you with a login screen, while the API and the Webhook host should respond with I'm alive! . Manage your API Keys \u00b6 You can create and remove API keys that you need to authenticate your app API requests when calling Cellmobs APIs. Navigate to the \"Keys and DNS\" section. In the Active Api Keys sub-section, click on the refresh icon to generate a new API key. Copy the key and store it in a safe location. Your API Keys Click the trashcan to delete an API key after you rotated your keys, but be sure that they are no longer used by a live application. Tip Key rotation reduces the risk associated with a key becoming compromised, as even if a key is leaked or stolen, it will only be useful for a limited period. However, it does add complexity to the application management and requires systems to handle key updates smoothly. Therefore, implementing an automatic key rotation system can be very beneficial to manage this process efficiently. Login to your App Console \u00b6 App Console Login To login to your app console and to learn how to configure and manage your application please consult the App Console user guide . Invite your Team \u00b6 You can invite members from your team to collaborate and manage your application through the \"App Console\". Navigate to the Organization sections of the console and locate your \"Primary Organization\" (aka \" Your App Organization \"). Whenever you create a new App, we automatically copy your Cellmobs account credentials to that new app along with your organization. Organizations Click to view and edit Your App Organization. Click the \"Members\" tab to view your Team Members. When you first create a new App, you should only see yourself listed. Organization Members There are several ways to add new members to an organization but the quick way is to send them an email invitiation. For more on how to configure new users and how to assign them to different organizations consult the App Console user guide . Click the \"Invite\" button to open the invitation form. Invite Team Members You can invite team members in two ways: at the application level or the organization level, each with distinct roles. Application level invitation: You can invite a new team member directly to the application. In this case, you would assign them a 'global' application role. The global role outlines what permissions the team member has across the entire application. For example, a 'ROLE_EDITOR' may be allowed to make changes to content across the application, while a 'ROLE_DEVELOPER' might have access to modify templates and settings. Organization level invitation: Alternatively, you can invite a team member to a specific organization within the application. When you do this, you assign them a specific role within that organization. The organization role dictates what the team member can do within that specific organization. Organization are configurable while Global Roles are not (see Security for more). Database \u00b6 Cellmobs provides a fully managed database solution through MongoDB Atlas . Databases are replicated across multiple regions and backed up continously. They will be scaled on demand and according to your usage. Your Database To request a personal login to your database, please contact support and open a support ticket. Personal logins will allow you to use popular MongoDB client tools like MongoDB Compass or Studio3T. Personal database login credentials are only available to paid subscriptions.","title":"Quickstart"},{"location":"setup/quickstart/#quick-start","text":"Welcome to the Cellmobs QuickStart Guide! This guide is your stepping-stone to building and deploying your very own web application on the Cellmobs platform. By the end of this guide, you'll be familiar with the essential steps to get started with Cellmobs. We'll walk you through: Signing Up : How to sign up for a free Cellmobs account. Creating an App : How to create your first application using Cellmobs platform. Verifying DNS Entries : We'll guide you on how to verify the DNS entries for your newly created app, a crucial step for it to be accessible on the web. Generating API Key : You'll learn how to create an API key, which acts as a unique identifier and authorizer for your app. Logging into App Console : Accessinf the App Console, which is your control room for managing the app. Inviting Team Members : Collaborating on an application is made easy with Cellmobs. We'll show you how to invite team members to your app. Configuring the App : Finally, we'll get you started on configuring your application to meet your specific requirements. This QuickStart Guide is intended to provide a concise overview of the Cellmobs platform's basics. For a deeper dive into each topic, we encourage you to explore the developer documentation. Now, let's get started with building your first application on the Cellmobs platform!","title":"Quick Start"},{"location":"setup/quickstart/#creating-an-account","text":"Cellmobs offers a free tier to get you started right away. No credit card required. To sign up, navigate to Cellmobs Sign-up Page . Sign Up Form","title":"Creating an account"},{"location":"setup/quickstart/#creating-your-first-app","text":"Login at the Cellmobs Login Page with your email and password. Click on the \" Your Apps \" option on the navigation bar. Create an App Enter your application name and click on the save button. Application names are normalized e.g. My New App will be normalized to my-new-app","title":"Creating your first app"},{"location":"setup/quickstart/#verify-your-app-dns","text":"Select your newly created application from the dropdown menu and navigate to the \"Keys and DNS\" section. Provided everything went well, your should see a list of 3 host names under Endpoints. Console: This is where your App administration console will live. Web API: This is the API host for your application's REST API . Webhook: This your main webhook host, in case you want to configure integrations with webhook support for your app. Your App DNS Copy and paste the urls in your browser to verify that each host is responding. The console will present you with a login screen, while the API and the Webhook host should respond with I'm alive! .","title":"Verify your App DNS"},{"location":"setup/quickstart/#manage-your-api-keys","text":"You can create and remove API keys that you need to authenticate your app API requests when calling Cellmobs APIs. Navigate to the \"Keys and DNS\" section. In the Active Api Keys sub-section, click on the refresh icon to generate a new API key. Copy the key and store it in a safe location. Your API Keys Click the trashcan to delete an API key after you rotated your keys, but be sure that they are no longer used by a live application. Tip Key rotation reduces the risk associated with a key becoming compromised, as even if a key is leaked or stolen, it will only be useful for a limited period. However, it does add complexity to the application management and requires systems to handle key updates smoothly. Therefore, implementing an automatic key rotation system can be very beneficial to manage this process efficiently.","title":"Manage your API Keys"},{"location":"setup/quickstart/#login-to-your-app-console","text":"App Console Login To login to your app console and to learn how to configure and manage your application please consult the App Console user guide .","title":"Login to your App Console"},{"location":"setup/quickstart/#invite-your-team","text":"You can invite members from your team to collaborate and manage your application through the \"App Console\". Navigate to the Organization sections of the console and locate your \"Primary Organization\" (aka \" Your App Organization \"). Whenever you create a new App, we automatically copy your Cellmobs account credentials to that new app along with your organization. Organizations Click to view and edit Your App Organization. Click the \"Members\" tab to view your Team Members. When you first create a new App, you should only see yourself listed. Organization Members There are several ways to add new members to an organization but the quick way is to send them an email invitiation. For more on how to configure new users and how to assign them to different organizations consult the App Console user guide . Click the \"Invite\" button to open the invitation form. Invite Team Members You can invite team members in two ways: at the application level or the organization level, each with distinct roles. Application level invitation: You can invite a new team member directly to the application. In this case, you would assign them a 'global' application role. The global role outlines what permissions the team member has across the entire application. For example, a 'ROLE_EDITOR' may be allowed to make changes to content across the application, while a 'ROLE_DEVELOPER' might have access to modify templates and settings. Organization level invitation: Alternatively, you can invite a team member to a specific organization within the application. When you do this, you assign them a specific role within that organization. The organization role dictates what the team member can do within that specific organization. Organization are configurable while Global Roles are not (see Security for more).","title":"Invite your Team"},{"location":"setup/quickstart/#database","text":"Cellmobs provides a fully managed database solution through MongoDB Atlas . Databases are replicated across multiple regions and backed up continously. They will be scaled on demand and according to your usage. Your Database To request a personal login to your database, please contact support and open a support ticket. Personal logins will allow you to use popular MongoDB client tools like MongoDB Compass or Studio3T. Personal database login credentials are only available to paid subscriptions.","title":"Database"},{"location":"setup/react-sdk/","text":"React SDK \u00b6 Cellmobs provides a comprehensive Software Development Kit (SDK) designed for React.js and Next.js applications to ensure a smoother, faster development process. It is a Next.js project bootstrapped with create-next-app which sets up the basic framework for developing Cellmobs clients using React.js and Next.js. Here are the main features of this SDK: Pre-Built Components: The React SDK comes with a range of pre-built components that can be readily used in your application. These include components for authentication, form fields, data lists, page fragments. and various user interface elements. Using these pre-built components can significantly reduce development time and ensure consistency across your application. Request Mapping Framework: The SDK includes a complete request mapping framework for the Cellmobs REST API and statement management through Redux. This framework provides simplified, promise-based methods for making requests to the API, abstracting the underlying HTTP methods. This means you don't need to manually craft HTTP requests or parse responses. For example, to fetch data from an endpoint, you can use the SDK's methods with simple parameters. The SDK handles the complexities of constructing the correct API call, sending it, and interpreting the response. Customizable and Extensible: While the SDK provides a lot of functionality out of the box, it's also designed to be customizable and extensible. You can extend the pre-built components or the request mapping framework to suit your specific needs. Cloning the project \u00b6 Before you get started, you need to install the following dependencies: Git Node Js A suitable code editor (e.g. Visual Studio Code ) Access to Github Once done, open a terminal and enter the following command $ git clone https://github.com/cellmobs/cellmobs-react-sdk $ cd cellmobs-react-sdk Getting Started \u00b6 First , install the dependencies # install dependencies $ npm install Next to run the development server: $ npm run dev # or $ yarn dev Open http://localhost:3000 with your browser to see the result. You can start editing the page by modifying pages/index.js . The page auto-updates as you edit the file. Configuration \u00b6 There is a constants.js file here you can edit the default API and ADMIN hosts. export const ENVIRONMENT = 'dev' export const X_API_KEY = process . env . X_API_KEY || 'api-key' ; // You Cellmobs API Key export const X_TENANTID = process . env . X_TENANTID || 'tenant-id' ; // Your Cellmobs Tenant ID export const HOST_NAME = process . env . HOST_NAME || 'yourdomain.com' ; // Your Application host export const API_BASE_URL = process . env . API_BASE_URL || \"https://app-name.web.cellmobs.com/v1\" ; // Your Cellmobs API host if app-name was the name of your app. export const CDN_BASE_URL = \"https://cdn.cellmobs.com/\" ; // The Cellmobs public CDN export const ADMIN_BASE_URL = process . env . ADMIN_BASE_URL || \"https://app-name.console.cellmobs.com\" ; // Your Cellmobs App Console host export const RECAPTCHA_SITEKEY = process . env . RECAPTCHA_SITEKEY || \"SITEKEY\" ; // Your Google re-CAPTCHA site key export const GOOGLE_API_CLIENT_ID = process . env . GOOGLE_API_CLIENT_ID || \"\" ; // Your Google API Client ID for Google Sign-In support export const SUBSCRIPTION_PLAN_ID = process . env . SUBSCRIPTION_PLAN_ID || \"646cb7c828a2997484c645e2\" ; // The Cellmobs Subscription your app will use (Optional) export const GOOGLE_MEASUREMENT_ID = process . env . GOOGLE_MEASUREMENT_ID || \"MEASUREMENTID\" ; // Your Google Analytics Measurement ID export const TINY_MCE_KEY = process . env . TINY_MCE_KEY || \"TINY-MCE-KEY\" ; // Your TinyMCE key in case you want to support inline editing Adding new pages \u00b6 One of Next.js's best features is its support for a file-system-based router. This means that to create a new page, we Create a new folder with the name of the route in the pages directory Create an index.js file and add the React page component. Reference the new page in your existing pages. Deploy on Vercel \u00b6 The easiest way to deploy your Next.js app is to use the Vercel Platform from the creators of Next.js. Check out the Next.js deployment documentation for more details. Learn More \u00b6 To learn more about Next.js, take a look at the following resources: Next.js Documentation - learn about Next.js features and API. Learn Next.js - an interactive Next.js tutorial. You can check out the Next.js GitHub repository - your feedback and contributions are welcome!","title":"React SDK"},{"location":"setup/react-sdk/#react-sdk","text":"Cellmobs provides a comprehensive Software Development Kit (SDK) designed for React.js and Next.js applications to ensure a smoother, faster development process. It is a Next.js project bootstrapped with create-next-app which sets up the basic framework for developing Cellmobs clients using React.js and Next.js. Here are the main features of this SDK: Pre-Built Components: The React SDK comes with a range of pre-built components that can be readily used in your application. These include components for authentication, form fields, data lists, page fragments. and various user interface elements. Using these pre-built components can significantly reduce development time and ensure consistency across your application. Request Mapping Framework: The SDK includes a complete request mapping framework for the Cellmobs REST API and statement management through Redux. This framework provides simplified, promise-based methods for making requests to the API, abstracting the underlying HTTP methods. This means you don't need to manually craft HTTP requests or parse responses. For example, to fetch data from an endpoint, you can use the SDK's methods with simple parameters. The SDK handles the complexities of constructing the correct API call, sending it, and interpreting the response. Customizable and Extensible: While the SDK provides a lot of functionality out of the box, it's also designed to be customizable and extensible. You can extend the pre-built components or the request mapping framework to suit your specific needs.","title":"React SDK"},{"location":"setup/react-sdk/#cloning-the-project","text":"Before you get started, you need to install the following dependencies: Git Node Js A suitable code editor (e.g. Visual Studio Code ) Access to Github Once done, open a terminal and enter the following command $ git clone https://github.com/cellmobs/cellmobs-react-sdk $ cd cellmobs-react-sdk","title":"Cloning the project"},{"location":"setup/react-sdk/#getting-started","text":"First , install the dependencies # install dependencies $ npm install Next to run the development server: $ npm run dev # or $ yarn dev Open http://localhost:3000 with your browser to see the result. You can start editing the page by modifying pages/index.js . The page auto-updates as you edit the file.","title":"Getting Started"},{"location":"setup/react-sdk/#configuration","text":"There is a constants.js file here you can edit the default API and ADMIN hosts. export const ENVIRONMENT = 'dev' export const X_API_KEY = process . env . X_API_KEY || 'api-key' ; // You Cellmobs API Key export const X_TENANTID = process . env . X_TENANTID || 'tenant-id' ; // Your Cellmobs Tenant ID export const HOST_NAME = process . env . HOST_NAME || 'yourdomain.com' ; // Your Application host export const API_BASE_URL = process . env . API_BASE_URL || \"https://app-name.web.cellmobs.com/v1\" ; // Your Cellmobs API host if app-name was the name of your app. export const CDN_BASE_URL = \"https://cdn.cellmobs.com/\" ; // The Cellmobs public CDN export const ADMIN_BASE_URL = process . env . ADMIN_BASE_URL || \"https://app-name.console.cellmobs.com\" ; // Your Cellmobs App Console host export const RECAPTCHA_SITEKEY = process . env . RECAPTCHA_SITEKEY || \"SITEKEY\" ; // Your Google re-CAPTCHA site key export const GOOGLE_API_CLIENT_ID = process . env . GOOGLE_API_CLIENT_ID || \"\" ; // Your Google API Client ID for Google Sign-In support export const SUBSCRIPTION_PLAN_ID = process . env . SUBSCRIPTION_PLAN_ID || \"646cb7c828a2997484c645e2\" ; // The Cellmobs Subscription your app will use (Optional) export const GOOGLE_MEASUREMENT_ID = process . env . GOOGLE_MEASUREMENT_ID || \"MEASUREMENTID\" ; // Your Google Analytics Measurement ID export const TINY_MCE_KEY = process . env . TINY_MCE_KEY || \"TINY-MCE-KEY\" ; // Your TinyMCE key in case you want to support inline editing","title":"Configuration"},{"location":"setup/react-sdk/#adding-new-pages","text":"One of Next.js's best features is its support for a file-system-based router. This means that to create a new page, we Create a new folder with the name of the route in the pages directory Create an index.js file and add the React page component. Reference the new page in your existing pages.","title":"Adding new pages"},{"location":"setup/react-sdk/#deploy-on-vercel","text":"The easiest way to deploy your Next.js app is to use the Vercel Platform from the creators of Next.js. Check out the Next.js deployment documentation for more details.","title":"Deploy on Vercel"},{"location":"setup/react-sdk/#learn-more","text":"To learn more about Next.js, take a look at the following resources: Next.js Documentation - learn about Next.js features and API. Learn Next.js - an interactive Next.js tutorial. You can check out the Next.js GitHub repository - your feedback and contributions are welcome!","title":"Learn More"},{"location":"setup/security/","text":"Security \u00b6 At Cellmobs, we take the security of our platform, APIs, and data very seriously. We understand the importance of safeguarding your information and have implemented rigorous measures to ensure a secure environment for all our customers. Our security stance encompasses multiple layers of protection, including encryption of data in transit and at rest, field-level encryption of particularly sensititive data, regular security audits, and adherence to industry best practices. We follow the principles of least privilege and role-based access control to restrict access to sensitive data and resources only to authorized personnel. In addition, our APIs are designed with security in mind, incorporating strong authentication and authorization mechanisms to prevent unauthorized access. We regularly monitor and update our platform to address emerging threats and vulnerabilities, ensuring that your data and applications remain protected at all times. Global Roles \u00b6 Global user roles are an essential component of access control as they define the level of access and permissions granted to users based on their role within the context of an application. There are seven predefined global roles that determine user access to various parts of the system. These roles have been carefully designed to cater to different responsibilities and cannot be modified. System Administrator - ROLE_SYSADMIN Administrator - ROLE_ADMIN Manager - ROLE_MANAGER Developer - ROLE_DEVELOPER Editor - ROLE_EDITOR User - ROLE_USER Non-User - ROLE_NONUSER These global roles ensure that users can only access the features and resources relevant to their job function, thereby maintaining a secure and organized environment. As such and Users cannot login to to the app console of an application for example. And within the console certain roles have access to certain sections. As you onboard users onto your application, assigning them to the appropriate global role will ensure smooth and secure operation while empowering your team members to perform their tasks effectively. Click here for more details on how to Manage Users App Console Access \u00b6 Section Roles Users ROLE_SYSADMIN , ROLE_ADMIN , ROLE_MANAGER (Orgs) Organizations ROLE_SYSADMIN , ROLE_ADMIN , ROLE_MANAGER (Orgs) Pages ROLE_SYSADMIN , ROLE_ADMIN , ROLE_MANAGER (Orgs) Revenue ROLE_SYSADMIN , ROLE_ADMIN , ROLE_MANAGER (Orgs) Products ROLE_SYSADMIN , ROLE_ADMIN , ROLE_MANAGER (Orgs) Content ROLE_SYSADMIN , ROLE_ADMIN , ROLE_MANAGER (Orgs) Channels ROLE_SYSADMIN , ROLE_ADMIN , ROLE_MANAGER (Orgs) Feeds ROLE_SYSADMIN , ROLE_ADMIN , ROLE_MANAGER (Orgs) Settings ROLE_SYSADMIN , ROLE_ADMIN , ROLE_DEVELOPER Models ROLE_SYSADMIN Note (Orgs) means that a role only has access to the section in the context of its permissions assigned by its Organization roles. It will only see and be able to modify entities associated with those organizations. Organization Roles \u00b6 Global roles and organization roles serve distinct purposes within a system, catering to different aspects of access control and user management. Global roles are predefined roles that determine a user's access to various parts of the system at a high level. These roles are fixed and cannot be changed, as they are designed to cater to general system access and cover a wide range of functionalities. Global roles provide a baseline level of permissions and are applicable across the entire platform. On the other hand, organization roles are fully customizable and offer app developers granular control over user access to domain objects, also known as entities, associated with a specific organization. These roles allow developers to define the exact permissions and access levels for each user within their organization, tailoring the roles to the unique requirements and structure of their business. Organization roles enable developers to create a more fine-grained and flexible access control system that aligns with their specific needs and workflows. Global roles define general system access, while organization roles offer customizable and fine-grained control over user access within a particular organization, providing app developers with the flexibility to manage permissions in a way that best suits their specific use case. Click here for more details on how to Manage Organizations Configure Organization Roles \u00b6 Step 1 \u00b6 To manage the Organization roles for an application login to the app console and open the Settings -> Security page. \"Create a new Role\" and assign the desired permissions for the role. CREATE permission inherit READ permissions so no needs to check READ permissions if you have the corresponding CREATE permission. Configure Organization Roles Step 2 \u00b6 Once you saved your new role, you can assign it to an Organizations using the Member tab in the Organization editor . Configure Organization Roles Permissions \u00b6 Access Control List (ACL) permissions play a critical role in managing access to resources within the Cellmobs platform, particularly when it comes to entities associated with an organization. These permissions allow for precise control over user access and help maintain a secure environment. ACL permissions for Cellmobs entities can be categorized into two main types: Read and Create privileges. Read Privileges \u00b6 This type of permission grants users the ability to view and access specific entities within an organization and throughout applications. Users with Read privileges can see the information related to the entities they have access to but are not allowed to make any modifications. Create Privileges \u00b6 This permission provides users with the rights to create, update, and delete entities associated with an organization. Users with Create permissions can add new entities, modify existing ones, and remove them from the system as needed. This level of access allows for more significant control over the entities within an organization and is typically granted to users with higher levels of responsibility. By utilizing ACL permissions, organizations can ensure that each user has the appropriate level of access to Cellmobs entities, protecting sensitive information and maintaining a secure and efficient working environment. Available Permissions \u00b6 CREATE_ACCOUNT CREATE_ACL_ROLE_ORGANIZATION CREATE_CALENDAR_EVENT CREATE_CHANNEL CREATE_COMMENT CREATE_CONTENT CREATE_DEALTERMS CREATE_FEED CREATE_IDENTITY CREATE_LEDGER CREATE_ORDER CREATE_ORGANIZATION CREATE_PAY_TRANSACTION CREATE_POLL CREATE_PRODUCT CREATE_PROJECT CREATE_PROMOTION CREATE_SETTING CREATE_SUBSCRIPTION_PLAN CREATE_SUBSCRIPTION CREATE_TAX CREATE_TENANT CREATE_WEBPAGE CREATE_WORK READ_ACCOUNT READ_ACL_ROLE_ORGANIZATION READ_CALENDAR_EVENT READ_CHANNEL READ_COMMENT READ_CONTENT READ_DEALTERMS READ_FEED READ_IDENTITY READ_LEDGER READ_ORDERS READ_ORGANIZATION READ_PAY_TRANSACTION READ_POLL READ_PRODUCT READ_PROJECT READ_PROMOTION READ_SETTING READ_SUBSCRIPTION_PLAN READ_SUBSCRIPTION READ_TAX READ_TENANT READ_WEBPAGE READ_WORK SECURITY_ADMIN","title":"Security"},{"location":"setup/security/#security","text":"At Cellmobs, we take the security of our platform, APIs, and data very seriously. We understand the importance of safeguarding your information and have implemented rigorous measures to ensure a secure environment for all our customers. Our security stance encompasses multiple layers of protection, including encryption of data in transit and at rest, field-level encryption of particularly sensititive data, regular security audits, and adherence to industry best practices. We follow the principles of least privilege and role-based access control to restrict access to sensitive data and resources only to authorized personnel. In addition, our APIs are designed with security in mind, incorporating strong authentication and authorization mechanisms to prevent unauthorized access. We regularly monitor and update our platform to address emerging threats and vulnerabilities, ensuring that your data and applications remain protected at all times.","title":"Security"},{"location":"setup/security/#global-roles","text":"Global user roles are an essential component of access control as they define the level of access and permissions granted to users based on their role within the context of an application. There are seven predefined global roles that determine user access to various parts of the system. These roles have been carefully designed to cater to different responsibilities and cannot be modified. System Administrator - ROLE_SYSADMIN Administrator - ROLE_ADMIN Manager - ROLE_MANAGER Developer - ROLE_DEVELOPER Editor - ROLE_EDITOR User - ROLE_USER Non-User - ROLE_NONUSER These global roles ensure that users can only access the features and resources relevant to their job function, thereby maintaining a secure and organized environment. As such and Users cannot login to to the app console of an application for example. And within the console certain roles have access to certain sections. As you onboard users onto your application, assigning them to the appropriate global role will ensure smooth and secure operation while empowering your team members to perform their tasks effectively. Click here for more details on how to Manage Users","title":"Global Roles"},{"location":"setup/security/#app-console-access","text":"Section Roles Users ROLE_SYSADMIN , ROLE_ADMIN , ROLE_MANAGER (Orgs) Organizations ROLE_SYSADMIN , ROLE_ADMIN , ROLE_MANAGER (Orgs) Pages ROLE_SYSADMIN , ROLE_ADMIN , ROLE_MANAGER (Orgs) Revenue ROLE_SYSADMIN , ROLE_ADMIN , ROLE_MANAGER (Orgs) Products ROLE_SYSADMIN , ROLE_ADMIN , ROLE_MANAGER (Orgs) Content ROLE_SYSADMIN , ROLE_ADMIN , ROLE_MANAGER (Orgs) Channels ROLE_SYSADMIN , ROLE_ADMIN , ROLE_MANAGER (Orgs) Feeds ROLE_SYSADMIN , ROLE_ADMIN , ROLE_MANAGER (Orgs) Settings ROLE_SYSADMIN , ROLE_ADMIN , ROLE_DEVELOPER Models ROLE_SYSADMIN Note (Orgs) means that a role only has access to the section in the context of its permissions assigned by its Organization roles. It will only see and be able to modify entities associated with those organizations.","title":"App Console Access"},{"location":"setup/security/#organization-roles","text":"Global roles and organization roles serve distinct purposes within a system, catering to different aspects of access control and user management. Global roles are predefined roles that determine a user's access to various parts of the system at a high level. These roles are fixed and cannot be changed, as they are designed to cater to general system access and cover a wide range of functionalities. Global roles provide a baseline level of permissions and are applicable across the entire platform. On the other hand, organization roles are fully customizable and offer app developers granular control over user access to domain objects, also known as entities, associated with a specific organization. These roles allow developers to define the exact permissions and access levels for each user within their organization, tailoring the roles to the unique requirements and structure of their business. Organization roles enable developers to create a more fine-grained and flexible access control system that aligns with their specific needs and workflows. Global roles define general system access, while organization roles offer customizable and fine-grained control over user access within a particular organization, providing app developers with the flexibility to manage permissions in a way that best suits their specific use case. Click here for more details on how to Manage Organizations","title":"Organization Roles"},{"location":"setup/security/#configure-organization-roles","text":"","title":"Configure Organization Roles"},{"location":"setup/security/#step-1","text":"To manage the Organization roles for an application login to the app console and open the Settings -> Security page. \"Create a new Role\" and assign the desired permissions for the role. CREATE permission inherit READ permissions so no needs to check READ permissions if you have the corresponding CREATE permission. Configure Organization Roles","title":"Step 1"},{"location":"setup/security/#step-2","text":"Once you saved your new role, you can assign it to an Organizations using the Member tab in the Organization editor . Configure Organization Roles","title":"Step 2"},{"location":"setup/security/#permissions","text":"Access Control List (ACL) permissions play a critical role in managing access to resources within the Cellmobs platform, particularly when it comes to entities associated with an organization. These permissions allow for precise control over user access and help maintain a secure environment. ACL permissions for Cellmobs entities can be categorized into two main types: Read and Create privileges.","title":"Permissions"},{"location":"setup/security/#read-privileges","text":"This type of permission grants users the ability to view and access specific entities within an organization and throughout applications. Users with Read privileges can see the information related to the entities they have access to but are not allowed to make any modifications.","title":"Read Privileges"},{"location":"setup/security/#create-privileges","text":"This permission provides users with the rights to create, update, and delete entities associated with an organization. Users with Create permissions can add new entities, modify existing ones, and remove them from the system as needed. This level of access allows for more significant control over the entities within an organization and is typically granted to users with higher levels of responsibility. By utilizing ACL permissions, organizations can ensure that each user has the appropriate level of access to Cellmobs entities, protecting sensitive information and maintaining a secure and efficient working environment.","title":"Create Privileges"},{"location":"setup/security/#available-permissions","text":"CREATE_ACCOUNT CREATE_ACL_ROLE_ORGANIZATION CREATE_CALENDAR_EVENT CREATE_CHANNEL CREATE_COMMENT CREATE_CONTENT CREATE_DEALTERMS CREATE_FEED CREATE_IDENTITY CREATE_LEDGER CREATE_ORDER CREATE_ORGANIZATION CREATE_PAY_TRANSACTION CREATE_POLL CREATE_PRODUCT CREATE_PROJECT CREATE_PROMOTION CREATE_SETTING CREATE_SUBSCRIPTION_PLAN CREATE_SUBSCRIPTION CREATE_TAX CREATE_TENANT CREATE_WEBPAGE CREATE_WORK READ_ACCOUNT READ_ACL_ROLE_ORGANIZATION READ_CALENDAR_EVENT READ_CHANNEL READ_COMMENT READ_CONTENT READ_DEALTERMS READ_FEED READ_IDENTITY READ_LEDGER READ_ORDERS READ_ORGANIZATION READ_PAY_TRANSACTION READ_POLL READ_PRODUCT READ_PROJECT READ_PROMOTION READ_SETTING READ_SUBSCRIPTION_PLAN READ_SUBSCRIPTION READ_TAX READ_TENANT READ_WEBPAGE READ_WORK SECURITY_ADMIN","title":"Available Permissions"},{"location":"setup/setting-up-integrations/","text":"Setting up Integrations \u00b6 Cellmobs offers extensive API integration capabilities that empower developers to connect their applications with a wide range of popular cloud apps. For most integrations, Cellmobs supports the OAuth2 Authorization Code Grant Flow , a secure and reliable authentication mechanism that grants your application access to resources and data of users who authorize your application to access their information on the external service. The OAuth2 Authorization Code Grant Flow has several benefits: Enhanced security : This flow provides a high level of security, as it relies on a temporary authorization code that is exchanged for an access token, minimizing the risk of token exposure. Fine-grained permissions : OAuth2 allows users to grant your application specific permissions, ensuring that your app has only the necessary access to their data on the external service. Refresh tokens : This flow supports refresh tokens, enabling your application to maintain long-lived access to a user's data without requiring the user to re-authenticate frequently. User consent : Users must explicitly authorize your application to access their data, ensuring that they maintain control over their information. For non-OAuth integrations, Cellmobs typically relies on a simple API key and secret or access token to authorize your app to make requests against the external API (e.g., AWS S3). This approach simplifies the authentication process while still providing a reasonable level of security as Cellmobs encrypts API credentials at rest, in transit, and through added field level encryption. By offering various API integration options, Cellmobs enables developers to build powerful and flexible applications that seamlessly connect with the tools and services their users already know and trust. OAuth2 APIs \u00b6 The Cellmobs API offers dedicated OAuth2 endpoints to facilitate seamless integration with external cloud applications using OAuth2. These endpoints handle critical aspects of the OAuth2 process, making it easier for developers to implement secure and efficient integrations. Configuring an OAuth2 integration involves a few key steps to ensure a smooth connection between your Cellmobs application and the desired cloud application. Register with the cloud application's developer network: Sign up for a developer account on the platform you want to integrate with (e.g. Google , Hubspot , Dropbox , etc.). This will give you access to their API and developer resources. Configure an app with the proper scope and permissions for the APIs of that cloud application: Create a new application within the developer network and specify the required OAuth2 scopes and permissions to access the necessary APIs. The scope determines the level of access your application will have, and permissions define the specific actions your application can perform. Add the OAuth2 client credentials to your Cellmobs application: Once you have created your application and obtained your client ID and client secret, enter these credentials into your Cellmobs app's integration settings . This will allow you or your Cellmobs app users authenticate with the cloud application using OAuth2. Implement the OAuth2 authorization flow in your Cellmobs app: The Cellmobs API exposes dedicated OAuth2 endpoints for both generating an Authorization Url and to receive the OAuth2 callback to exchange the code with a valid access token. Depending on the use case and your app's requirements, you might need to allow users to trigger the authorization flow in your app and configure the integration accordingly. Once configured, Cellmobs API integrations will: Generate an Authorization URL : Cellmobs API provides an endpoint to generate an OAuth2 authorization URL. When a user wants to authorize your application to access their data on the external cloud application, they will be redirected to this authorization URL. The user will then log in to their account on the external service and grant your application the necessary permissions. Receive OAuth2 Callback and Exchange Authorization Code for Access Token : Once the user authorizes your application, the external cloud application will redirect them back to your application, including an authorization code in the callback URL. The Cellmobs API provides a dedicated endpoint to handle this callback and exchange the authorization code for an access token. This access token allows your application to make authorized API requests on behalf of the user. Manage Access Tokens and Refresh Tokens : The Cellmobs API takes care of managing access tokens and refresh tokens for each integration. It ensures that access tokens are securely stored and refreshed as needed, so your application can continue to make API requests without interruptions. Configure optional webhooks to receive event notifications from the cloud application: If the cloud application supports webhooks, you can configure them to notify your Cellmobs app when specific events occur (e.g., a new contact is created in Hubspot). Webhooks enable real-time communication between the cloud application and your Cellmobs app, allowing you to react to events and synchronize data between the two systems. By following these steps, you can successfully integrate your Cellmobs application with various cloud applications using OAuth2, unlocking powerful features and functionality for your users. Click here to learn how to configure Integrations .","title":"Integrations"},{"location":"setup/setting-up-integrations/#setting-up-integrations","text":"Cellmobs offers extensive API integration capabilities that empower developers to connect their applications with a wide range of popular cloud apps. For most integrations, Cellmobs supports the OAuth2 Authorization Code Grant Flow , a secure and reliable authentication mechanism that grants your application access to resources and data of users who authorize your application to access their information on the external service. The OAuth2 Authorization Code Grant Flow has several benefits: Enhanced security : This flow provides a high level of security, as it relies on a temporary authorization code that is exchanged for an access token, minimizing the risk of token exposure. Fine-grained permissions : OAuth2 allows users to grant your application specific permissions, ensuring that your app has only the necessary access to their data on the external service. Refresh tokens : This flow supports refresh tokens, enabling your application to maintain long-lived access to a user's data without requiring the user to re-authenticate frequently. User consent : Users must explicitly authorize your application to access their data, ensuring that they maintain control over their information. For non-OAuth integrations, Cellmobs typically relies on a simple API key and secret or access token to authorize your app to make requests against the external API (e.g., AWS S3). This approach simplifies the authentication process while still providing a reasonable level of security as Cellmobs encrypts API credentials at rest, in transit, and through added field level encryption. By offering various API integration options, Cellmobs enables developers to build powerful and flexible applications that seamlessly connect with the tools and services their users already know and trust.","title":"Setting up Integrations"},{"location":"setup/setting-up-integrations/#oauth2-apis","text":"The Cellmobs API offers dedicated OAuth2 endpoints to facilitate seamless integration with external cloud applications using OAuth2. These endpoints handle critical aspects of the OAuth2 process, making it easier for developers to implement secure and efficient integrations. Configuring an OAuth2 integration involves a few key steps to ensure a smooth connection between your Cellmobs application and the desired cloud application. Register with the cloud application's developer network: Sign up for a developer account on the platform you want to integrate with (e.g. Google , Hubspot , Dropbox , etc.). This will give you access to their API and developer resources. Configure an app with the proper scope and permissions for the APIs of that cloud application: Create a new application within the developer network and specify the required OAuth2 scopes and permissions to access the necessary APIs. The scope determines the level of access your application will have, and permissions define the specific actions your application can perform. Add the OAuth2 client credentials to your Cellmobs application: Once you have created your application and obtained your client ID and client secret, enter these credentials into your Cellmobs app's integration settings . This will allow you or your Cellmobs app users authenticate with the cloud application using OAuth2. Implement the OAuth2 authorization flow in your Cellmobs app: The Cellmobs API exposes dedicated OAuth2 endpoints for both generating an Authorization Url and to receive the OAuth2 callback to exchange the code with a valid access token. Depending on the use case and your app's requirements, you might need to allow users to trigger the authorization flow in your app and configure the integration accordingly. Once configured, Cellmobs API integrations will: Generate an Authorization URL : Cellmobs API provides an endpoint to generate an OAuth2 authorization URL. When a user wants to authorize your application to access their data on the external cloud application, they will be redirected to this authorization URL. The user will then log in to their account on the external service and grant your application the necessary permissions. Receive OAuth2 Callback and Exchange Authorization Code for Access Token : Once the user authorizes your application, the external cloud application will redirect them back to your application, including an authorization code in the callback URL. The Cellmobs API provides a dedicated endpoint to handle this callback and exchange the authorization code for an access token. This access token allows your application to make authorized API requests on behalf of the user. Manage Access Tokens and Refresh Tokens : The Cellmobs API takes care of managing access tokens and refresh tokens for each integration. It ensures that access tokens are securely stored and refreshed as needed, so your application can continue to make API requests without interruptions. Configure optional webhooks to receive event notifications from the cloud application: If the cloud application supports webhooks, you can configure them to notify your Cellmobs app when specific events occur (e.g., a new contact is created in Hubspot). Webhooks enable real-time communication between the cloud application and your Cellmobs app, allowing you to react to events and synchronize data between the two systems. By following these steps, you can successfully integrate your Cellmobs application with various cloud applications using OAuth2, unlocking powerful features and functionality for your users. Click here to learn how to configure Integrations .","title":"OAuth2 APIs"},{"location":"setup/setting-up-tags/","text":"Setting up tags \u00b6 Cellmobs Tags are a versatile and powerful feature that can be utilized in various ways to enhance the organization and functionality of your app. By leveraging Tags, you can create custom structures, categorize content, and establish relationships between different elements within your application. Some common use cases for Cellmobs Tags include: App Navigation: Tags can be used to define the navigation structure of your app, allowing users to easily navigate between different sections or categories. By associating Tags with specific pages, views, or components, you can create a user-friendly and intuitive navigation experience. Content Categorization: Tags are an effective way to categorize and organize content within your app, such as articles, products, or services. By assigning relevant Tags to different content elements, users can easily search for, filter, and discover content that matches their interests or requirements. Product Category Hierarchy: In the case of a multi-vendor marketplace or e-commerce platform, Tags can be used to create a hierarchical structure for product categories. This hierarchy allows users to browse and explore products based on their categories and subcategories, simplifying the browsing experience and enhancing product discoverability. Organizing and Labeling Data: Tags can be associated with most Cellmobs entities, enabling you to organize and label your data in a manner that best suits your application's use cases. Whether you need to group related entities, highlight specific attributes, or create custom segments, Tags offer the flexibility to tailor your data organization to your unique requirements. By incorporating Cellmobs Tags into your app, you can create a more organized, efficient, and user-friendly experience, ensuring that users can easily find and interact with the content and features they need. Creating Tag Types \u00b6 Organizing Tags under TagTypes is an effective way to create multiple hierarchies and disambiguate between different contexts in which Tags are used. This approach enhances the flexibility and organization of your app by providing a structured and logical way to group Tags based on their purpose or context. Configure Tag Types TagTypes is a Cellmobs Vocabulary ( TAG_TYPE ) and are essentially categories that group Tags with similar functions or contexts. By organizing Tags under specific TagTypes, you can create separate hierarchies for different use cases within your app, ensuring that each Tag serves its intended purpose without causing confusion or overlap. For example, you may have TagTypes for different aspects of your app, such as: Navigation: This TagType could include Tags related to the app's navigation structure, such as 'Home', 'Products', or 'Contact'. Content Categories: This TagType might contain Tags for categorizing content, like 'News', 'Tutorials', or 'Reviews'. Product Categories: In an e-commerce app, this TagType could encompass Tags representing product categories, such as 'Electronics', 'Clothing', or 'Toys'. By using TagTypes to organize your Tags, you can create clear distinctions between different contexts, making it easier for both app developers and users to understand and interact with the Tag-based features and organization within your app. This structured approach not only simplifies the management of Tags but also enhances the overall user experience by providing a more organized and intuitive interface. Configure a Tag Hierarchy \u00b6 The App Console Tag Editor and the Tag API enable you to create and configure tag hierarchies, as well as fetch and manipulate tags within your app efficiently. App Console Tag Editor \u00b6 The Tag Editor , accessible through the App Console, allows you to create, modify, and configure tag hierarchies visually. You can add new tags, define their relationships, and assign them to TagTypes, creating a structured organization for your application's tags. This user-friendly interface simplifies the process of creating and managing tag hierarchies, allowing you to see the structure and relationships between tags in a clear and intuitive manner. Configure Tag Hierarchies Tag API \u00b6 The Tag API provides a programmatic way to fetch and manipulate tags within your application. You can use the API to retrieve tags, create new ones, update existing tags, or delete them as needed. By leveraging the Tag API, you can integrate tag management directly into your app's logic, ensuring that tags are updated and manipulated in real-time as users interact with your application. curl --location 'https://web.cellmobs.com/v1/tag/list?size=200&types=CONTENT' \\ --header 'Authorization: Bearer <token>' Note To optimize performance and reduce unnecessary API load, it is recommended that developers cache tags within their application. By caching tags, your app can fetch and display tag-related data more quickly, avoiding the need for frequent API calls. This approach not only improves the efficiency of your app but also helps maintain a stable and responsive user experience.","title":"Tags"},{"location":"setup/setting-up-tags/#setting-up-tags","text":"Cellmobs Tags are a versatile and powerful feature that can be utilized in various ways to enhance the organization and functionality of your app. By leveraging Tags, you can create custom structures, categorize content, and establish relationships between different elements within your application. Some common use cases for Cellmobs Tags include: App Navigation: Tags can be used to define the navigation structure of your app, allowing users to easily navigate between different sections or categories. By associating Tags with specific pages, views, or components, you can create a user-friendly and intuitive navigation experience. Content Categorization: Tags are an effective way to categorize and organize content within your app, such as articles, products, or services. By assigning relevant Tags to different content elements, users can easily search for, filter, and discover content that matches their interests or requirements. Product Category Hierarchy: In the case of a multi-vendor marketplace or e-commerce platform, Tags can be used to create a hierarchical structure for product categories. This hierarchy allows users to browse and explore products based on their categories and subcategories, simplifying the browsing experience and enhancing product discoverability. Organizing and Labeling Data: Tags can be associated with most Cellmobs entities, enabling you to organize and label your data in a manner that best suits your application's use cases. Whether you need to group related entities, highlight specific attributes, or create custom segments, Tags offer the flexibility to tailor your data organization to your unique requirements. By incorporating Cellmobs Tags into your app, you can create a more organized, efficient, and user-friendly experience, ensuring that users can easily find and interact with the content and features they need.","title":"Setting up tags"},{"location":"setup/setting-up-tags/#creating-tag-types","text":"Organizing Tags under TagTypes is an effective way to create multiple hierarchies and disambiguate between different contexts in which Tags are used. This approach enhances the flexibility and organization of your app by providing a structured and logical way to group Tags based on their purpose or context. Configure Tag Types TagTypes is a Cellmobs Vocabulary ( TAG_TYPE ) and are essentially categories that group Tags with similar functions or contexts. By organizing Tags under specific TagTypes, you can create separate hierarchies for different use cases within your app, ensuring that each Tag serves its intended purpose without causing confusion or overlap. For example, you may have TagTypes for different aspects of your app, such as: Navigation: This TagType could include Tags related to the app's navigation structure, such as 'Home', 'Products', or 'Contact'. Content Categories: This TagType might contain Tags for categorizing content, like 'News', 'Tutorials', or 'Reviews'. Product Categories: In an e-commerce app, this TagType could encompass Tags representing product categories, such as 'Electronics', 'Clothing', or 'Toys'. By using TagTypes to organize your Tags, you can create clear distinctions between different contexts, making it easier for both app developers and users to understand and interact with the Tag-based features and organization within your app. This structured approach not only simplifies the management of Tags but also enhances the overall user experience by providing a more organized and intuitive interface.","title":"Creating Tag Types"},{"location":"setup/setting-up-tags/#configure-a-tag-hierarchy","text":"The App Console Tag Editor and the Tag API enable you to create and configure tag hierarchies, as well as fetch and manipulate tags within your app efficiently.","title":"Configure a Tag Hierarchy"},{"location":"setup/setting-up-tags/#app-console-tag-editor","text":"The Tag Editor , accessible through the App Console, allows you to create, modify, and configure tag hierarchies visually. You can add new tags, define their relationships, and assign them to TagTypes, creating a structured organization for your application's tags. This user-friendly interface simplifies the process of creating and managing tag hierarchies, allowing you to see the structure and relationships between tags in a clear and intuitive manner. Configure Tag Hierarchies","title":"App Console Tag Editor"},{"location":"setup/setting-up-tags/#tag-api","text":"The Tag API provides a programmatic way to fetch and manipulate tags within your application. You can use the API to retrieve tags, create new ones, update existing tags, or delete them as needed. By leveraging the Tag API, you can integrate tag management directly into your app's logic, ensuring that tags are updated and manipulated in real-time as users interact with your application. curl --location 'https://web.cellmobs.com/v1/tag/list?size=200&types=CONTENT' \\ --header 'Authorization: Bearer <token>' Note To optimize performance and reduce unnecessary API load, it is recommended that developers cache tags within their application. By caching tags, your app can fetch and display tag-related data more quickly, avoiding the need for frequent API calls. This approach not only improves the efficiency of your app but also helps maintain a stable and responsive user experience.","title":"Tag API"},{"location":"setup/setting-up-workflow/","text":"Setting up Workflow \u00b6 Cellmobs offers a variety of tools that can be customized to support different workflows, catering to the unique needs of businesses, marketing, and data management processes. The platform leverages hundreds of system and application events that are triggered under specific conditions, which can be chained together to create dynamic and adaptable workflows. These events are tightly coupled with the core entities, such as Products, Organizations, Orders, Deals, and more. By utilizing different ProcessType values (e.g., SAVE , DELETE , MOVE , SYNC ) and EntityStatus values (e.g., PENDING , APPROVED ), developers have the flexibility to execute various tasks based on the specific event conditions. For example, developers can choose to: Update another Entity locally : When certain events occur, a local task can be executed to update related entities within the application. This allows for seamless data synchronization and ensures that the information remains accurate and up-to-date. Send data to external APIs : Developers can also configure events to interact with external APIs, such as Hubspot for CRM or Dropbox for file storage. This enables seamless integration with third-party tools and services, expanding the capabilities of the Cellmobs platform and enhancing the overall functionality of the application. By offering customizable tools and the ability to create tailored workflows, Cellmobs empowers developers to design and implement efficient, automated processes that adapt to the specific requirements of their applications. This flexibility not only streamlines operations but also drives innovation and enables businesses to optimize their use of the Cellmobs platform. Integrations \u00b6 Cellmobs recognizes the importance of seamless API integrations in today's interconnected world, and as such, it supports numerous API integrations that enable developers to connect their applications with popular cloud apps. This allows for the expansion of application capabilities, easier data synchronization, and overall enhanced functionality. Sample List of Integrations Furthermore, Cellmobs supports Zapier, a well-known platform that connects various apps and services through automated workflows. This integration enables developers to create custom, automated processes between Cellmobs and other platforms without the need for extensive coding or development work. In addition to these integrations, Cellmobs is currently working on a plugin framework designed to empower developers to register their own integrations with the platform. This feature will allow developers to create custom integrations tailored to their specific needs or even publish them for the broader Cellmobs development community. By offering a wide range of API integrations, support for Zapier, and an upcoming plugin framework, Cellmobs ensures that developers have the tools and flexibility necessary to create robust, interconnected applications that can easily adapt to the evolving needs of their users and businesses. Click here to learn how to configure Integrations . API Processes \u00b6 Before we get started Sample API Processes List Click here to learn how to configure API processes . Requirements \u00b6 Entity Requirements not only help ensure data consistency and integrity by enforcing specific conditions and constraints on entity attributes, they also can be used to trigger certain events that will kick off certain configured workflows and API processes. For instance, when an entity requirement validation fails and the EntityStatus changes, it can trigger a predefined event, such as sending an email or text message to a designated person who needs to be notified of the failure. This ensures that issues are promptly addressed and resolved, maintaining the overall stability and reliability of the application. By leveraging Entity Requirements in this manner, developers can create custom, event-driven workflows that respond to changes in the data model. This provides a more robust and dynamic system that can adapt to various situations, streamline processes, and improve overall efficiency. Entity Requirements Example Click here to learn how to configure entity requirements .","title":"Workflow"},{"location":"setup/setting-up-workflow/#setting-up-workflow","text":"Cellmobs offers a variety of tools that can be customized to support different workflows, catering to the unique needs of businesses, marketing, and data management processes. The platform leverages hundreds of system and application events that are triggered under specific conditions, which can be chained together to create dynamic and adaptable workflows. These events are tightly coupled with the core entities, such as Products, Organizations, Orders, Deals, and more. By utilizing different ProcessType values (e.g., SAVE , DELETE , MOVE , SYNC ) and EntityStatus values (e.g., PENDING , APPROVED ), developers have the flexibility to execute various tasks based on the specific event conditions. For example, developers can choose to: Update another Entity locally : When certain events occur, a local task can be executed to update related entities within the application. This allows for seamless data synchronization and ensures that the information remains accurate and up-to-date. Send data to external APIs : Developers can also configure events to interact with external APIs, such as Hubspot for CRM or Dropbox for file storage. This enables seamless integration with third-party tools and services, expanding the capabilities of the Cellmobs platform and enhancing the overall functionality of the application. By offering customizable tools and the ability to create tailored workflows, Cellmobs empowers developers to design and implement efficient, automated processes that adapt to the specific requirements of their applications. This flexibility not only streamlines operations but also drives innovation and enables businesses to optimize their use of the Cellmobs platform.","title":"Setting up Workflow"},{"location":"setup/setting-up-workflow/#integrations","text":"Cellmobs recognizes the importance of seamless API integrations in today's interconnected world, and as such, it supports numerous API integrations that enable developers to connect their applications with popular cloud apps. This allows for the expansion of application capabilities, easier data synchronization, and overall enhanced functionality. Sample List of Integrations Furthermore, Cellmobs supports Zapier, a well-known platform that connects various apps and services through automated workflows. This integration enables developers to create custom, automated processes between Cellmobs and other platforms without the need for extensive coding or development work. In addition to these integrations, Cellmobs is currently working on a plugin framework designed to empower developers to register their own integrations with the platform. This feature will allow developers to create custom integrations tailored to their specific needs or even publish them for the broader Cellmobs development community. By offering a wide range of API integrations, support for Zapier, and an upcoming plugin framework, Cellmobs ensures that developers have the tools and flexibility necessary to create robust, interconnected applications that can easily adapt to the evolving needs of their users and businesses. Click here to learn how to configure Integrations .","title":"Integrations"},{"location":"setup/setting-up-workflow/#api-processes","text":"Before we get started Sample API Processes List Click here to learn how to configure API processes .","title":"API Processes"},{"location":"setup/setting-up-workflow/#requirements","text":"Entity Requirements not only help ensure data consistency and integrity by enforcing specific conditions and constraints on entity attributes, they also can be used to trigger certain events that will kick off certain configured workflows and API processes. For instance, when an entity requirement validation fails and the EntityStatus changes, it can trigger a predefined event, such as sending an email or text message to a designated person who needs to be notified of the failure. This ensures that issues are promptly addressed and resolved, maintaining the overall stability and reliability of the application. By leveraging Entity Requirements in this manner, developers can create custom, event-driven workflows that respond to changes in the data model. This provides a more robust and dynamic system that can adapt to various situations, streamline processes, and improve overall efficiency. Entity Requirements Example Click here to learn how to configure entity requirements .","title":"Requirements"},{"location":"setup/setup-and-management/","text":"Setup and Management \u00b6 The are two main parts to creating, configuring, and managing your Cellmobs apps, the Your Apps section on the main Cellmobs website , and dedicated App Console sites that are created for each of the apps you provision. Your Apps \u00b6 The Your Apps section in the Cellmobs website provides users with a centralized location to manage the main aspects of their apps, such as creating new apps, generating new API keys, monitoring app activity and usage, and reviewing billing statements. App Endpoints and Keys Some of the key functionalities of the \"Your Apps\" section include: App Management allows you to provision, view and manage all your Cellmobs apps in one place. App Overview provides you with detailed insights into your app's performance, including metrics such as the number of requests, storage usage (both database and file), the number of apps, team members, and more. By monitoring these metrics, you can make informed decisions about scaling your app, optimizing performance, and allocating resources effectively. API Key Management enables you to generate new API keys for your applications and rotate old ones, ensuring that your app remains secure and up-to-date. This is crucial for maintaining the security and integrity of your applications and protecting sensitive data. Billing Statements offers a detailed overview of your billing statements, allowing you to track your app's expenses and ensure that you're staying within budget. You can review detailed breakdowns of your costs, identify areas for potential savings, and manage your billing preferences. App Console \u00b6 Each Cellmobs App is configured and managed through a Cellmobs App Console , a powerful and user-friendly interface that provides you with all the tools necessary to manage every aspect of your application. The console, accessible via a dedicated url that is configured whenever you create a new Cellmobs App in the cellmobs.com website (e.g. myapp.console.cellmobs.com ). Dedicated App Consoles By using the Cellmobs App Console, you can efficiently configure and manage all aspects of your application, ensuring a seamless and user-friendly experience. The console provides a centralized location for managing your app's resources, settings, and content, simplifying the app management process and allowing you to focus on delivering a top-notch experience for your users.","title":"Setup &amp Management"},{"location":"setup/setup-and-management/#setup-and-management","text":"The are two main parts to creating, configuring, and managing your Cellmobs apps, the Your Apps section on the main Cellmobs website , and dedicated App Console sites that are created for each of the apps you provision.","title":"Setup and Management"},{"location":"setup/setup-and-management/#your-apps","text":"The Your Apps section in the Cellmobs website provides users with a centralized location to manage the main aspects of their apps, such as creating new apps, generating new API keys, monitoring app activity and usage, and reviewing billing statements. App Endpoints and Keys Some of the key functionalities of the \"Your Apps\" section include: App Management allows you to provision, view and manage all your Cellmobs apps in one place. App Overview provides you with detailed insights into your app's performance, including metrics such as the number of requests, storage usage (both database and file), the number of apps, team members, and more. By monitoring these metrics, you can make informed decisions about scaling your app, optimizing performance, and allocating resources effectively. API Key Management enables you to generate new API keys for your applications and rotate old ones, ensuring that your app remains secure and up-to-date. This is crucial for maintaining the security and integrity of your applications and protecting sensitive data. Billing Statements offers a detailed overview of your billing statements, allowing you to track your app's expenses and ensure that you're staying within budget. You can review detailed breakdowns of your costs, identify areas for potential savings, and manage your billing preferences.","title":"Your Apps"},{"location":"setup/setup-and-management/#app-console","text":"Each Cellmobs App is configured and managed through a Cellmobs App Console , a powerful and user-friendly interface that provides you with all the tools necessary to manage every aspect of your application. The console, accessible via a dedicated url that is configured whenever you create a new Cellmobs App in the cellmobs.com website (e.g. myapp.console.cellmobs.com ). Dedicated App Consoles By using the Cellmobs App Console, you can efficiently configure and manage all aspects of your application, ensuring a seamless and user-friendly experience. The console provides a centralized location for managing your app's resources, settings, and content, simplifying the app management process and allowing you to focus on delivering a top-notch experience for your users.","title":"App Console"},{"location":"setup/taxonomy/","text":"Taxonomy & Localization \u00b6 Taxonomies and labeling play a crucial role in making an application transparent, consistent, and understandable. They are vital components of the information architecture that underpin the success of any application. Taxonomies help organize, classify, and categorize information, making it easier for users to navigate and find the content they need. Labeling, on the other hand, ensures that the terminology used in the application is consistent and easily understood by users. Cellmobs recognizes the importance of taxonomies and labeling and has built-in support for localization, tag hierarchies, and a wide range of vocabularies. This enables users to define labels, categories, and classifications that are tailored to their specific use cases and business verticals. By offering a flexible and comprehensive approach to taxonomies and labeling, Cellmobs ensures that applications built on its platform can cater to diverse audiences and adapt to various business requirements. Some of the key benefits of using taxonomies and labeling in your application include: Improved User Experience : By organizing information in a consistent and logical manner, taxonomies and labeling help users quickly find and access the content they need, leading to a better overall user experience. Enhanced Navigation : Taxonomies and labeling make it easier for users to search and discover content within the application, as they provide a clear structure and classification system that simplifies the search process and navigation. Consistent Terminology : Labeling ensures that the application uses consistent terminology across all its components, which helps users understand and interact with the system more effectively. Localization : Cellmobs' support for localization allows applications to cater to users in different regions and languages, ensuring a more inclusive and accessible experience. Customization : With a large number of vocabularies and the ability to define custom labels and categories, Cellmobs allows users to create taxonomies and labeling systems that match their unique business needs and requirements. Vocabularies \u00b6 Vocabularies Click here to learn how to configure vocabularies . Localization \u00b6 Taxonomy & Localization Click here to learn how to configure taxnonomies . Tags & Types \u00b6 Cellmobs Tags are a versatile and powerful feature that can be utilized in various ways to enhance the organization and functionality of your app. Click here to learn how to configure tags .","title":"Taxonomy"},{"location":"setup/taxonomy/#taxonomy-localization","text":"Taxonomies and labeling play a crucial role in making an application transparent, consistent, and understandable. They are vital components of the information architecture that underpin the success of any application. Taxonomies help organize, classify, and categorize information, making it easier for users to navigate and find the content they need. Labeling, on the other hand, ensures that the terminology used in the application is consistent and easily understood by users. Cellmobs recognizes the importance of taxonomies and labeling and has built-in support for localization, tag hierarchies, and a wide range of vocabularies. This enables users to define labels, categories, and classifications that are tailored to their specific use cases and business verticals. By offering a flexible and comprehensive approach to taxonomies and labeling, Cellmobs ensures that applications built on its platform can cater to diverse audiences and adapt to various business requirements. Some of the key benefits of using taxonomies and labeling in your application include: Improved User Experience : By organizing information in a consistent and logical manner, taxonomies and labeling help users quickly find and access the content they need, leading to a better overall user experience. Enhanced Navigation : Taxonomies and labeling make it easier for users to search and discover content within the application, as they provide a clear structure and classification system that simplifies the search process and navigation. Consistent Terminology : Labeling ensures that the application uses consistent terminology across all its components, which helps users understand and interact with the system more effectively. Localization : Cellmobs' support for localization allows applications to cater to users in different regions and languages, ensuring a more inclusive and accessible experience. Customization : With a large number of vocabularies and the ability to define custom labels and categories, Cellmobs allows users to create taxonomies and labeling systems that match their unique business needs and requirements.","title":"Taxonomy &amp; Localization"},{"location":"setup/taxonomy/#vocabularies","text":"Vocabularies Click here to learn how to configure vocabularies .","title":"Vocabularies"},{"location":"setup/taxonomy/#localization","text":"Taxonomy & Localization Click here to learn how to configure taxnonomies .","title":"Localization"},{"location":"setup/taxonomy/#tags-types","text":"Cellmobs Tags are a versatile and powerful feature that can be utilized in various ways to enhance the organization and functionality of your app. Click here to learn how to configure tags .","title":"Tags &amp; Types"},{"location":"setup/your-app-organization/","text":"Your App Organization \u00b6 In the Cellmobs platform, each Tenant App is associated with a primary default Organization. This default Organization serves as the foundation for configuring the main settings of an app, ensuring that it operates according to the desired requirements. When a new app is created, a new blank database is automatically generated for that app. This database includes the default app configuration, which can be customized to meet the specific needs of the app. Alongside the default app configuration, a sysadmin account is also created within the primary default Organization. The system administrator account with ROLE_SYSADMIN is provisioned with the credentials of the primary Cellmobs customer account, granting the account holder full administrative access to the app and its associated settings. This enables the account holder to manage and modify the app configuration, user roles, permissions, and other essential aspects of the app as needed. By utilizing a primary default Organization and sysadmin account, the Cellmobs platform simplifies the initial setup process and ensures a consistent and secure foundation for every Tenant App. This approach allows for a seamless transition from app creation to customization and ongoing management, providing a reliable and user-friendly experience for app developers and administrators. Settings \u00b6 In the Celmobs platform, Organization settings play a crucial role in configuring and managing various aspects of your application. These settings help define the appearance, behavior, and structure of your app and can be customized to suit your specific requirements. Some of the essential Organization settings include: Global System Property : This setting establishes the application organization ID, which is referenced throughout the application. The organization ID serves as a unique identifier for the main organiztion of your app, allowing the platform to associate resources, user roles, and permissions with the correct organization. Image Settings : Image settings define the default dimensions and MIME types for common application image FileTypes, such as organization logos, user avatars, product images, and web page images. By configuring these settings, you can ensure that images are displayed consistently and appropriately across your app, and on differen device types (Mobile, Desktop, or Tablets). Real World Locations : This setting allows you to define the physical locations associated with your organization, such as offices, stores, with geofences, or warehouses. By specifying real-world locations, you can manage resources, inventory, and other location-specific data within your application. Organization Members : Organization members settings enable you to manage the users associated with your organization. You can add, remove, or modify user roles and permissions, ensuring that each user has the appropriate level of access and functionality within the app. Processor Credentials : Processor credentials settings allow you to configure the payment processing and authentication details for your application. These settings are essential for handling transactions, subscriptions, and other financial aspects of your app. Subscription Plans : Subscription plan settings enable you to define and manage the various products, pricing tiers, features, and benefits associated with your application. By customizing these settings, you can create a range of subscription options tailored to the needs and preferences of your users. Use Cases \u00b6 Organizations in the Cellmobs platform are a flexible and versatile feature that can be employed in various contexts and for different use cases. They serve as a way to group and manage users, permissions, and resources, catering to the unique requirements of different business verticals and application scenarios. Some common contexts and use cases for Organizations include: Marketplaces : In a marketplace setting, Organizations can represent different suppliers, buyers, or sellers. They facilitate the management of transactions, listings, and user interactions specific to each Organization, enabling a seamless and organized marketplace experience. Communities : For community-based applications, Organizations can represent distinct user groups, clubs, or interest areas. They help manage discussions, content sharing, and user interactions within the community, fostering a sense of belonging and engagement. E-commerce : In an e-commerce context, Organizations can denote various departments or teams within a company, such as marketing, sales, or customer support. This organizational structure allows for effective resource allocation and management across different aspects of the business. Business Verticals : Organizations can be tailored to suit the needs of different business verticals, such as finance, healthcare, or education. They enable the management of user roles, permissions, and resources specific to each industry, ensuring compliance with industry-specific regulations and requirements. Partnerships: Organizations can also represent business partners, affiliates, or collaborators. They provide a structured way to manage shared resources, data, and communications, fostering productive and organized collaborations. User Groups: In a company setting, Organizations can be used to represent different departments or teams. This structure enables effective communication, task management, and resource sharing among team members, promoting collaboration and efficiency within the company. The flexibility and adaptability of Organizations within the Cellmobs platform enable you to tailor the feature to your specific application requirements and use cases. By leveraging Organizations, you can create a more organized, efficient, and user-friendly experience, ensuring that users can easily navigate and interact with the various aspects of your app. Click here to learn how to configure Organizations .","title":"Your App Organization"},{"location":"setup/your-app-organization/#your-app-organization","text":"In the Cellmobs platform, each Tenant App is associated with a primary default Organization. This default Organization serves as the foundation for configuring the main settings of an app, ensuring that it operates according to the desired requirements. When a new app is created, a new blank database is automatically generated for that app. This database includes the default app configuration, which can be customized to meet the specific needs of the app. Alongside the default app configuration, a sysadmin account is also created within the primary default Organization. The system administrator account with ROLE_SYSADMIN is provisioned with the credentials of the primary Cellmobs customer account, granting the account holder full administrative access to the app and its associated settings. This enables the account holder to manage and modify the app configuration, user roles, permissions, and other essential aspects of the app as needed. By utilizing a primary default Organization and sysadmin account, the Cellmobs platform simplifies the initial setup process and ensures a consistent and secure foundation for every Tenant App. This approach allows for a seamless transition from app creation to customization and ongoing management, providing a reliable and user-friendly experience for app developers and administrators.","title":"Your App Organization"},{"location":"setup/your-app-organization/#settings","text":"In the Celmobs platform, Organization settings play a crucial role in configuring and managing various aspects of your application. These settings help define the appearance, behavior, and structure of your app and can be customized to suit your specific requirements. Some of the essential Organization settings include: Global System Property : This setting establishes the application organization ID, which is referenced throughout the application. The organization ID serves as a unique identifier for the main organiztion of your app, allowing the platform to associate resources, user roles, and permissions with the correct organization. Image Settings : Image settings define the default dimensions and MIME types for common application image FileTypes, such as organization logos, user avatars, product images, and web page images. By configuring these settings, you can ensure that images are displayed consistently and appropriately across your app, and on differen device types (Mobile, Desktop, or Tablets). Real World Locations : This setting allows you to define the physical locations associated with your organization, such as offices, stores, with geofences, or warehouses. By specifying real-world locations, you can manage resources, inventory, and other location-specific data within your application. Organization Members : Organization members settings enable you to manage the users associated with your organization. You can add, remove, or modify user roles and permissions, ensuring that each user has the appropriate level of access and functionality within the app. Processor Credentials : Processor credentials settings allow you to configure the payment processing and authentication details for your application. These settings are essential for handling transactions, subscriptions, and other financial aspects of your app. Subscription Plans : Subscription plan settings enable you to define and manage the various products, pricing tiers, features, and benefits associated with your application. By customizing these settings, you can create a range of subscription options tailored to the needs and preferences of your users.","title":"Settings"},{"location":"setup/your-app-organization/#use-cases","text":"Organizations in the Cellmobs platform are a flexible and versatile feature that can be employed in various contexts and for different use cases. They serve as a way to group and manage users, permissions, and resources, catering to the unique requirements of different business verticals and application scenarios. Some common contexts and use cases for Organizations include: Marketplaces : In a marketplace setting, Organizations can represent different suppliers, buyers, or sellers. They facilitate the management of transactions, listings, and user interactions specific to each Organization, enabling a seamless and organized marketplace experience. Communities : For community-based applications, Organizations can represent distinct user groups, clubs, or interest areas. They help manage discussions, content sharing, and user interactions within the community, fostering a sense of belonging and engagement. E-commerce : In an e-commerce context, Organizations can denote various departments or teams within a company, such as marketing, sales, or customer support. This organizational structure allows for effective resource allocation and management across different aspects of the business. Business Verticals : Organizations can be tailored to suit the needs of different business verticals, such as finance, healthcare, or education. They enable the management of user roles, permissions, and resources specific to each industry, ensuring compliance with industry-specific regulations and requirements. Partnerships: Organizations can also represent business partners, affiliates, or collaborators. They provide a structured way to manage shared resources, data, and communications, fostering productive and organized collaborations. User Groups: In a company setting, Organizations can be used to represent different departments or teams. This structure enables effective communication, task management, and resource sharing among team members, promoting collaboration and efficiency within the company. The flexibility and adaptability of Organizations within the Cellmobs platform enable you to tailor the feature to your specific application requirements and use cases. By leveraging Organizations, you can create a more organized, efficient, and user-friendly experience, ensuring that users can easily navigate and interact with the various aspects of your app. Click here to learn how to configure Organizations .","title":"Use Cases"}]}